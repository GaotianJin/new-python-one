<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4"> 
	<display-name>fms</display-name>

	<context-param>  
        <param-name>webAppRootKey</param-name>  
        <param-value>fms.webroot</param-value>  
	</context-param>
	<listener>  
        <listener-class>com.sinosoft.core.spring.ApplicationListener</listener-class>  
	</listener> 

	<!-- 字符集 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>com.sinosoft.core.spring.MyCharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>excludePatterns</param-name>
			<param-value>/MessagePage.jsp</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- session失效 -->
	<filter>
		<filter-name>sessionFilter</filter-name>
		<filter-class>com.sinosoft.core.spring.SessionFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>sessionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- jboss集群压力分离session复制-->
	<!--<distributable />    -->
	<!--Web Service 配置 start -->
	<!-- <servlet> 
 		<servlet-name>AxisServlet</servlet-name> 
 		<servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class> 
 	</servlet> 
 	<servlet-mapping> 
 		<servlet-name>AxisServlet</servlet-name> 
 		<url-pattern>/services/*</url-pattern> 
 	</servlet-mapping>  -->
 	
 	<servlet> 
 		<servlet-name>CXFService</servlet-name> 
 		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class> 
	</servlet> 
	<servlet-mapping> 
		<servlet-name>CXFService</servlet-name> 
		<url-pattern>/services/*</url-pattern> 
	</servlet-mapping> 
	
	<!--Web Service 配置 end -->

	<!--Log4j configuration start -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<!--Log4j configuration end -->

	<!--Spring MVC configuration start -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		      classpath:spring/infrastructure-persistence.xml
		      classpath:spring/interfaces.xml
		      classpath:spring/security.xml
		      classpath:spring/webservice.xml 
		      classpath:quartz/quartz.xml     
		</param-value>
	</context-param>


	<!--
		<servlet> 
		<servlet-name>DisplayChart</servlet-name> <servlet-class>org.jfree.chart.servlet.DisplayChart</servlet-class> 
		</servlet>
		 <servlet-mapping> 
		 <servlet-name>DisplayChart</servlet-name> <url-pattern>/servlet/DisplayChart</url-pattern> 
		</servlet-mapping> 
	-->

	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!--spring batch admin配置 <servlet> <servlet-name>batch</servlet-name> <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> 
		<init-param> <param-name>contextConfigLocation</param-name> <param-value>classpath*:/org/springframework/batch/admin/web/resources/servlet-config.xml, 
		classpath*:/org/springframework/batch/admin/web/resources/webapp-config.xml 
		</param-value> </init-param> <load-on-startup>1</load-on-startup> </servlet> 
		<servlet-mapping> <servlet-name>batch</servlet-name> <url-pattern>/batch/*</url-pattern> 
		</servlet-mapping> -->

	<!-- <servlet> <servlet-name>jasperSpring</servlet-name> <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> 
		<load-on-startup>1</load-on-startup> </servlet> <servlet-mapping> <servlet-name>jasperSpring</servlet-name> 
		<url-pattern>*.csv</url-pattern> </servlet-mapping> <servlet-mapping> <servlet-name>jasperSpring</servlet-name> 
		<url-pattern>*.html</url-pattern> </servlet-mapping> <servlet-mapping> <servlet-name>jasperSpring</servlet-name> 
		<url-pattern>*.pdf</url-pattern> </servlet-mapping> <servlet-mapping> <servlet-name>jasperSpring</servlet-name> 
		<url-pattern>*.xls</url-pattern> </servlet-mapping> -->

	<!--Spring MVC configuration end -->

	<!--Hibernate Open Session in View Filter -->
	<!-- 如果在应用中没有使用OpenSessionInViewFilter或者OpenSessionInViewInterceptor， session会在transaction结束后关闭。在这里设置了，就能够在jsp中使用session，最主要是能够使用延时加载 -->
<!-- 	<filter>
		<filter-name>hibernateFilter</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->
	
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 扩展spring bean的作用域有request,session,global session等 -->
	<listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener
		</listener-class>
	</listener>

    <servlet-mapping>  
	    <servlet-name>default</servlet-name>  
	    <!-- <url-pattern>/js/*</url-pattern>  
	    <url-pattern>/css/*</url-pattern>  
	    <url-pattern>/images/*</url-pattern>  
	    <url-pattern>/fonts/*</url-pattern> -->  
	    <url-pattern>/ueditor1.1.0/jsp/upload/image/*</url-pattern> 
	</servlet-mapping>

	<!--Mule将springmvc做为父容器，必须在spring启动后加载 -->
	<!--Mule configuration (Mule format) <context-param> <param-name>org.mule.config</param-name> 
		<param-value> mule/jbpm/start.xml, mule/thirdpayment/bccmg_payment-apply.xml, 
		mule/common.xml </param-value> </context-param> <listener> <listener-class>org.mule.config.builders.MuleXmlBuilderContextListener</listener-class> 
		</listener> <servlet> <servlet-name>muleServlet</servlet-name> <servlet-class>org.mule.transport.servlet.MuleReceiverServlet</servlet-class> 
		<load-on-startup>100</load-on-startup> </servlet> <servlet-mapping> <servlet-name>muleServlet</servlet-name> 
		<url-pattern>/service/*</url-pattern> </servlet-mapping> -->
	<!--Mule configuration end -->

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
	<jsp-config>
		<jsp-property-group>
			<url-pattern>/WEB-INF/view/*</url-pattern>
			<scripting-invalid>false</scripting-invalid>
			<!--<include-prelude>/WEB-INF/jspf/include.jspf</include-prelude>-->
		</jsp-property-group>
	</jsp-config>
	
	<welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>
