package com.sinosoft.core.db.model;

import java.util.ArrayList;
import java.util.List;

public class CalModeExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	public CalModeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andCalIdIsNull() {
			addCriterion("CAL_ID is null");
			return (Criteria) this;
		}

		public Criteria andCalIdIsNotNull() {
			addCriterion("CAL_ID is not null");
			return (Criteria) this;
		}

		public Criteria andCalIdEqualTo(Integer value) {
			addCriterion("CAL_ID =", value, "calId");
			return (Criteria) this;
		}

		public Criteria andCalIdNotEqualTo(Integer value) {
			addCriterion("CAL_ID <>", value, "calId");
			return (Criteria) this;
		}

		public Criteria andCalIdGreaterThan(Integer value) {
			addCriterion("CAL_ID >", value, "calId");
			return (Criteria) this;
		}

		public Criteria andCalIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("CAL_ID >=", value, "calId");
			return (Criteria) this;
		}

		public Criteria andCalIdLessThan(Integer value) {
			addCriterion("CAL_ID <", value, "calId");
			return (Criteria) this;
		}

		public Criteria andCalIdLessThanOrEqualTo(Integer value) {
			addCriterion("CAL_ID <=", value, "calId");
			return (Criteria) this;
		}

		public Criteria andCalIdIn(List<Integer> values) {
			addCriterion("CAL_ID in", values, "calId");
			return (Criteria) this;
		}

		public Criteria andCalIdNotIn(List<Integer> values) {
			addCriterion("CAL_ID not in", values, "calId");
			return (Criteria) this;
		}

		public Criteria andCalIdBetween(Integer value1, Integer value2) {
			addCriterion("CAL_ID between", value1, value2, "calId");
			return (Criteria) this;
		}

		public Criteria andCalIdNotBetween(Integer value1, Integer value2) {
			addCriterion("CAL_ID not between", value1, value2, "calId");
			return (Criteria) this;
		}

		public Criteria andCalCodeIsNull() {
			addCriterion("CAL_CODE is null");
			return (Criteria) this;
		}

		public Criteria andCalCodeIsNotNull() {
			addCriterion("CAL_CODE is not null");
			return (Criteria) this;
		}

		public Criteria andCalCodeEqualTo(String value) {
			addCriterion("CAL_CODE =", value, "calCode");
			return (Criteria) this;
		}

		public Criteria andCalCodeNotEqualTo(String value) {
			addCriterion("CAL_CODE <>", value, "calCode");
			return (Criteria) this;
		}

		public Criteria andCalCodeGreaterThan(String value) {
			addCriterion("CAL_CODE >", value, "calCode");
			return (Criteria) this;
		}

		public Criteria andCalCodeGreaterThanOrEqualTo(String value) {
			addCriterion("CAL_CODE >=", value, "calCode");
			return (Criteria) this;
		}

		public Criteria andCalCodeLessThan(String value) {
			addCriterion("CAL_CODE <", value, "calCode");
			return (Criteria) this;
		}

		public Criteria andCalCodeLessThanOrEqualTo(String value) {
			addCriterion("CAL_CODE <=", value, "calCode");
			return (Criteria) this;
		}

		public Criteria andCalCodeLike(String value) {
			addCriterion("CAL_CODE like", value, "calCode");
			return (Criteria) this;
		}

		public Criteria andCalCodeNotLike(String value) {
			addCriterion("CAL_CODE not like", value, "calCode");
			return (Criteria) this;
		}

		public Criteria andCalCodeIn(List<String> values) {
			addCriterion("CAL_CODE in", values, "calCode");
			return (Criteria) this;
		}

		public Criteria andCalCodeNotIn(List<String> values) {
			addCriterion("CAL_CODE not in", values, "calCode");
			return (Criteria) this;
		}

		public Criteria andCalCodeBetween(String value1, String value2) {
			addCriterion("CAL_CODE between", value1, value2, "calCode");
			return (Criteria) this;
		}

		public Criteria andCalCodeNotBetween(String value1, String value2) {
			addCriterion("CAL_CODE not between", value1, value2, "calCode");
			return (Criteria) this;
		}

		public Criteria andCalTypeIsNull() {
			addCriterion("CAL_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andCalTypeIsNotNull() {
			addCriterion("CAL_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andCalTypeEqualTo(String value) {
			addCriterion("CAL_TYPE =", value, "calType");
			return (Criteria) this;
		}

		public Criteria andCalTypeNotEqualTo(String value) {
			addCriterion("CAL_TYPE <>", value, "calType");
			return (Criteria) this;
		}

		public Criteria andCalTypeGreaterThan(String value) {
			addCriterion("CAL_TYPE >", value, "calType");
			return (Criteria) this;
		}

		public Criteria andCalTypeGreaterThanOrEqualTo(String value) {
			addCriterion("CAL_TYPE >=", value, "calType");
			return (Criteria) this;
		}

		public Criteria andCalTypeLessThan(String value) {
			addCriterion("CAL_TYPE <", value, "calType");
			return (Criteria) this;
		}

		public Criteria andCalTypeLessThanOrEqualTo(String value) {
			addCriterion("CAL_TYPE <=", value, "calType");
			return (Criteria) this;
		}

		public Criteria andCalTypeLike(String value) {
			addCriterion("CAL_TYPE like", value, "calType");
			return (Criteria) this;
		}

		public Criteria andCalTypeNotLike(String value) {
			addCriterion("CAL_TYPE not like", value, "calType");
			return (Criteria) this;
		}

		public Criteria andCalTypeIn(List<String> values) {
			addCriterion("CAL_TYPE in", values, "calType");
			return (Criteria) this;
		}

		public Criteria andCalTypeNotIn(List<String> values) {
			addCriterion("CAL_TYPE not in", values, "calType");
			return (Criteria) this;
		}

		public Criteria andCalTypeBetween(String value1, String value2) {
			addCriterion("CAL_TYPE between", value1, value2, "calType");
			return (Criteria) this;
		}

		public Criteria andCalTypeNotBetween(String value1, String value2) {
			addCriterion("CAL_TYPE not between", value1, value2, "calType");
			return (Criteria) this;
		}

		public Criteria andCalNameIsNull() {
			addCriterion("CAL_NAME is null");
			return (Criteria) this;
		}

		public Criteria andCalNameIsNotNull() {
			addCriterion("CAL_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andCalNameEqualTo(String value) {
			addCriterion("CAL_NAME =", value, "calName");
			return (Criteria) this;
		}

		public Criteria andCalNameNotEqualTo(String value) {
			addCriterion("CAL_NAME <>", value, "calName");
			return (Criteria) this;
		}

		public Criteria andCalNameGreaterThan(String value) {
			addCriterion("CAL_NAME >", value, "calName");
			return (Criteria) this;
		}

		public Criteria andCalNameGreaterThanOrEqualTo(String value) {
			addCriterion("CAL_NAME >=", value, "calName");
			return (Criteria) this;
		}

		public Criteria andCalNameLessThan(String value) {
			addCriterion("CAL_NAME <", value, "calName");
			return (Criteria) this;
		}

		public Criteria andCalNameLessThanOrEqualTo(String value) {
			addCriterion("CAL_NAME <=", value, "calName");
			return (Criteria) this;
		}

		public Criteria andCalNameLike(String value) {
			addCriterion("CAL_NAME like", value, "calName");
			return (Criteria) this;
		}

		public Criteria andCalNameNotLike(String value) {
			addCriterion("CAL_NAME not like", value, "calName");
			return (Criteria) this;
		}

		public Criteria andCalNameIn(List<String> values) {
			addCriterion("CAL_NAME in", values, "calName");
			return (Criteria) this;
		}

		public Criteria andCalNameNotIn(List<String> values) {
			addCriterion("CAL_NAME not in", values, "calName");
			return (Criteria) this;
		}

		public Criteria andCalNameBetween(String value1, String value2) {
			addCriterion("CAL_NAME between", value1, value2, "calName");
			return (Criteria) this;
		}

		public Criteria andCalNameNotBetween(String value1, String value2) {
			addCriterion("CAL_NAME not between", value1, value2, "calName");
			return (Criteria) this;
		}

		public Criteria andCalSqlIsNull() {
			addCriterion("CAL_SQL is null");
			return (Criteria) this;
		}

		public Criteria andCalSqlIsNotNull() {
			addCriterion("CAL_SQL is not null");
			return (Criteria) this;
		}

		public Criteria andCalSqlEqualTo(String value) {
			addCriterion("CAL_SQL =", value, "calSql");
			return (Criteria) this;
		}

		public Criteria andCalSqlNotEqualTo(String value) {
			addCriterion("CAL_SQL <>", value, "calSql");
			return (Criteria) this;
		}

		public Criteria andCalSqlGreaterThan(String value) {
			addCriterion("CAL_SQL >", value, "calSql");
			return (Criteria) this;
		}

		public Criteria andCalSqlGreaterThanOrEqualTo(String value) {
			addCriterion("CAL_SQL >=", value, "calSql");
			return (Criteria) this;
		}

		public Criteria andCalSqlLessThan(String value) {
			addCriterion("CAL_SQL <", value, "calSql");
			return (Criteria) this;
		}

		public Criteria andCalSqlLessThanOrEqualTo(String value) {
			addCriterion("CAL_SQL <=", value, "calSql");
			return (Criteria) this;
		}

		public Criteria andCalSqlLike(String value) {
			addCriterion("CAL_SQL like", value, "calSql");
			return (Criteria) this;
		}

		public Criteria andCalSqlNotLike(String value) {
			addCriterion("CAL_SQL not like", value, "calSql");
			return (Criteria) this;
		}

		public Criteria andCalSqlIn(List<String> values) {
			addCriterion("CAL_SQL in", values, "calSql");
			return (Criteria) this;
		}

		public Criteria andCalSqlNotIn(List<String> values) {
			addCriterion("CAL_SQL not in", values, "calSql");
			return (Criteria) this;
		}

		public Criteria andCalSqlBetween(String value1, String value2) {
			addCriterion("CAL_SQL between", value1, value2, "calSql");
			return (Criteria) this;
		}

		public Criteria andCalSqlNotBetween(String value1, String value2) {
			addCriterion("CAL_SQL not between", value1, value2, "calSql");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("REMARK is null");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("REMARK is not null");
			return (Criteria) this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("REMARK =", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("REMARK <>", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("REMARK >", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("REMARK >=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("REMARK <", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("REMARK <=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("REMARK like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("REMARK not like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkIn(List<String> values) {
			addCriterion("REMARK in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotIn(List<String> values) {
			addCriterion("REMARK not in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("REMARK between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("REMARK not between", value1, value2, "remark");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table t_cal_mode
	 * @mbggenerated  Mon Nov 16 15:17:52 CST 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cal_mode
     *
     * @mbggenerated do_not_delete_during_merge Thu Nov 12 11:46:16 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}