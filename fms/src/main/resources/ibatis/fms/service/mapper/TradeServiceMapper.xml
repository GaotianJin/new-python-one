<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
  
<mapper namespace="com.fms.service.mapper.TradeServiceMapper">
	<!-- S -->
	<sql id="queryTradeInfoListPrivilegeControl">
		<!-- 以下是查询权限控制 3-本机构及下属机构数据，2-本机构数据，1-本人数据-->
    	<if test='rolePrivilege!=null and rolePrivilege!="" and rolePrivilege=="3"'>
    		AND A.OPER_COM_ID IN(
   				<!-- SELECT C.COM_ID
				FROM T_DEF_COM C 
				WHERE C.RC_STATE = 'E'
					AND C.STATE='01'
					START WITH C.COM_ID = #{operComId} CONNECT BY PRIOR C.COM_ID = C.PARENT_COM_ID -->
					select C.COM_ID from t_def_com C where FIND_IN_SET(C.COM_ID, queryChildrenNodeInfo(#{operComId}))
					AND C.STATE='01'
					
    		)
    	</if>
    	<if test='rolePrivilege!=null and rolePrivilege!="" and rolePrivilege=="2" '>
    		AND A.OPER_COM_ID = #{operComId} 
    	</if>
    	<if test='rolePrivilege!=null and rolePrivilege!="" and rolePrivilege=="1" '>
    		AND (EXISTS(SELECT'X' FROM T_AGENT WHERE USER_ID = #{createUserId} AND AGENT_ID =A.AGENT_ID ) 
    					OR A.CREATE_USER_ID = #{createUserId})
    	</if>
    	<!-- 权限控制结束 -->
	</sql>
<!-- s -->
  	<sql id="tradeInputQueryTradeListCondition">
  		<if test="tradeNo != null and tradeNo !=''" >
      		AND A.TRADE_NO like '%${tradeNo}%'
    	</if>
    	<if test="tradeComId != null and tradeComId !=''" >
      		AND A.TRADE_COM_ID = #{tradeComId}
    	</if>
    	<if test="agentId != null and agentId !=''" >
      		AND A.AGENT_ID = #{agentId}
    	</if>
    	<if test="tradeType != null and tradeType !=''" >
      		AND A.TRADE_TYPE = #{tradeType}
    	</if>
    	<if test="tradeInfoNo != null and tradeInfoNo !=''" >
      		AND A.TRADE_INFO_NO like '%${tradeInfoNo}%'
    	</if>
    	<if test="tradeDateStart != null and tradeDateStart !=''" >
      		AND A.TRADE_DATE <![CDATA[>=]]> '${tradeDateStart}'
    	</if>
    	<if test="tradeDateEnd != null and tradeDateEnd !=''" >
      		AND A.TRADE_DATE <![CDATA[<=]]> '${tradeDateEnd}'
    	</if>
    	<if test="currency != null and currency !=''" >
      		AND A.CURRENCY = #{currency}
    	</if>
    	<if test="inputDateStart != null and inputDateStart !=''" >
      		AND A.TRADE_INPUT_DATE <![CDATA[>=]]> '${inputDateStart}'
    	</if>
    	<if test="inputDateEnd != null and inputDateEnd !=''" >
      		AND A.TRADE_INPUT_DATE  <![CDATA[<=]]> '${inputDateEnd}'
    	</if>
    	<if test="tradeStaus != null and tradeStaus !=''" >
      		AND A.trade_staus = #{tradeStaus}
    	</if>
    	<if test="chnName!=null and chnName !=''">
    		AND EXISTS(SELECT 'X' FROM T_TRADE_CUST_INFO B,T_CUST_BASE_INFO C
                        WHERE B.TRADE_INFO_ID = A.TRADE_INFO_ID AND B.CUST_BASE_INFO_ID = C.CUST_BASE_INFO_ID
                        AND B.RC_STATE = 'E' AND C.CHN_NAME LIKE '%${chnName}%')
    	</if>
    	<if test="productId!=null and productId !=''">
    		AND EXISTS(SELECT 'X' FROM T_TRADE_PRODUCT_INFO B,T_PD_PRODUCT C
                       WHERE B.PRODUCT_ID = C.PRODUCT_ID AND B.TRADE_INFO_ID = A.TRADE_INFO_ID AND C.PRODUCT_ID = #{productId}
                       AND C.STATUS = '2'
                       AND B.RC_STATE = 'E')
    	</if>
    	<if test="isPrintTradeConfirmPDF!=null and isPrintTradeConfirmPDF !=''">
    		AND	 CASE WHEN #{isPrintTradeConfirmPDF} = '01'	
    			THEN (
						SELECT
							COUNT(1)
						FROM
							t_def_print_info x
						WHERE
							x.business_no = A.trade_no
						AND x.business_type = '1'
						AND x.rc_state = 'E'
					) > 0
				ELSE 
					(
						SELECT
							COUNT(1)
						FROM
							t_def_print_info x
						WHERE
							x.business_no = A.trade_no
						AND x.business_type = '1'
						AND x.rc_state = 'E'
					) <![CDATA[<]]> 1 END
    	</if>
    	<if test="userRole != null and userRole !='' and userRole='03'" >
      		<!-- AND (A.INPUT_OPERATOR = #{userRole} 
      		    or a.CHECK_OPERATOR = #{userRole} 
      		    or a.AUDIT_OPERATOR = #{userRole}) -->
    	</if>
  	</sql>
  
	<!-- s -->  
  	<select id="tradeInputQueryTradeListPage" parameterType="java.util.Map" resultType="java.util.Map">
  		select tAlias.* from(
         	select nAlias.*, @rownum:=@rownum+1 r_rownum from
         	(
         		SELECT (SELECT @rownum := 0),
         		       a.trade_info_id "tradeInfoId",
				       A.TRADE_NO "tradeNo",
				     (SELECT COUNT(*) FROM T_DEF_PRINT_INFO PR WHERE PR.BUSINESS_NO = A.TRADE_NO AND PR.DOUCMENT_TYPE = '01') "printBuyTimes",
                     (SELECT COUNT(*) FROM T_DEF_PRINT_INFO PR WHERE PR.BUSINESS_NO = A.TRADE_NO AND PR.DOUCMENT_TYPE = '02') "printConfirmTimes",
				       A.TRADE_TYPE "tradeType",
				      CASE a.trade_Type WHEN 2 THEN (select MAX(c.CHN_NAME)
                          from T_TRADE_CUST_ROLE_INFO b,
                               T_CUST_BASE_INFO       c,
                               t_trade_cust_info      d
                         where D.TRADE_INFO_ID = a.TRADE_INFO_ID
                           and D.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
                           and b.trade_cust_info_id = d.trade_cust_info_id
                           and b.role_type = '1'
                           and b.rc_state = 'E'
                           AND d.rc_state = 'E'
                           and @rownum :=1) WHEN 1 THEN
                       ( select MAX(c.CHN_NAME)
                          from t_trade_cust_info b,
                               T_CUST_BASE_INFO  c
                         where b.TRADE_INFO_ID = a.TRADE_INFO_ID
                           and b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
                           and b.rc_state = 'E'
                           )END "tradeAppant",
				       A.TRADE_INFO_NO "tradeInfoNo",
				       DATE_FORMAT(A.TRADE_DATE, '%Y-%m-%d') "tradeDate",
				       DATE_FORMAT(a.trade_input_date, '%Y-%m-%d') "tradeInputDate",
				       A.CURRENCY "currency",
				       A.AGENT_ID "agentId",
				       (select CONCAT(GROUP_CONCAT(e.product_name),'') from t_trade_product_info_view d,t_pd_product e 
				       		where d.TRADE_INFO_ID =a.trade_info_id and d.PRODUCT_ID = e.product_id) "productName",
				       	(
					SELECT
						e.product_id
					FROM
						t_trade_product_info_view d,
						t_pd_product e
					WHERE
						d.TRADE_INFO_ID = a.trade_info_id
					AND d.PRODUCT_ID = e.product_id
				) "productId",
				CASE WHEN 
				(
				SELECT e.product_sub_type
				FROM t_pd_product e, t_trade_product_info_view d 
				WHERE d.TRADE_INFO_ID = a.TRADE_INFO_ID 
				AND d.PRODUCT_ID = e.product_id
				) in ('01','02') THEN 
				(	SELECT
						DATE_FORMAT(f.found_date,'%Y-%m-%d')
					FROM
						t_trade_product_info_view d,
						t_pd_product e,
						t_pd_wealth f
					WHERE
						d.TRADE_INFO_ID = a.trade_info_id
					AND d.PRODUCT_ID = e.product_id
					AND e.PRODUCT_ID = f.product_id
					AND e.rc_state = 'E'
					AND f.rc_state = 'E'
				)
				ELSE
				(
					SELECT
						DATE_FORMAT(d.expectOpenDay,'%Y-%m-%d')
					FROM
						t_trade_product_info_view d,
						t_pd_product e
					WHERE
						d.TRADE_INFO_ID = a.trade_info_id
					AND d.PRODUCT_ID = e.product_id
					AND e.rc_state = 'E'
				) END "foundDate",
				       		CASE WHEN
(
SELECT e.product_sub_type
FROM t_pd_product e, t_trade_product_info_view d 
WHERE d.TRADE_INFO_ID = a.TRADE_INFO_ID 
AND d.PRODUCT_ID = e.product_id
) IN ('03','04') 
THEN
(CASE WHEN a.trade_staus = '10'
THEN (CASE
					WHEN (
						SELECT
							sum(
								x.subscription_copies - FUNC_GET_ALL_REDEMPTION_SHARE (a.TRADE_INFO_ID)
							)
						FROM
							t_trade_status_info x
						WHERE
							x.TRADE_INFO_ID = a.TRADE_INFO_ID
						AND x.rc_state = 'E'
					) > 0 THEN
						'存续中'
					ELSE
						'已赎回'
					END)
ELSE '未成立'
END
)
WHEN 
(
SELECT e.product_sub_type
FROM t_pd_product e, t_trade_product_info_view d 
WHERE d.TRADE_INFO_ID = a.TRADE_INFO_ID 
AND d.PRODUCT_ID = e.product_id
) in ('01','02')
THEN 
(
CASE
WHEN
(
SELECT e.SALES_STATUS
FROM t_pd_product e, t_trade_product_info_view d 
WHERE d.TRADE_INFO_ID = a.TRADE_INFO_ID 
AND d.PRODUCT_ID = e.product_id
)='2'
THEN '已到期'
ELSE
(
CASE WHEN a.trade_staus in ('10','14') 
THEN
(
CASE WHEN
FUNC_FOUNDATE_CLOSED_ENDDATE (
										(
SELECT max(g.found_date)
FROM t_pd_product e, t_trade_product_info_view d ,t_pd_wealth g
WHERE d.TRADE_INFO_ID = a.TRADE_INFO_ID 
AND d.PRODUCT_ID = e.product_id
AND e.product_id = g.product_id
												AND e.rc_state = "E"
												AND g.rc_state = "E"
),
										(
											CASE
											WHEN (
												SELECT
													max(x.CLOSE_DPERIOD)
												FROM
													t_pd_wealth_fee_rate x ,t_pd_product e, t_trade_product_info_view d ,t_pd_wealth g
												WHERE d.TRADE_INFO_ID = a.TRADE_INFO_ID 
												AND d.PRODUCT_ID = e.product_id
												AND e.product_id = g.product_id
												AND	g.PD_WEALTH_ID = x.PD_WEALTH_ID
												AND d.beneficialType = x.BENEFICIAL_TYPE
												AND x.rc_state = "E"
												AND e.rc_state = "E"
												AND g.rc_state = "E"
											) IS NULL THEN
												(
SELECT max(g.CLOSE_DPERIODS)
FROM t_pd_product e, t_trade_product_info_view d ,t_pd_wealth g
WHERE d.TRADE_INFO_ID = a.TRADE_INFO_ID 
AND d.PRODUCT_ID = e.product_id
AND e.product_id = g.product_id
												AND e.rc_state = "E"
												AND g.rc_state = "E"
)
											ELSE
												(
													
												SELECT
													max(x.CLOSE_DPERIOD)
												FROM
													t_pd_wealth_fee_rate x ,t_pd_product e, t_trade_product_info_view d ,t_pd_wealth g
												WHERE d.TRADE_INFO_ID = a.TRADE_INFO_ID 
												AND d.PRODUCT_ID = e.product_id
												AND e.product_id = g.product_id
												AND	g.PD_WEALTH_ID = x.PD_WEALTH_ID
												AND d.beneficialType = x.BENEFICIAL_TYPE
												AND x.rc_state = "E"
												AND e.rc_state = "E"
												AND g.rc_state = "E"
												)
											END
										),
										(	CASE
											WHEN (
												SELECT
													max(x.CLOSE_DPERIOD)
												FROM
													t_pd_wealth_fee_rate x ,t_pd_product e, t_trade_product_info_view d ,t_pd_wealth g
												WHERE d.TRADE_INFO_ID = a.TRADE_INFO_ID 
												AND d.PRODUCT_ID = e.product_id
												AND e.product_id = g.product_id
												AND	g.PD_WEALTH_ID = x.PD_WEALTH_ID
												AND d.beneficialType = x.BENEFICIAL_TYPE
												AND x.rc_state = "E"
												AND e.rc_state = "E"
												AND g.rc_state = "E"
											) IS NULL THEN
												(
SELECT max(g.CLOSE_DPERIOD_UNIT)
FROM t_pd_product e, t_trade_product_info_view d ,t_pd_wealth g
WHERE d.TRADE_INFO_ID = a.TRADE_INFO_ID 
AND d.PRODUCT_ID = e.product_id
AND e.product_id = g.product_id
AND e.rc_state = "E"
AND g.rc_state = "E"
)
											ELSE
												(
													
												SELECT
													max(x.CLOSE_DPERIODUNIT)
												FROM
													t_pd_wealth_fee_rate x ,t_pd_product e, t_trade_product_info_view d ,t_pd_wealth g
												WHERE d.TRADE_INFO_ID = a.TRADE_INFO_ID 
												AND d.PRODUCT_ID = e.product_id
												AND e.product_id = g.product_id
												AND	g.PD_WEALTH_ID = x.PD_WEALTH_ID
												AND d.beneficialType = x.BENEFICIAL_TYPE
												AND x.rc_state = "E"
												AND e.rc_state = "E"
												AND g.rc_state = "E"
												)
											END
										)) > CURDATE()
THEN '存续中'
ELSE '已到期'
END
) 
ELSE '未成立'
END
)
END
)

ELSE NULL
END
 "salesStatus",
				       (select agent_name from t_agent where agent_id = a.agent_id) "agentName",
				       A.COMPANY_ID "companyId",
				       (select com_name from t_def_com where com_id = a.company_id  ) "comName",
				      <!--  A.STORE_ID "storeId",
				        (select store_name from t_def_store where store_id = a.store_id  ) "storeName", -->
				       A.TRADE_COM_ID "tradeComId",
				        (select com_name from t_def_com where com_id = a.TRADE_COM_ID  ) "tradeComName",
				       A.TRADE_STORE_ID "tradeStoreId",
				       (select store_name from t_def_store where store_id = a.TRADE_STORE_ID  ) "tradeStoreName",
				       A.TRADE_TOTAL_ASSETS "tradeTotalAssets",
				       a.trade_staus "tradeStaus",
				       (select code_name from t_def_code where code_type='tradeStatus' and code = a.trade_staus) "tradeStausName",
 				       <!-- a.cust_Acc_Info_Id "custAccInfoId",
 				       a.cust_Address_Info_Id "custAddressInfoId", -->
				       (select 'Y' from t_trade_operation_trace where trade_info_id = a.trade_info_id and conclusion = '03' <!-- and @rownum=1 -->
				       union
				       select 'Y' from t_trade_operation where trade_info_id = a.trade_info_id and conclusion = '03' <!-- and @rownum=1 -->) "isBack",
					CASE
					WHEN (
						SELECT
							COUNT(1)
						FROM
							t_def_print_info x
						WHERE
							x.business_no = A.trade_no
						AND x.business_type = '1'
						AND x.rc_state = 'E'
					) > 0 THEN
						'是'
					ELSE
						' '
					END "isPrintTradeConfirmPDF"
				  FROM T_TRADE_INFO A
				 WHERE 1 = 1
				   and RC_STATE = 'E'
 				<include refid="tradeInputQueryTradeListCondition"/>
				<include refid="queryTradeInfoListPrivilegeControl"/>
				
				order by a.trade_info_id desc
 			) nAlias
		)tAlias where r_rownum >=#{startIndex} and #{endIndex} >= r_rownum
		
    </select> 
    <!-- S -->
    <select id="tradeInputQueryTradeListCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM T_TRADE_INFO A        
		WHERE 1=1 
		and RC_STATE = 'E'
		<include refid="tradeInputQueryTradeListCondition"/>
		<include refid="queryTradeInfoListPrivilegeControl"/>
    </select> 
    <!-- S -->    
    <select id="queryCustomerCombo" parameterType="java.util.HashMap" resultType="java.util.Map">
		SELECT
			a.trade_cust_info_id "tradeCustInfoId",
			b.CUST_BASE_INFO_ID "custBaseInfoId",
			b.CUSTOMER_NO "customerno",
			CONCAT(b.CUSTOMER_NO, '-', CHN_NAME) "customername"
		FROM
			t_trade_cust_info a,
			t_cust_base_info b
		WHERE
			a.trade_info_id =  #{tradeId}
		AND a.cust_base_info_id = b.cust_base_info_id
		AND a.rc_state = 'E'
		AND b.rc_state = 'E'
    </select> 
    <!-- S -->
    <select id="queryTradeRiskProId" parameterType="java.util.HashMap" resultType="java.util.Map">
		select a.PRODUCT_ID "proId",
				a.product_code "proCode",
				a.product_name "proName",
				CONCAT(a.product_code,'-',a.product_name) "pro"
					FROM
				T_PD_PRODUCT a,
			t_pd_wealth b
			WHERE
				a.product_type = #{proType}
			AND a.PRODUCT_ID= b.PRODUCT_ID
			and a.rc_state='E' 
			and b.rc_state='E' 
			and a.status='2'
			AND 	
				CASE WHEN a.IS_ORDER = '01' THEN
					(
					CASE WHEN a.PRODUCT_SUB_TYPE IN ('01','02')
					THEN (NOW() NOT BETWEEN b.RAISE_START_DATE AND b.RAISE_END_DATE )
					
					ELSE (NOT EXISTS
							(
							SELECT
							'X'
							FROM
							t_pd_wealth_open_date c
							WHERE
							c.PD_WEALTH_ID = b.PD_WEALTH_ID
							AND c.RC_STATE = 'E'
							AND NOW() BETWEEN c.INVEST_START_DATE AND c.INVEST_END_DATE
							) )
					END
					)
				ELSE 1=1 END
			ORDER BY
				a.PRODUCT_ID DESC
    </select> 
    <!-- s -->
    <select id="queryTradeRiskProtObj" parameterType="java.util.HashMap" resultType="java.util.Map">
	    select a.role_type "roleType",a.trade_cust_role_info_id "custID",
       concat((select code_name
          from t_Def_code
         where code_type = 'insurObj'
           and code = a.role_type), ' : ', b.CHN_NAME) "custName"
		  from T_TRADE_CUST_ROLE_INFO a, T_CUST_BASE_INFO b,t_trade_cust_info c
		 where TRADE_INFO_ID =#{tradeInfoID} 
		   and c.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
		   and a.trade_cust_info_id = c.trade_cust_info_id
		   and role_type in
		       (select code from t_def_code where code_type = 'insurObj')
		   and a.rc_state='E'
           and b.rc_state='E'
           and c.rc_state='E'
		 order by ROLE_TYPE
    </select> 
    <!-- s -->
    <select id="queryTradeRiskProInfo" parameterType="java.util.HashMap" resultType="java.util.Map">
			SELECT DISTINCT
				b.PRODUCT_ID "proId",
				b.PRODUCT_CODE "proCode",
				b.PRODUCT_NAME "proName",
				CONCAT(
					b.PRODUCT_CODE,
					'-',
					b.PRODUCT_NAME
				) "proCodeName",
				(
					SELECT
						CONCAT(
							(
								SELECT
									code_name
								FROM
									t_def_code
								WHERE
									code_type = 'insurObj'
								AND CODE = e.role_type
							),
							' : ',
							d.chn_name
						)
					FROM
						T_CUST_BASE_INFO d,
						T_TRADE_CUST_Role_INFO e,
						t_trade_cust_info f
					WHERE
						e.TRADE_CUST_INFO_ID = f.TRADE_CUST_INFO_ID
					AND f.cust_base_info_id = d.cust_base_info_id
					AND e.trade_cust_role_info_id = c.trade_cust_role_info_id
					AND d.rc_state = 'E'
					AND e.rc_state = 'E'
				) "insurObj",
				(
					SELECT
						e.trade_cust_role_info_id
					FROM
						T_CUST_BASE_INFO d,
						T_TRADE_CUST_Role_INFO e,
						t_trade_cust_info f
					WHERE
						e.TRADE_CUST_INFO_ID = f.TRADE_CUST_INFO_ID
					AND f.cust_base_info_id = d.cust_base_info_id
					AND e.trade_cust_role_info_id = c.trade_cust_role_info_id
					AND d.rc_state = 'E'
					AND e.rc_state = 'E'
				) "insurId"
			FROM
				t_trade_product_info a,
				t_pd_product b,
				t_Trade_Pd_Cust_Role_Rela c
			WHERE
				a.trade_info_id =  #{tradeId}
			AND a.product_id = b.product_id
			AND c.TRADE_INFO_ID = a.TRADE_INFO_ID
			AND c.PRODUCT_ID = A.PRODUCT_ID
			AND b.product_type =  #{proType}
			AND a.rc_state = 'E'
			AND b.rc_state = 'E'
			AND c.rc_state = 'E'
    </select> 
    <!-- S -->
    <select id="queryTradeWealthProInfo" parameterType="java.util.HashMap" resultType="java.util.Map">
		select distinct b.PRODUCT_ID "proId",b.PRODUCT_CODE "proCode", b.PRODUCT_NAME "proName",
		CONCAT(b.PRODUCT_CODE,'-',b.PRODUCT_NAME) "proCodeName"
        from t_trade_product_info a, t_pd_product b
        where a.trade_info_id = #{tradeId}
        and a.product_id = b.product_id 
        and b.product_type = #{proType}
        and a.rc_state='E'
        and b.rc_state = 'E'
    </select> 
    <!-- s -->
    <select id="queryTradeRoleInfo" parameterType="java.util.HashMap" resultType="java.util.Map">
		SELECT
			a.role_type "roleType",
			CONCAT(
				a.role_type,
				'-',
				FUNC_GET_CODE_NAME ('roleType', a.role_type)
			) "roleTypeName",
			(
				SELECT
					CONCAT(CUSTOMER_NO, '-', chn_name)
				FROM
					T_CUST_BASE_INFO
				WHERE
					CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
				AND rc_state = 'E'
			) "customer",
			(
				SELECT
					CONCAT(CUSTOMER_NO, '-', chn_name)
				FROM
					T_CUST_BASE_INFO
				WHERE
					CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
				AND rc_state = 'E'
			) "customerCodeName",
			CONCAT(b.TRADE_CUST_INFO_ID, '') "customerCode",
			a.RELATION_TO_APPNT "relationToAppnt",
			CONCAT(
				a.RELATION_TO_APPNT,
				'-',
				FUNC_GET_CODE_NAME (
					'relation',
					a.RELATION_TO_APPNT
				)
			) "relationToAppntName",
			RELATION_TO_APPNT "appntRelationCode",
			a.RELATION_TO_INSURED "relationToInsured",
			CONCAT(
				a.RELATION_TO_INSURED,
				'-',
				FUNC_GET_CODE_NAME (
					'relation',
					a.RELATION_TO_INSURED
				)
			) "relationToInsuredName",
			RELATION_TO_INSURED "insuredRelationCode",
			a.TRADE_CUST_ROLE_INFO_ID "tradeCustRoleInfoId",
			a.TRADE_CUST_INFO_ID "tradeCustInfoId"
		FROM
			t_trade_cust_role_info a,
			t_trade_cust_info b
		WHERE
			b.TRADE_INFO_ID =  #{tradeId}
		AND a.TRADE_CUST_INFO_ID = b.TRADE_CUST_INFO_ID
		AND a.rc_state = 'E'
		AND b.rc_state = 'E'
    </select> 
    
    <!-- S -->
    <select id="queryTradeComId" parameterType="java.util.HashMap" resultType="java.util.Map">
		SELECT
			com_id "comId",
			COM_CODE "comCode",
			COM_NAME "comName",
			CONCAT(COM_CODE, '-', COM_NAME) "comCodeName"
		FROM
			t_def_com 
		WHERE
			RC_STATE = 'E' 
    </select> 
    
    <!--  S -->
   <!--  <select id="queryTradeStoreId" parameterType="java.util.HashMap" resultType="java.util.Map">
		SELECT
			STORE_ID "storeId",
			STORE_CODE "storeCode",
			STORE_NAME "storeName",
			CONCAT(STORE_CODE, '-', STORE_NAME) "storeCodeName"
		FROM
			t_def_store
		WHERE
			1 = 1
		<if test='comId!=null and comId!=""'>
			and com_id = #{comId}
		</if>
    </select>  -->
    
    <!-- S -->
    <select id="queryTradeAgentId" parameterType="java.util.HashMap" resultType="java.util.Map">
		SELECT
			agent_id "agentId",
			CONCAT(agent_code, '-', agent_name) "agentCodeName",
			com_id "comId",
			(
				SELECT
					CONCAT(com_code, '-', com_name)
				FROM
					t_def_com
				WHERE
					com_id = a.com_id
			) "comCodeName",
			store_id "storeId",
			(
				SELECT
					CONCAT(STORE_CODE, '-', STORE_NAME)
				FROM
					t_def_store
				WHERE
					store_id = a.store_id
			) "storeCodeName"
		FROM
			t_agent a
		WHERE
			rc_state = 'E'
		 <if test="isAdd!=null and isAdd == 'true'">
		 	and user_id = #{userId}
		 </if>
    </select> 
    
    <!-- S -->
     <select id="queryRiskProInfoObjList" parameterType="java.util.HashMap" resultType="java.util.Map">
		   select trade_product_info_id "tradeProId",
		       param_code "code",
		       FUNC_GET_CODE_NAME('riskfactorCode',a.param_code) "name",
		       param_value "inputValue",
		       FUNC_GET_FACTOR_NAME(b.factor_value,a.param_code) "inputUnit",
		       b.factor_value "factorValueCode",
		       (select other_sign
		          from t_def_code
		         where code_type = 'riskfactorCode'
		           and code = a.param_code) ,
		        (select code_alias
	              from t_def_code
	             where code_type = 'riskfactorCode'
	               and code = a.param_code) order_,
		        b.choose_flag "chooseFlag",
		        b.factor_type "factorType"
		  from t_trade_product_info a,t_pd_factor b
		 where a.trade_info_id = #{tradeInfoId}
		   and a.product_id = #{proId}
		   and a.product_id = b.pd_id
       	   and b.factor_code = a.param_code
		   and a.rc_state = 'E'
		   and b.rc_state = 'E'
		   order by order_
    </select> 
    <!-- S -->
     <select id="queryMonryProInfoObjList" parameterType="java.util.HashMap" resultType="java.util.Map">
				  select trade_product_info_id "tradeProId",
		       param_code "code",
		       FUNC_GET_CODE_NAME('wealthfactorCode',a.param_code) "name",
		       param_value "inputValue",
		        <!-- (case when a.PARAM_CODE="subscriptionFee" then c.TRANSFER_ASSET
                      else a.PARAM_VALUE END) "inputValue", -->
		       FUNC_GET_FACTOR_NAME(b.factor_value,a.param_code) "inputUnit",
		       b.factor_value "factorValueCode",
		       (select other_sign
		          from t_def_code
		         where code_type = 'wealthfactorCode'
		           and code = a.param_code),
		       (select code_alias
              from t_def_code
             where code_type = 'wealthfactorCode'
               and code = a.param_code)order_,
		       b.factor_type "factorType",
		       b.choose_flag "chooseFlag" 
		  from t_trade_product_info a,t_pd_factor b
		 where a.trade_info_id = #{tradeInfoId}
		   and a.product_id = #{proId}
		   and a.product_id = b.pd_id
       	   and b.factor_code = a.param_code
		   and a.rc_state = 'E'
		   and b.rc_state = 'E'
		   order by order_
    </select> 
    <!--查询转让交易产品录入要素信息  -->
    <select id="queryTransFerMoneyProInfoObjList" parameterType="java.util.HashMap" resultType="java.util.Map">
				  select trade_product_info_id "tradeProId",
		       param_code "code",
		       FUNC_GET_CODE_NAME('wealthfactorCode',a.param_code) "name",
		        (case when a.PARAM_CODE="subscriptionFee" then c.TRANSFER_ASSET
                      else a.PARAM_VALUE END) "inputValue",
		       FUNC_GET_FACTOR_NAME(b.factor_value,a.param_code) "inputUnit",
		       b.factor_value "factorValueCode",
		       (select other_sign
		          from t_def_code
		         where code_type = 'wealthfactorCode'
		           and code = a.param_code),
		       (select code_alias
              from t_def_code
             where code_type = 'wealthfactorCode'
               and code = a.param_code)order_,
		       b.factor_type "factorType",
		       b.choose_flag "chooseFlag" 
		  from t_trade_product_info a,t_pd_factor b,t_trade_funds_share_change c
		 where a.trade_info_id = #{tradeInfoId}
		   and a.product_id = #{proId}
		   and a.product_id = b.pd_id
       	   and b.factor_code = a.param_code
       	   and a.TRADE_INFO_ID=c.ORIGIN_TRADE_INFO_ID
           and c.RC_STATE='E'
		   and a.rc_state = 'E'
		   and b.rc_state = 'E'
		   order by order_
    </select>
    <!-- S -->
    <select id="queryWealthProAssets" parameterType="java.util.HashMap" resultType="DECIMAL">
			select IFNULL((select param_value "proAssets" from t_trade_product_info a 
				where a.trade_info_id=#{tradeId}
				and a.product_id = #{tradeWealthProId}
				and a.rc_state = 'E'
				and a.param_code = 'subscriptionFee'),0) 
			from dual
    </select> 
    <!-- S -->
    <select id="queryRiskProAssets" parameterType="java.util.HashMap" resultType="DECIMAL">
			select IFNULL((select param_value "proAssets" from t_trade_product_info a 
			where a.trade_info_id=#{tradeId}
			and a.product_id = #{tradeRiskProId}
			and a.rc_state = 'E'
			and a.param_code = 'premium'),0) 
			from dual
    </select> 
    
    <!-- S -->
    <update id="updateTradePdCustRoleRela" parameterType="java.util.HashMap">
    		UPDATE t_trade_pd_cust_role_rela
			SET rc_state = 'D'
			WHERE
			trade_info_id = #{tradeId} and product_id=#{tradeRiskProId}
    </update>
    <!-- S -->
    <select id="queryTradeConclusion" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			conclusion "tradeConclusion",
			(
				SELECT
					CONCAT(CODE,"-",code_name)
				FROM
					t_def_code
				WHERE
					code_type = 'tradeCheckConclusion'
				AND CODE = a.conclusion
			) "tradeConclusionName",
			remark "tradeRemark"
		FROM
			t_trade_operation a
		WHERE
			trade_info_id = #{tradeId}
		AND operational_node = #{tradeOperationNode}
    </select>
    
    
    
    <select id="queryTradeConclusion2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			conclusion "tradeConclusion",
			(
				SELECT
					CONCAT(CODE,"-",code_name)
				FROM
					t_def_code
				WHERE
					code_type = 'tradeAuditConclusion'
				AND CODE = a.conclusion
			) "tradeConclusionName",
			remark "tradeRemark"
		FROM
			t_trade_operation a
		WHERE
			trade_info_id = #{tradeId}
		AND operational_node = #{tradeOperationNode}
    </select>
    
    
    
    
    
    
    <!-- s -->
    <select id="queryCustomInfoInputGrid" parameterType="java.util.HashMap" resultType="java.util.Map">
		select 	 CONCAT(a.trade_cust_info_id,'') "tradeCustInfoId",
				 CONCAT(a.cust_base_info_id,'') "custBaseInfoId",
	       b.customer_no "customerNo",
	       b.chn_name "chnName",
	       b.sex "sex",
	       CONCAT(b.sex,'-',FUNC_GET_CODE_NAME('sex',b.sex)) "sexName",
	       b.birthday "birthday",
	       b.id_type "idType",
				 CONCAT(b.id_type,'-',FUNC_GET_CODE_NAME('idType',b.id_type)) "idTypeName",
	       b.id_no "idNo",
	       FUNC_CALL_CUST_AGE(D.TRADE_DATE,B.BIRTHDAY) "age",
	       c.mobile "mobile",
	       DATE_FORMAT(b.ID_VALIDITY_DATE,'%Y-%m-%d') "idValidityDate",
	       b.INVEST_CUSTOMER_TYPE "investCustomerType",
	       b.CUST_LEVEL "custLevel"
	    from t_trade_cust_info a, t_cust_base_info b,t_cust_contact_info c,t_trade_info d
	   where a.trade_info_id = #{tradeId}
	     and a.cust_base_info_id = b.cust_base_info_id
	     and a.trade_info_id = d.trade_info_id
	     and b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
	     and a.rc_state = 'E'
	     and b.rc_state = 'E'
	     and d.rc_state = 'E'
    </select> 
    
    <select id="queryCustomInfoInputGridById" parameterType="java.util.HashMap" resultType="java.util.Map">
    SELECT
	b.cust_base_info_id "custBaseInfoId",
	b.customer_no "customerNo",
	b.chn_name "chnName",
	b.sex "sex",
	CONCAT(
		b.sex,
		'-',
		FUNC_GET_CODE_NAME ('sex', b.sex)
	) "sexName",
	b.birthday "birthday",
	b.id_type "idType",
	CONCAT(
		b.id_type,
		'-',
		FUNC_GET_CODE_NAME ('idType', b.id_type)
	) "idTypeName",
	b.id_no "idNo",
	FUNC_CALL_CUST_AGE (now(), B.BIRTHDAY) "age",
	c.mobile "mobile",
	DATE_FORMAT(
		b.ID_VALIDITY_DATE,
		'%Y-%m-%d'
	) "idValidityDate",
	b.INVEST_CUSTOMER_TYPE "investCustomerType",
	b.CUST_LEVEL "custLevel"
FROM
	t_cust_base_info b,
	t_cust_contact_info c
WHERE
	b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
AND b.CUST_BASE_INFO_ID = #{custId}
AND b.rc_state = 'E'
AND c.RC_STATE = 'E'
    </select> 
    
    <!-- s -->
    <select id="queryTradeProductFactor" parameterType="java.util.HashMap" resultType="java.util.Map">
		select
			b.product_id,
			b.product_code ,
			b.product_name ,
			(select tdcode.code_name
	           from t_def_code tdcode
	          where tdcode.code_type = #{codeType}
	            and tdcode.code = a.factor_code) "name",
	        a.factor_code "code",
	        a.factor_type "factorType",
	        a.factor_value "factorValueCode",
	        FUNC_GET_FACTOR_NAME(a.factor_value,a.factor_code) "inputUnit",
	        (select tdcode.other_sign
	           from t_def_code tdcode
	          where tdcode.code_type = #{codeType}
	            and tdcode.code = a.factor_code),
	        (select tdcode.code_alias
             from t_def_code tdcode
            where tdcode.code_type = #{codeType}
              and tdcode.code = a.factor_code) order_,
	        a.choose_flag "chooseFlag"
	   from T_PD_FACTOR a, t_pd_product b
	  where a.pd_id = b.product_id
	    and product_id = #{proId} and a.rc_state='E' and b.rc_state='E' and b.status='2' and b.sales_status='0'
	    order by order_
    </select> 
    
    <!-- s -->
    <select id="queryTradeBankInfo" parameterType="java.util.Map" resultType="java.util.Map">
	     SELECT  CONCAT(B.TRADE_CUST_INFO_ID,'') "tradeCustInfoId",
         CONCAT(a.cust_acc_info_id,'') "custAccInfoId",
         A.BANK_CODE "bankCode",
         (SELECT 
				CONCAT(C.BANK_CODE,'-',C.BANK_NAME) 
         FROM T_DEF_BANK C WHERE C.BANK_ID = A.BANK_CODE)"bankName",
         A.BRANCH_BANK_NAME "branchBankName",
         <!-- A.BANK_CODE || '-' || PKG_COMMON.FUNC_GET_CODE_NAME('bankCode', A.BANK_CODE)  -->
         A.ACC_NAME "accName",
         A.BANK_ACC_NO "bankAccNo",B.TRADE_ACC_FLAG "accFlag",
         FUNC_GET_CODE_NAME('defaultFlag',B.TRADE_ACC_FLAG) "accFlagName"
	    FROM T_CUST_ACC_INFO A,T_TRADE_CUST_ACC_RELA B
	    WHERE 1 = 1
	    AND A.CUST_ACC_INFO_ID = B.CUST_ACC_INFO_ID
	   <if test='tradeType!=null and tradeType=="1"'>
	   AND B.TRADE_CUST_INFO_ID IN(
	       SELECT C.TRADE_CUST_INFO_ID FROM T_TRADE_CUST_INFO C WHERE C.TRADE_INFO_ID = #{tradeId}
        	AND C.RC_STATE = 'E'
        	)
	   </if>
	   <if test='tradeType!=null and tradeType=="2"'>
	   AND B.TRADE_CUST_INFO_ID IN(
		     SELECT C.TRADE_CUST_INFO_ID FROM T_TRADE_CUST_INFO C,T_TRADE_CUST_ROLE_INFO D 
		     	WHERE C.TRADE_CUST_INFO_ID = D.TRADE_CUST_INFO_ID
        		AND D.ROLE_TYPE = '1'AND C.TRADE_INFO_ID = #{tradeId}
        		AND C.RC_STATE = 'E' AND D.RC_STATE = 'E'
        		)
	   </if>
    	<!-- AND A.RC_STATE = 'E' -->
    	AND B.RC_STATE = 'E'
	 order by A.CUST_ACC_INFO_ID
    </select>
    
    <!-- s -->
    <select id="querySaveTradeBankCount" parameterType="java.util.Map" resultType="java.lang.Integer">
	  SELECT count(1)
	    FROM T_CUST_ACC_INFO A,T_TRADE_CUST_ACC_RELA B
	    WHERE 1 = 1
	    AND A.CUST_ACC_INFO_ID = B.CUST_ACC_INFO_ID
	    AND B.TRADE_ACC_FLAG = '1'
		   <if test='tradeType!=null and tradeType=="1"'>
		   AND B.TRADE_CUST_INFO_ID IN(
		       SELECT C.TRADE_CUST_INFO_ID FROM T_TRADE_CUST_INFO C WHERE C.TRADE_INFO_ID = #{tradeId}
	        	AND C.RC_STATE = 'E'
	        	)
		   </if>
		   <if test='tradeType!=null and tradeType=="2"'>
		   AND B.TRADE_CUST_INFO_ID IN(
			     SELECT C.TRADE_CUST_INFO_ID FROM T_TRADE_CUST_INFO C,T_TRADE_CUST_ROLE_INFO D 
			     	WHERE C.TRADE_CUST_INFO_ID = D.TRADE_CUST_INFO_ID
	        		AND D.ROLE_TYPE = '1'AND C.TRADE_INFO_ID = #{tradeId}
	        		AND C.RC_STATE = 'E' AND D.RC_STATE = 'E'
	        		)
		   </if>
    	<!-- AND A.RC_STATE = 'E' -->
    	AND B.RC_STATE = 'E'
    </select>
    
    <!-- s -->
    <select id="searchTradeBankInfo" parameterType="java.util.HashMap" resultType="java.util.Map">
		SELECT
			CONCAT(a.cust_acc_info_id, '') "custAccInfoId",
			A.BANK_CODE "bankCode",
			CONCAT(
				A.BANK_CODE,
				'-',
				FUNC_GET_CODE_NAME ('bankCode', A.BANK_CODE)
			) "bankName",
			A.BRANCH_BANK_NAME "branchBankName",
			A.ACC_NAME "accName",
			A.BANK_ACC_NO "bankAccNo"
		FROM
			T_CUST_ACC_INFO A
		WHERE
			1 = 1
		AND A.CUST_ACC_INFO_ID =  #{custAccInfoId}
		AND A.RC_STATE =  #{rcState}
		ORDER BY
			A.CUST_ACC_INFO_ID
    </select> 
    
    <!-- s -->
    <select id="queryTradeAddressInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			CONCAT(b.trade_cust_info_id, '') "tradeCustInfoId",
			CONCAT(a.CUST_ADDRESS_INFO_ID,'') "custAddressInfoId",
			A.ADDRESS_TYPE "addressType",
			CONCAT(
				A.ADDRESS_TYPE,
				'-',
				FUNC_GET_CODE_NAME (
					'addressType',
					A.ADDRESS_TYPE
				)
			) "addressTypeName",
			A.PROVINCE "province",
			CONCAT(
				A.PROVINCE,
				'-',
				FUNC_GET_PLACE_NAME ('01', A.PROVINCE)
			) "provinceName",
			A.CITY "city",
			CONCAT(
				A.CITY,
				'-',
				FUNC_GET_PLACE_NAME ('02', A.CITY)
			) "cityName",
			A.COUNTRY "country",
			CONCAT(
				A.COUNTRY,
				'-',
				FUNC_GET_PLACE_NAME ('03', A.COUNTRY)
			) "countryName",
			A.STREET "street",
			A.ZIP_CODE "zipCode",
			B.TRADE_ADDRESS_FLAG "addressFlag",
			FUNC_GET_CODE_NAME (
				'defaultFlag',
				B.TRADE_ADDRESS_FLAG
			) "addressFlagName"
		FROM
			T_CUST_ADDRESS_INFO A,
			T_TRADE_CUST_ADDRESS_RELA B
		WHERE
			1 = 1
		AND A.CUST_ADDRESS_INFO_ID = B.CUST_ADDRESS_INFO_ID
		AND B.TRADE_CUST_INFO_ID IN (
			SELECT
				C.TRADE_CUST_INFO_ID
			FROM
				t_trade_cust_info C
			WHERE
				trade_info_id =  #{tradeId}
			AND rc_state = 'E'
		)
			    AND A.AGENT_ID = #{agentId}
			    
	    <!-- AND A.RC_STATE = 'E' -->
	    AND B.RC_STATE = 'E'
	    order by A.CUST_ADDRESS_INFO_ID 
    </select>
    
    <!-- s -->
    <select id="querySaveTradeAddressCount" parameterType="java.util.Map" resultType="java.lang.Integer">
	  SELECT count(1)
    	FROM T_CUST_ADDRESS_INFO A,T_TRADE_CUST_ADDRESS_RELA B
    	WHERE 1=1
	      	AND A.CUST_ADDRESS_INFO_ID = B.CUST_ADDRESS_INFO_ID
	      	AND B.TRADE_CUST_INFO_ID in (select C.TRADE_CUST_INFO_ID
	                                  from t_trade_cust_info C
	                                 where trade_info_id = #{tradeId}
	                                   and rc_state = 'E')
	      	AND B.TRADE_ADDRESS_FLAG = '1'
	    	AND A.AGENT_ID = #{agentId}
	    	<!-- AND A.RC_STATE = 'E' -->
	    	AND B.RC_STATE = 'E'
    </select>
    
    <!-- s -->
    <select id="searchTradeAddressInfo" parameterType="java.util.HashMap" resultType="java.util.Map">
					SELECT
				CONCAT(a.CUST_ADDRESS_INFO_ID, '') "custAddressInfoId",
				A.ADDRESS_TYPE "addressType",
				CONCAT(
					A.ADDRESS_TYPE,
					'-',
					FUNC_GET_CODE_NAME (
						'addressType',
						A.ADDRESS_TYPE
					)
				) "addressTypeName",
				A.PROVINCE "province",
				CONCAT(
					A.PROVINCE,
					'-',
					FUNC_GET_PLACE_NAME ('01', A.PROVINCE)
				) "provinceName",
				A.CITY "city",
				CONCAT(
					A.CITY,
					'-',
					FUNC_GET_PLACE_NAME ('02', A.CITY)
				) "cityName",
				A.COUNTRY "country",
				CONCAT(
					A.COUNTRY,
					'-',
					FUNC_GET_PLACE_NAME ('03', A.COUNTRY)
				) "countryName",
				A.STREET "street",
				A.ZIP_CODE "zipCode"
			FROM
				T_CUST_ADDRESS_INFO A
			WHERE
				1 = 1
			AND A.CUST_ADDRESS_INFO_ID = #{custAddressInfoId}
			AND A.RC_STATE = 'E'
			ORDER BY
				A.CUST_ADDRESS_INFO_ID
    </select> 
    <!-- 根据客户号查询客户地址 -->
    <select id="getTradeAddressInfo" parameterType="java.util.HashMap" resultType="java.util.Map">
					SELECT
				CONCAT(a.CUST_ADDRESS_INFO_ID, '') "custAddressInfoId",
				A.ADDRESS_TYPE "addressType",
				CONCAT(
					A.ADDRESS_TYPE,
					'-',
					FUNC_GET_CODE_NAME (
						'addressType',
						A.ADDRESS_TYPE
					)
				) "addressTypeName",
				A.PROVINCE "province",
				CONCAT(
					A.PROVINCE,
					'-',
					FUNC_GET_PLACE_NAME ('01', A.PROVINCE)
				) "provinceName",
				A.CITY "city",
				CONCAT(
					A.CITY,
					'-',
					FUNC_GET_PLACE_NAME ('02', A.CITY)
				) "cityName",
				A.COUNTRY "country",
				CONCAT(
					A.COUNTRY,
					'-',
					FUNC_GET_PLACE_NAME ('03', A.COUNTRY)
				) "countryName",
				A.STREET "street",
				A.ZIP_CODE "zipCode"
			FROM
				T_CUST_ADDRESS_INFO A
			WHERE
				1 = 1
			AND A.CUST_BASE_INFO_ID = #{custBaseInfoId}
			AND A.RC_STATE = 'E'
			ORDER BY
				A.CUST_ADDRESS_INFO_ID
    </select> 
    
    <!-- s -->
    <select id="queryOpenDateByProductId" parameterType="java.util.Map" resultType="java.util.Map">
		select date_format(a.open_date,'%Y-%m-%d') "code",date_format(a.open_date,'%Y-%m-%d') "codeName"
		from t_pd_wealth_open_date a, t_pd_wealth b
		where b.pd_wealth_id = a.pd_wealth_id
		   and a.rc_state = 'E'
		   and b.rc_state = 'E'
		   and b.product_id=#{productId}
		   order by a.open_date desc
    </select> 
    
    <!-- s -->
    <select id="verifyTradeCustCount"  parameterType="java.util.Map" resultType="java.lang.Integer">
    	SELECT COUNT(1)
		FROM T_TRADE_CUST_INFO A,T_TRADE_CUST_ROLE_INFO B
		WHERE A.TRADE_CUST_INFO_ID = B.TRADE_CUST_INFO_ID
		      AND B.ROLE_TYPE = #{roleType}
		      AND A.TRADE_INFO_ID = #{tradeInfoId}
		      AND A.RC_STATE = 'E'
		      AND B.RC_STATE = 'E'
    </select>
    
    <!-- s -->
    <select id="queryDefCode" parameterType="java.util.HashMap" resultType="java.util.Map">
		select code "code",
		CONCAT(code,'-',code_name)"codeName",
		code_name "name"
		from t_def_code where code_type = #{codeType}
		and code in (#{factorValueCode})
    </select>
    
    <!-- S -->
    <select id="getTradeAppntCustInfo" parameterType="java.util.Map" resultType="java.util.Map">
		select CONCAT(a.trade_info_id,'') "tradeInfoId",CONCAT(a.cust_base_info_id,'') "custBaseInfoId"
		from t_trade_cust_info a,t_trade_cust_role_info b
		where a.trade_cust_info_id = b.trade_cust_info_id
			and b.role_type = '1'
			and a.rc_state = 'E'
			and b.rc_state = 'E'
			and a.trade_info_id = #{tradeInfoId}
    </select>
    
    <!-- S -->
    <select id="getAllCustRoleInfoListByTradeInfoId" parameterType="java.util.HashMap" resultType="java.util.Map">
		SELECT
			A.TRADE_CUST_ROLE_INFO_ID "tradeCustRoleInfoId",
			A.TRADE_CUST_INFO_ID "tradeCustInfoId",
			A.ROLE_TYPE "roleType",
			A.CREATE_DATE "createDate",
			A.CREATE_USER_ID "createUserId"
		FROM
			T_TRADE_CUST_ROLE_INFO A,
			T_TRADE_CUST_INFO B
		WHERE
			A.TRADE_CUST_INFO_ID = B.TRADE_CUST_INFO_ID
		AND B.TRADE_INFO_ID = #{tradeInfoId}
		AND B.RC_STATE = 'E'
		AND A.RC_STATE = 'E'
    </select>
    
    <!-- S -->
    <select id="tradePrintInfo" parameterType="java.util.HashMap" resultType="java.lang.Long">
		SELECT
			TPP.PRODUCT_ID
		FROM
			T_PD_PRODUCT TPP,
			T_TRADE_PRODUCT_INFO_VIEW ttpiv
		WHERE
			TPP.RC_STATE = 'E'
		AND TPP.PRODUCT_ID = ttpiv.PRODUCT_ID
		AND ttpiv.TRADE_INFO_ID = #{id}
    </select>
    
       <!-- u8 -->
	    <select id="getFDBenefitType" parameterType="java.util.HashMap" resultType="java.lang.String">
			SELECT
				IFNULL(B.CODE_NAME, '未分类') "BENEFICIALTYPE"
			FROM
				T_TRADE_PRODUCT_INFO A
			LEFT JOIN T_DEF_CODE B ON A.PARAM_VALUE = B. CODE
			AND B.CODE_TYPE = 'beneficialType'
			WHERE
				A.TRADE_INFO_ID = #{id}
			AND A.RC_STATE = 'E'
			AND A.PARAM_CODE = 'beneficialType'
	    </select>
	    
	    
	   <!-- 1102 -->
	   <select id="getGDBenefitType" parameterType="java.util.HashMap" resultType="java.lang.String">
		 SELECT 
		   FUNC_GET_CODE_NAME('beneficialType', IFNULL(a.beneficial_type, '015')) "BENEFICIALTYPE"
		   FROM T_PD_WEALTH_FEE_RATE A
		  INNER JOIN T_PD_WEALTH B
		     ON A.PD_WEALTH_ID = B.PD_WEALTH_ID
		    AND B.RC_STATE = 'E'
		  INNER JOIN T_PD_PRODUCT C
		     ON B.PRODUCT_ID = C.PRODUCT_ID
		    AND C.RC_STATE = 'E'
		    AND C.PRODUCT_ID = #{PRODUCTID}
		  WHERE A.RC_STATE = 'E'
		    AND A.SUBSCRIPTION_FEE_LOWER <![CDATA[<=]]>  #{SUBSCRIPTIONFEE}
		    AND IFNULL(A.SUBSCRIPTION_FEE_UPPER,100000000000) <![CDATA[>]]> #{SUBSCRIPTIONFEE}
		    AND (#{CLOSEDPERIOD} IS NULL OR A.CLOSE_DPERIOD=#{CLOSEDPERIOD} OR A.CLOSE_DPERIOD IS NULL)
		    AND (#{CLOSEDPERIODUNIT} IS NULL OR A.CLOSE_DPERIODUNIT=#{CLOSEDPERIODUNIT} OR A.CLOSE_DPERIODUNIT IS NULL)
		    AND A.FEE_TYPE='01'
	    </select>
	    
	    
	    <!-- u7 -->
	    <select id="getColsePeriodCols" parameterType="java.util.HashMap" resultType="java.lang.String">
			SELECT
				count(*) "COLS"
			FROM
				t_trade_product_info a
			WHERE
				A.TRADE_INFO_ID = #{id}
			AND A.RC_STATE = 'E'
			AND a.param_code = 'closedPeriods'
	    </select>
	    
	    
	    <!-- u6 -->	    
	<select id="getColsePeriodByTrade" parameterType="java.util.HashMap" resultType="java.lang.String">
		SELECT
			CONCAT(a.param_value,C.CODE_NAME) "CLOSEDPERIOD"
		FROM
			T_TRADE_PRODUCT_INFO A
		LEFT JOIN T_PD_WEALTH B ON A.PRODUCT_ID = B.PRODUCT_ID
		AND B.RC_STATE = 'E'
		INNER JOIN T_DEF_CODE C ON B.CLOSE_DPERIOD_UNIT = C. CODE
		AND C.CODE_TYPE = 'closedPeriodUnit'
		WHERE
			A.TRADE_INFO_ID = #{id}
			AND A.RC_STATE = 'E'
			AND A.PARAM_CODE = 'closedPeriods'
	 </select>
	 
	 	<!-- u 5-->   
   	<select id="getColsePeriodByProduct" parameterType="java.util.HashMap" resultType="java.lang.String">
		SELECT
			CONCAT(
				IFNULL(
					A.CLOSE_DPERIODS,
					A.CLOSE_DPERIOD
				),
				B.CODE_NAME
			) "CLOSEDPERIOD"
		FROM
			T_PD_WEALTH A
		INNER JOIN T_DEF_CODE B ON A.CLOSE_DPERIOD_UNIT = B. CODE
		AND B.CODE_TYPE = 'closedPeriodUnit'
		WHERE
			A.PRODUCT_ID =  #{productId}
		AND A.RC_STATE = 'E'
	 </select> 
    
    
	 	<!-- u 4-->   
   	<select id="getFeeRate" parameterType="java.util.HashMap" resultType="java.math.BigDecimal">
		 SELECT A.EXPECTED_FEE_RATE  "feeRate"
		 FROM T_PD_WEALTH_FEE_RATE A
		 INNER JOIN T_PD_WEALTH B
		     ON A.PD_WEALTH_ID = B.PD_WEALTH_ID
		    AND B.RC_STATE = 'E'
		  INNER JOIN T_PD_PRODUCT C
		     ON B.PRODUCT_ID = C.PRODUCT_ID
		    AND C.RC_STATE = 'E'
		    AND C.PRODUCT_ID = #{PRODUCTID}
		  WHERE A.RC_STATE = 'E'
		    AND A.SUBSCRIPTION_FEE_LOWER <![CDATA[<=]]>  #{SUBSCRIPTIONFEE}
		    AND NVL(A.SUBSCRIPTION_FEE_UPPER,100000000000) <![CDATA[>]]> #{SUBSCRIPTIONFEE}
		    AND (#{CLOSEDPERIOD} IS NULL OR A.CLOSE_DPERIOD=#{CLOSEDPERIOD} OR A.CLOSE_DPERIOD IS NULL)
		    AND (#{CLOSEDPERIODUNIT} IS NULL OR A.CLOSE_DPERIODUNIT=#{CLOSEDPERIODUNIT} OR A.CLOSE_DPERIODUNIT IS NULL)
		    AND A.FEE_TYPE='01'
	 </select> 
	 
	 
	<!-- u 0928-->   
   	<select id="getAddFeeRate" parameterType="java.util.HashMap" resultType="java.math.BigDecimal">
	    SELECT A.add_expected_fee_rate "addfeeRate"
	    FROM T_PD_WEALTH_FEE_RATE A
	    INNER JOIN T_PD_WEALTH B
	     	ON A.PD_WEALTH_ID = B.PD_WEALTH_ID
	   		 AND B.RC_STATE = 'E'
	    INNER JOIN T_PD_PRODUCT C
	    	ON B.PRODUCT_ID = C.PRODUCT_ID
	   		AND C.RC_STATE = 'E'
	    	AND C.PRODUCT_ID = #{PRODUCTID}
	    WHERE A.RC_STATE = 'E'
		    AND A.SUBSCRIPTION_FEE_LOWER <![CDATA[<=]]>  #{SUBSCRIPTIONFEE}
		    AND IFNULL(A.SUBSCRIPTION_FEE_UPPER,100000000000) <![CDATA[>]]> #{SUBSCRIPTIONFEE}
		    AND (#{CLOSEDPERIOD} IS NULL OR A.CLOSE_DPERIOD=#{CLOSEDPERIOD} OR A.CLOSE_DPERIOD IS NULL)
		    AND (#{CLOSEDPERIODUNIT} IS NULL OR A.CLOSE_DPERIODUNIT=#{CLOSEDPERIODUNIT} OR A.CLOSE_DPERIODUNIT IS NULL)
		    AND A.FEE_TYPE='01'
	 </select> 
	 
	 
	 
	<!-- u3 -->   
   	<select id="getClosePeriodByTrade" parameterType="java.util.HashMap" resultType="java.lang.String">
		SELECT
			A.PARAM_VALUE
		FROM
			T_TRADE_PRODUCT_INFO A
		WHERE
			A.TRADE_INFO_ID = #{id}
		AND A.RC_STATE = 'E'
		AND A.PARAM_CODE = 'closedPeriods'
	 </select> 



   	<select id="getClosePeriodByProduct" parameterType="java.util.HashMap" resultType="java.lang.String">
		SELECT
		IFNULL(
				a.close_dperiods,
				a.close_dperiod
			)
		FROM
			t_pd_wealth a
		WHERE
			a.product_id = #{ productId }
		AND a.rc_State = 'E'
	 </select> 

    <!-- u2 -->   
   	<select id="getBenefitTypeByTrade" parameterType="java.util.HashMap" resultType="java.lang.String">
		SELECT
			A.PARAM_VALUE
		FROM
			T_TRADE_PRODUCT_INFO A
		WHERE
			A.TRADE_INFO_ID = #{id}
		AND A.RC_STATE = 'E'
		AND A.PARAM_CODE = 'beneficialType'
	 </select> 
	 
	  <select id="getBenefitTypeByProduct" parameterType="java.util.HashMap" resultType="java.lang.String">
		SELECT
			REPLACE (a.beneficial_types, ',', '')
		FROM
			t_pd_wealth a
		WHERE
			a.product_id = #{ productId }
		AND a.rc_State = 'E'
	 </select> 
    
      <!-- u1 -->   
   	<select id="getClosePeriodUnitByProduct" parameterType="java.util.HashMap" resultType="java.lang.String">
		SELECT
			A.CLOSE_DPERIOD_UNIT "closedPeriodUnit"
		FROM
			T_PD_WEALTH A
		WHERE
			A.PRODUCT_ID = #{productId}
		AND A.RC_STATE = 'E'
	 </select> 
    
    <select id="tradeCustInfo" parameterType="java.util.HashMap" resultType="java.util.Map">
SELECT
	TCBI.CHN_NAME CHNNAME,
	(
		CASE
		WHEN IFNULL(TCBI.NATIVE_PLACE, '156') = '156' THEN
			CONCAT(
				TCBI.LAST_NAME,
				' ',
				TCBI.FIRST_NAME
			)
		ELSE
			CONCAT(
				TCBI.FIRST_NAME,
				' ',
				TCBI.LAST_NAME
			)
		END
	) ENGNAME,
	FUNC_GET_CODE_NAME (
		'sex',
		IFNULL(TCBI.SEX, '999')
	) SEX,
	TCBI.BIRTHDAY BIRTHDAY,
	FUNC_GET_CODE_NAME (
		'idType',
		IFNULL(TCBI.ID_TYPE, '999')
	) IDTYPE,
	TCBI.ID_NO IDNO,
	FUNC_GET_CODE_NAME (
		'nationality',
		IFNULL(TCBI.NATIVE_PLACE, '156')
	) NATIVEPLACE,
	TCAIC.ACC_NAME ACCNAME,
	CONCAT(TDB.BANK_NAME,TCAIC.BRANCH_BANK_NAME) BANKCODE,
	TCAIC.BANK_ACC_NO BANKACCNO,
	
	FUNC_GET_PLACE_NAME (
		'01',
		IFNULL(TCAI.PROVINCE, '999')
	) || FUNC_GET_PLACE_NAME (
		'02',
		IFNULL(TCAI.CITY, '999')
	) || FUNC_GET_PLACE_NAME (
		'03',
		IFNULL(TCAI.COUNTRY, '999')
	) || TCAI.STREET ACOUNTRY,
	FUNC_GET_PLACE_NAME (
		'01',
		IFNULL(TCAI.PROVINCE, '999')
	) || FUNC_GET_PLACE_NAME (
		'03',
		IFNULL(TCAI.COUNTRY, '999')
	) || TCAI.STREET COUNTRY,
	TCAI.CITY CITYCODE,
	TCAI.ZIP_CODE ZIPCODE,
	TCCI.MOBILE MOBILE,
	TCCI.PHONE PHONE,
	TCCI.EMAIL EMAIL
FROM
	T_TRADE_INFO TTI
LEFT JOIN T_TRADE_CUST_INFO TTCI ON TTCI.TRADE_INFO_ID = TTI.TRADE_INFO_ID
LEFT JOIN T_CUST_BASE_INFO TCBI ON TCBI.CUST_BASE_INFO_ID = TTCI.CUST_BASE_INFO_ID
LEFT JOIN T_TRADE_CUST_ADDRESS_RELA TTCAR ON TTCAR.TRADE_CUST_INFO_ID = TTCI.TRADE_CUST_INFO_ID
LEFT JOIN T_CUST_ADDRESS_INFO TCAI ON TCAI.CUST_ADDRESS_INFO_ID = TTCAR.CUST_ADDRESS_INFO_ID
LEFT JOIN T_TRADE_CUST_ACC_RELA TTCARC ON TTCARC.TRADE_CUST_INFO_ID = TTCI.TRADE_CUST_INFO_ID
LEFT JOIN T_CUST_ACC_INFO TCAIC ON TCAIC.CUST_ACC_INFO_ID = TTCARC.CUST_ACC_INFO_ID
LEFT JOIN T_TRADE_CUST_CONTACT_RELA TTCCR ON TTCCR.TRADE_CUST_INFO_ID = TTCI.TRADE_CUST_INFO_ID
LEFT JOIN T_CUST_CONTACT_INFO TCCI ON TCCI.CUST_CONTACT_INFO_ID = TTCCR.CUST_CONTACT_INFO_ID
LEFT JOIN T_DEF_BANK TDB ON TDB.BANK_ID = TCAIC.BANK_CODE
WHERE
	TTI.RC_STATE = 'E'
AND TTI.TRADE_INFO_ID = #{id}
AND TTCI.RC_STATE = 'E'  <!-- AND TCBI.RC_STATE = 'E' -->
AND TTCCR.RC_STATE = 'E'  <!-- AND TCCI.RC_STATE = 'E' -->
AND TCCI.AGENT_ID = TTI.AGENT_ID
AND TTCAR.TRADE_ADDRESS_FLAG = '1'
AND TTCARC.TRADE_ACC_FLAG = '1'
AND TTCARC.RC_STATE = 'E'
AND TTCAR.RC_STATE = 'E'
    </select>
    
    <!-- OK -->
    <select id="tradeGDInfo" parameterType="java.util.HashMap" resultType="java.util.Map">
		 SELECT
			FUNC_GET_CODE_NAME (
				'currency',
				IFNULL(a.CURRENCY, 'CNY')
			) CURRENCY,
			b.SUBSCRIPTIONFEE SUBSCRIPTIONFEE,
			DATE_FORMAT(d.FOUND_DATE, '%Y-%m-%d') EXPECTOPENDAY,
			c.PRODUCT_NAME PRODUCTNAME
		FROM
			T_TRADE_INFO a
			LEFT JOIN T_TRADE_PRODUCT_INFO_VIEW b ON a.TRADE_INFO_ID = b.TRADE_INFO_ID
			LEFT JOIN T_PD_PRODUCT c ON b.PRODUCT_ID = c.PRODUCT_ID
			LEFT JOIN T_PD_WEALTH d ON d.PRODUCT_ID = c.PRODUCT_ID
		WHERE
			a.RC_STATE = 'E'
			AND a.TRADE_INFO_ID =  #{id}
			AND c.RC_STATE = 'E'
			AND d.RC_STATE = 'E'
    </select>
    
    
    <select id="tradeFGDInfo" parameterType="java.util.HashMap" resultType="java.util.Map">
		SELECT FUNC_GET_CODE_NAME('currency', IFNULL(a.CURRENCY, '999')) CURRENCY,
		       b.SUBSCRIPTIONFEE SUBSCRIPTIONFEE,
		       b.EXPECTOPENDAY EXPECTOPENDAY,
		       c.PRODUCT_NAME PRODUCTNAME,
		       e.SUBSCRIPTION_FEE_RATIO SUBSCRIPTIONFEERATIO,
		       IFNULL(b.reductionRadio, '0') REDUCTIONRADIO
		  FROM T_TRADE_INFO a
		  LEFT JOIN T_TRADE_PRODUCT_INFO_VIEW b
		    ON b.TRADE_INFO_ID = a.TRADE_INFO_ID
		  LEFT JOIN T_PD_PRODUCT c
		    ON c.PRODUCT_ID = b.PRODUCT_ID
		  LEFT JOIN T_PD_WEALTH d
		    ON d.PRODUCT_ID = b.PRODUCT_ID
		  LEFT JOIN T_PD_WEALTH_CHARGE_RATE e
		    ON e.PD_WEALTH_ID = d.PD_WEALTH_ID
		 WHERE a.RC_STATE = 'E'
		   AND a.TRADE_INFO_ID = #{id}
		   AND c.RC_STATE = 'E'
		   AND d.RC_STATE = 'E'
		   AND e.RC_STATE = 'E'
    </select>

	<select id="printGetTradeAgentInfo" parameterType="java.util.HashMap" resultType="java.util.Map">
		SELECT
			A.TRADE_NO "tradeNo",
			A.TRADE_DATE "tradeDate",
			B.AGENT_CODE "agentCode",
			B.AGENT_NAME "agentName"
		FROM
			T_TRADE_INFO A,
			T_AGENT B
		WHERE
			A.AGENT_ID = B.AGENT_ID
			AND A.TRADE_INFO_ID = #{id}
			AND A.RC_STATE = 'E'
		<!-- AND B.RC_STATE = 'E' -->
    </select>

    <select id="tradeTotal"  parameterType="java.util.Map" resultType="java.lang.Integer">
    	SELECT COUNT(*)
		FROM T_DEF_PRINT_INFO PR
		WHERE PR.BUSINESS_NO = #{tradeNo}
    </select>
    
    <select id="getPrintServiceList"  parameterType="java.util.Map" resultType="java.util.Map">
    
		select 
  			tAlias.* 
  		from
  			(
         		select 
         			nAlias.*, 
         			@rownum:=@rownum+1 r_rownum 
         		from
         			(
         				SELECT (SELECT @rownum := 0),
         				   PR.PRINT_INFO_ID      "printInfoId",
         				   PR.BUSINESS_NO        "businessNo",
					       FUNC_GET_CODE_NAME('productType',PR.BUSINESS_TYPE)      "businessType",
					       PR.PRINT_FILE_NAME    "printFileName",
					       PR.FILE_SAVE_PATH	 "fileSavePath",
					       DATE_FORMAT(PR.PRINT_TIME, '%Y-%m-%d %H:%i:%s') "printTime"
  						FROM 
  							T_DEF_PRINT_INFO PR
   						WHERE 
   							1 = 1
   						AND 
   							PR.RC_STATE != 'D'
   						AND 
   							PR.BUSINESS_NO = #{tradeNo}
   						AND 
   						    PR.DOUCMENT_TYPE = #{doucmentType}
   						ORDER BY 
                 			PR.MODIFY_DATE DESC
 					) nAlias
			) tAlias 
		where 
			r_rownum >=#{startIndex} 
		and 
			#{endIndex} >= r_rownum
    </select>
    <!-- S -->
    <select id="getTradeRiskInfo"  parameterType="java.util.Map" resultType="java.util.Map">
		select f.trade_no "tradeNo",b.chn_name "customerName",d.product_name "productName",
		      <!-- #decode(e.agency_short_name,null,e.agency_name,e.agency_short_name) -->
						IF(e.agency_short_name IS NULL,e.agency_name,e.agency_short_name)
						"agencyName",
		       IFNULL(a.amnt * IF(a.mult IS null,'1',a.mult),0)"amntTotal",a.premium "premium",DATE_FORMAT(f.trade_date,'%Y-%m-%d %H:%i:%s') "tradeDate"
		       from t_trade_product_info_view a,t_cust_base_info b,t_trade_cust_info c,t_pd_product d,t_agency_com e,t_trade_info f
		       where c.cust_base_info_id = b.cust_base_info_id
		       and f.trade_info_id = c.trade_info_id
		       and f.trade_info_id = a.trade_info_id
		       and a.product_id = d.product_id
		       and d.agency_com_id = e.agency_com_id
		       and b.customer_no = #{customerNo}
		       and d.product_type = '2'
		       and b.rc_state = 'E'
		       and c.rc_state = 'E'
		       and d.rc_state = 'E'
		       and e.rc_state = 'E'
		       and f.rc_state = 'E'
		       order by "tradeDate" desc
    </select>
    
     <!--提交复核校验该客户是否已经被其他理财经理录过交易 -->
    <select id="getCheckTradeInputCount" parameterType="java.util.Map" resultType="java.lang.Integer">
       <!-- select count(1) from t_cust_base_info a ,t_trade_cust_info b,t_trade_info c
                where a.cust_base_info_id = b.cust_base_info_id
                and b.trade_info_id = c.trade_info_id
                and c.trade_staus not in ('09','01')
                and a.customer_no = #{customerNo}
                and a.rc_state = 'E'
                and b.rc_state = 'E'
                and c.rc_state = 'E' -->
                select count(1) from t_cust_base_info a ,t_trade_cust_info b,t_trade_info c,t_agent d
                where a.cust_base_info_id = b.cust_base_info_id
                and b.trade_info_id = c.trade_info_id
                and d.agent_id = a.agent_id
                and d.work_state  = '1'
                and c.trade_staus not in ('09','01')
                and a.customer_no = #{customerNo}
                and a.rc_state = 'E'
                and b.rc_state = 'E'
                and c.rc_state = 'E'
    </select>
    <!-- 获取客户认购申请书内容 -->
    <select id="getRequestMapInfoList" parameterType="java.util.Map" resultType="java.util.Map">
	select   a.TRADE_TYPE "tradeType",
         e.PRODUCT_SUB_TYPE "productSubType",
	       e.PRODUCT_NAME "productName",
	       a.TRADE_NO "tradeNo",
         (select z.CODE_NAME
             from t_def_code z
            where z.code_type = 'beneficialType'
			and instr(CASE
			WHEN d.beneficialType IS NOT NULL
			THEN d.beneficialType
			ELSE f.BENEFICIAL_TYPES
			END	, z.code) > 0) "beneficialType",
         (
             <!--  case when e.PRODUCT_SUB_TYPE = '02' THEN  -->
             case when e.PRODUCT_SUB_TYPE = '02' or e.PRODUCT_SUB_TYPE = '01' THEN 
             f.FOUND_DATE
             ELSE
             d.expectOpenDay
             end  
         ) "foundDateNo",
         (case when e.PRODUCT_SUB_TYPE = '02' then 
            (case when d.closedPeriods is null then 
	          CONCAT(f.CLOSE_DPERIODS,FUNC_GET_CODE_NAME('closedPeriodUnit',f.CLOSE_DPERIOD_UNIT))
	          ELSE CONCAT(d.closedPeriods,FUNC_GET_CODE_NAME('closedPeriodUnit',d.closedPeriodUnit))
	          end  
	       ) ELSE
            '/'
           END
          )
	      "closedPeriod",
         ( <!-- case when e.PRODUCT_SUB_TYPE = '02' then  -->
             case WHEN e.PRODUCT_SUB_TYPE = '02' or e.PRODUCT_SUB_TYPE='01' or e.PRODUCT_SUB_TYPE='03' then
            (case when d.closedPeriods is not null then
	                 (select CONCAT(ROUND((ifnull(i.expected_fee_rate,0)+ifnull(i.add_expected_fee_rate,0)),2),'%')
	                    from t_pd_wealth_fee_rate i 
	                    where f.pd_wealth_id = i.pd_wealth_id
	                    and f.product_id =  e.product_id
	                    and i.fee_type = '01'
	                    and i.close_dperiod = d.closedPeriods
	                    and d.subscriptionFee >= ifnull(i.subscription_fee_lower,0)
	                    and ifnull(i.subscription_fee_upper,9999999999)> d.subscriptionFee
	                    and f.rc_state = 'E'
	                    and i.rc_state = 'E')
	           else
	             (select  CONCAT(ROUND((ifnull(i.expected_fee_rate,0)+ifnull(i.add_expected_fee_rate,0)),2),'%')
	                    from t_pd_wealth_fee_rate i 
	                    where f.pd_wealth_id = i.pd_wealth_id
	                    and f.product_id =  e.product_id
	                    and i.fee_type = '01'
	                    and d.subscriptionFee >= ifnull(i.subscription_fee_lower,0)
	                    and ifnull(i.subscription_fee_upper,9999999999)> d.subscriptionFee
	                    and f.rc_state = 'E'
	                    and i.rc_state = 'E') 
	              end
	           ) ELSE
               '/'
              END
         ) "expectFeeRate",
	       c.CHN_NAME "custName",
	       c.BIRTHDAY "birthdayNo",
	       FUNC_GET_CODE_NAME('sex',c.SEX) "custSex",
	       FUNC_GET_CODE_NAME('idType',c.ID_TYPE) "idType",
	       c.ID_VALIDITY_DATE "idValidDateNo",
	       c.ID_NO "IDNo",
         FUNC_GET_CODE_NAME ('currency',IFNULL(a.CURRENCY, 'CNY')) "currency",
	       a.TRADE_TOTAL_ASSETS "subscriptionFee",
         (case when e.PRODUCT_SUB_TYPE = '02' then 
             NULL
             ELSE
             (select p.SUBSCRIPTION_FEE_RATIO from t_pd_wealth_charge_rate p where f.PD_WEALTH_ID = p.PD_WEALTH_ID)
             end 
         ) "subscriptionFeeRatio",
         (case when e.PRODUCT_SUB_TYPE = '02' then 
             NULL
             ELSE
             ifnull(d.reductionRadio,0)
             END
         ) "reductionRadio",
	       j.ACC_NAME "custAccName",
	       j.BANK_ACC_NO "custAccNo",
	       (CONCAT_WS("-",(SELECT b.BANK_NAME FROM t_def_bank b where b.BANK_ID = j.BANK_CODE ),j.BRANCH_BANK_NAME)) "custAccBank",
	       (select y.MOBILE from t_trade_cust_contact_rela x,t_cust_contact_info y
	          where b.TRADE_CUST_INFO_ID = x.TRADE_CUST_INFO_ID
	          and x.CUST_CONTACT_INFO_ID = y.CUST_CONTACT_INFO_ID
	          and x.RC_STATE = y.RC_STATE
	       ) "custMobile",
	       (select y.EMAIL from t_trade_cust_contact_rela x,t_cust_contact_info y
	          where b.TRADE_CUST_INFO_ID = x.TRADE_CUST_INFO_ID
	          and x.CUST_CONTACT_INFO_ID = y.CUST_CONTACT_INFO_ID
	          and x.RC_STATE = y.RC_STATE
	       ) "custEmail",
	       (select y.STREET from t_trade_cust_address_rela x,t_cust_address_info y
	          where b.TRADE_CUST_INFO_ID = x.TRADE_CUST_INFO_ID
	          and x.CUST_ADDRESS_INFO_ID = y.CUST_ADDRESS_INFO_ID
	          and x.RC_STATE = y.RC_STATE
	       ) "custAddress",
	       (select y.ZIP_CODE from t_trade_cust_address_rela x,t_cust_address_info y
	          where b.TRADE_CUST_INFO_ID = x.TRADE_CUST_INFO_ID
	          and x.CUST_ADDRESS_INFO_ID = y.CUST_ADDRESS_INFO_ID
	          and x.RC_STATE = y.RC_STATE
	       ) "zipcode",
	       (select x.AGENT_NAME from t_agent x where x.AGENT_ID = c.AGENT_ID and x.RC_STATE = 'E') "agentName",
	       DATE_FORMAT(a.TRADE_DATE,'%Y-%m-%d') "applyDateNo"
	       from t_trade_info a ,t_trade_cust_info b,t_cust_base_info c,t_trade_product_info_view d,
	       t_pd_product e ,t_pd_wealth f,t_trade_cust_acc_rela g,t_cust_acc_info j
	       where a.TRADE_INFO_ID = b.TRADE_INFO_ID
	       and b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
	       and a.TRADE_INFO_ID = d.TRADE_INFO_ID
	       and d.PRODUCT_ID = e.PRODUCT_ID
	       and e.PRODUCT_ID = f.PRODUCT_ID
	       and b.TRADE_CUST_INFO_ID = g.TRADE_CUST_INFO_ID
	       and g.CUST_ACC_INFO_ID = j.CUST_ACC_INFO_ID
	       and a.trade_info_id = #{tradeInfoId}
	       and a.RC_STATE = 'E'
	       and b.RC_STATE = 'E'
	       and c.RC_STATE = 'E'
	       and e.RC_STATE = 'E'
	       and f.RC_STATE = 'E' 
	       and g.RC_STATE = 'E'
	       and j.RC_STATE = 'E'
    </select>
    <!-- 获取客户认购确认书内容 -->
    <select id="getConfrimMapInfoList" parameterType="java.util.Map" resultType="java.util.Map">
        select   c.trade_no "tradeNo",
                 c.TRADE_TYPE "tradeType",
                 a.CHN_NAME "custName",
				 e.PRODUCT_NAME "productName",
				 k.AGENCY_NAME "agency",
				IFNULL(
					FUNC_GET_CODE_NAME (
						"beneficialType",
						d.beneficialType
					),
					"/"
				) "beneficialType",
				 (
				     case WHEN e.PRODUCT_SUB_TYPE = '02' or e.PRODUCT_SUB_TYPE='01'  THEN
					 DATE_FORMAT(f.FOUND_DATE,'%Y-%m-%d')
					 ELSE
					 DATE_FORMAT(d.expectOpenDay,'%Y-%m-%d')
                     end 
				 ) "foundDateNo",
				 c.TRADE_TOTAL_ASSETS "subscriptionFee",
				 	CASE
					WHEN g.AGENT_NAME = '平萍' or g.AGENT_NAME = '冯彩霞'
					THEN '/'
					ELSE g.AGENT_NAME
					END "agentName",
				 i.ACC_NAME "custAccName",
				 i.BANK_ACC_NO "custAccNo",
				CONCAT(
						(SELECT 
						a.BANK_NAME
						FROM
						t_def_bank a
						WHERE
						a.BANK_ID=i.BANK_CODE),
								'',
								i.BRANCH_BANK_NAME
							) "custAccBankName",
                DATE_FORMAT(SYSDATE(),'%Y-%m-%d') "printDateNo",
                CONCAT(
(CASE
WHEN(
SELECT
x.CLOSE_DPERIOD
FROM
t_pd_wealth_fee_rate x
WHERE
x.PD_WEALTH_ID = f.PD_WEALTH_ID
AND x.RC_STATE = 'E'
AND x.BENEFICIAL_TYPE = d.beneficialType
) IS NOT NULL
THEN
(
SELECT
x.CLOSE_DPERIOD
FROM
t_pd_wealth_fee_rate x
WHERE
x.PD_WEALTH_ID = f.PD_WEALTH_ID
AND x.RC_STATE = 'E'
AND x.BENEFICIAL_TYPE = d.beneficialType
) 
ELSE
f.CLOSE_DPERIODS
END
)
,' ',
FUNC_GET_CODE_NAME('cloPeriUnit',f.CLOSE_DPERIOD_UNIT)
) "closePeriod",
FUNC_GET_CODE_NAME('idType',a.ID_TYPE) "idType",
a.ID_NO "idNo"
				from t_cust_base_info a,t_trade_cust_info b,t_trade_info c,
				t_trade_product_info_view d,t_pd_product e,t_pd_wealth f,t_agent g,
				t_trade_cust_acc_rela h,t_cust_acc_info i,t_agency_com k
				where a.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
				and b.TRADE_INFO_ID = c.TRADE_INFO_ID
				and c.TRADE_INFO_ID = d.trade_info_id
				and d.PRODUCT_ID = e.PRODUCT_ID
				and e.PRODUCT_ID = f.PRODUCT_ID
				and a.AGENT_ID = g.AGENT_ID
				and b.TRADE_CUST_INFO_ID = h.TRADE_CUST_INFO_ID
				and h.CUST_ACC_INFO_ID = i.CUST_ACC_INFO_ID
				AND	k.AGENCY_COM_ID = e.AGENCY_COM_ID 
				AND h.TRADE_ACC_FLAG = "1"
				and c.trade_info_id = #{tradeInfoId}
				and a.RC_STATE = 'E'
				and b.RC_STATE = 'E'
				and c.RC_STATE = 'E'
				and e.RC_STATE = 'E'
				and f.RC_STATE = 'E'
				and g.RC_STATE = 'E'
				and h.RC_STATE = 'E'
				and i.RC_STATE = 'E'
				and k.RC_STATE = 'E'
    </select>
    
    
     <!-- 获取客户认购确认书浮动类01、 03内容 -->
    <select id="getFloatConfrimMapInfoList" parameterType="java.util.Map" resultType="java.util.Map">
        select   c.trade_no "tradeNo",
                 c.TRADE_TYPE "tradeType",
                 a.CHN_NAME "custName",
				 e.PRODUCT_NAME "productName",
				 k.AGENCY_NAME "agency",
				IFNULL(
					FUNC_GET_CODE_NAME (
						"beneficialType",
						d.beneficialType
					),
					"/"
				) "beneficialType",
				 (
				     case WHEN e.PRODUCT_SUB_TYPE = '02' or e.PRODUCT_SUB_TYPE='01'  THEN
					 DATE_FORMAT(f.FOUND_DATE,'%Y-%m-%d')
					 ELSE
					 DATE_FORMAT(d.expectOpenDay,'%Y-%m-%d')
                     end 
				 ) "foundDateNo",
				 c.TRADE_TOTAL_ASSETS "subscriptionFee",
				 		ROUND((c.TRADE_TOTAL_ASSETS
					*
					(
					SELECT
					IFNULL(x.SUBSCRIPTION_FEE_RATIO,0)/100
					FROM
					t_pd_wealth_charge_rate x
					WHERE f.PD_WEALTH_ID = x.PD_WEALTH_ID
					AND x.RC_STATE = 'E'
					)
					*
					(1-IFNULL(d.reductionRadio,0)/100)/10))*10 'subscriptionFeeRatio',
				 	CASE
					WHEN g.AGENT_NAME = '平萍' or g.AGENT_NAME = '冯彩霞'
					THEN '/'
					ELSE g.AGENT_NAME
					END "agentName",
				 i.ACC_NAME "custAccName",
				 i.BANK_ACC_NO "custAccNo",
				CONCAT(
						(SELECT 
						a.BANK_NAME
						FROM
						t_def_bank a
						WHERE
						a.BANK_ID=i.BANK_CODE),
								'',
								i.BRANCH_BANK_NAME
							) "custAccBankName",
                DATE_FORMAT(SYSDATE(),'%Y-%m-%d') "printDateNo",
                FUNC_GET_CODE_NAME('idType',a.ID_TYPE) "idType",
				a.ID_NO "idNo"
				from t_cust_base_info a,t_trade_cust_info b,t_trade_info c,
				t_trade_product_info_view d,t_pd_product e,t_pd_wealth f,t_agent g,
				t_trade_cust_acc_rela h,t_cust_acc_info i,t_agency_com k
				where a.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
				and b.TRADE_INFO_ID = c.TRADE_INFO_ID
				and c.TRADE_INFO_ID = d.trade_info_id
				and d.PRODUCT_ID = e.PRODUCT_ID
				and e.PRODUCT_ID = f.PRODUCT_ID
				and a.AGENT_ID = g.AGENT_ID
				and b.TRADE_CUST_INFO_ID = h.TRADE_CUST_INFO_ID
				and h.CUST_ACC_INFO_ID = i.CUST_ACC_INFO_ID
				AND	k.AGENCY_COM_ID = e.AGENCY_COM_ID 
				AND h.TRADE_ACC_FLAG = "1"
			    and c.trade_info_id = #{tradeInfoId}
				and a.RC_STATE = 'E'
				and b.RC_STATE = 'E'
				and c.RC_STATE = 'E'
				and e.RC_STATE = 'E'
				and f.RC_STATE = 'E'
				and g.RC_STATE = 'E'
				and h.RC_STATE = 'E'
				and i.RC_STATE = 'E'
				and k.RC_STATE = 'E'
    </select>
    <select id="getTradeCheckEmailData" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
a.TRADE_NO "tradeNo",  
b.PRODUCT_NAME "productName",
b.PRODUCT_SUB_TYPE "productSubType",
c.CHN_NAME "custName",
c.AGE "custAge",
c.CUST_LEVEL "custLevel",
CONCAT(v.subscriptionFee/10000,'',"万" ) "subscriptionFee",
CURRENT_TIME() "checkTime"
FROM 
 t_trade_info a,
t_pd_product b,
t_trade_product_info_view v,
t_cust_base_info c,
t_trade_cust_info d
WHERE
a.TRADE_INFO_ID = v.TRADE_INFO_ID
AND b.PRODUCT_ID = v.PRODUCT_ID
AND c.CUST_BASE_INFO_ID = d.CUST_BASE_INFO_ID
AND a.TRADE_INFO_ID = d.TRADE_INFO_ID
AND a.TRADE_INFO_ID = #{tradeInfoId}
AND a.RC_STATE = "E"
AND b.RC_STATE = "E"
AND c.RC_STATE = "E"
AND d.RC_STATE = "E"

    </select>
    
     <!-- 获取客户认购确认书浮动类 03内容 -->
    <select id="getFloatConfrimMapInfoList03" parameterType="java.util.Map" resultType="java.util.Map">
        select   c.trade_no "tradeNo",
                 c.TRADE_TYPE "tradeType",
                 a.CHN_NAME "custName",
				 e.PRODUCT_NAME "productName",
				 k.AGENCY_NAME "agency",
				(
SELECT
x.SUBSCRIPTION_COPIES
FROM
t_trade_status_info x
WHERE x.TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E'
				) 'subscriptionCopies',
ROUND((
SELECT
MAX(x.NET_VALUE)
FROM
t_pd_wealth_net_value x
WHERE x.PD_WEALTH_ID = f.PD_WEALTH_ID
AND x.RC_STATE = 'E'
AND x.PUBLIC_DATE = d.expectOpenDay
),4) 'netValue',
				 (
				     case WHEN e.PRODUCT_SUB_TYPE = '02' or e.PRODUCT_SUB_TYPE='01'  THEN
					 DATE_FORMAT(f.FOUND_DATE,'%Y-%m-%d')
					 ELSE
					 DATE_FORMAT(d.expectOpenDay,'%Y-%m-%d')
                     end 
				 ) "foundDateNo",
				 c.TRADE_TOTAL_ASSETS "subscriptionFee",
				 		ROUND((c.TRADE_TOTAL_ASSETS
					*
					(
					SELECT
					IFNULL(x.SUBSCRIPTION_FEE_RATIO,0)/100
					FROM
					t_pd_wealth_charge_rate x
					WHERE f.PD_WEALTH_ID = x.PD_WEALTH_ID
					AND x.RC_STATE = 'E'
					)
					*
					(1-IFNULL(d.reductionRadio,0)/100)/10))*10 'subscriptionFeeRatio',
				 	CASE
					WHEN g.AGENT_NAME = '平萍' or g.AGENT_NAME = '冯彩霞'
					THEN '/'
					ELSE g.AGENT_NAME
					END "agentName",
				 i.ACC_NAME "custAccName",
				 i.BANK_ACC_NO "custAccNo",
				CONCAT(
						(SELECT 
						a.BANK_NAME
						FROM
						t_def_bank a
						WHERE
						a.BANK_ID=i.BANK_CODE),
								'',
								i.BRANCH_BANK_NAME
							) "custAccBankName",
                DATE_FORMAT(SYSDATE(),'%Y-%m-%d') "printDateNo",
                FUNC_GET_CODE_NAME('idType',a.ID_TYPE) "idType",
				a.ID_NO "idNo"
				from t_cust_base_info a,
				t_trade_cust_info b,
				t_trade_info c,
				t_trade_product_info_view d,
				t_pd_product e,
				t_pd_wealth f,
				t_agent g,
				t_trade_cust_acc_rela h,
				t_cust_acc_info i,t_agency_com k
				where a.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
				and b.TRADE_INFO_ID = c.TRADE_INFO_ID
				and c.TRADE_INFO_ID = d.trade_info_id
				and d.PRODUCT_ID = e.PRODUCT_ID
				and e.PRODUCT_ID = f.PRODUCT_ID
				and a.AGENT_ID = g.AGENT_ID
				and b.TRADE_CUST_INFO_ID = h.TRADE_CUST_INFO_ID
				and h.CUST_ACC_INFO_ID = i.CUST_ACC_INFO_ID
				AND	k.AGENCY_COM_ID = e.AGENCY_COM_ID 
				AND h.TRADE_ACC_FLAG = "1"
			    and c.trade_info_id = #{tradeInfoId}
				and a.RC_STATE = 'E'
				and b.RC_STATE = 'E'
				and c.RC_STATE = 'E'
				and e.RC_STATE = 'E'
				and f.RC_STATE = 'E'
				and g.RC_STATE = 'E'
				and h.RC_STATE = 'E'
				and i.RC_STATE = 'E'
				and k.RC_STATE = 'E'
    </select>
    <select id="checkUpFile" parameterType="java.util.Map" resultType="java.util.Map">
    select * from t_def_file_info a
	where a.BUSINESS_NO=#{tradeInfoId}
	and a.BUSINESS_TYPE='13'
	and a.RC_STATE='E'
    </select>
    
    <select id="checkCustIDFile" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
			*
			FROM
			t_cust_base_info a,
			t_trade_info b,
			t_trade_cust_info c,
			t_def_file_info d
			WHERE
			a.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
			AND b.TRADE_INFO_ID = c.TRADE_INFO_ID
			AND a.CUST_BASE_INFO_ID = d.BUSINESS_NO
			AND b.TRADE_INFO_ID =#{tradeInfoId}
			and d.BUSINESS_TYPE='10'
			AND a.RC_STATE='E'
			AND b.RC_STATE='E'
			AND d.RC_STATE='E'
    </select>
    <!-- 获取判断基金风险等级与客户风险等级 -->
    <select id="getCustAndProductRiskInfo" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT
			E.CUST_RISK_LEVEL "custRiskLevel",
			f.GRADE "productGrade"
			FROM T_TRADE_INFO A,
			t_cust_base_info B,
			t_pd_product C,
			t_trade_cust_info D,
			t_trade_product_info_view V,
			t_cust_questionnaire_info e,
			t_pd_wealth f
			WHERE 1=1
			AND A.TRADE_INFO_ID = D.TRADE_INFO_ID
			AND B.CUST_BASE_INFO_ID = D.CUST_BASE_INFO_ID
			AND A.TRADE_INFO_ID = V.TRADE_INFO_ID
			AND C.PRODUCT_ID = V.PRODUCT_ID
			AND e.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
			AND f.PRODUCT_ID = c.PRODUCT_ID
			AND A.TRADE_INFO_ID = #{tradeInfoId}
			AND e.CREATE_DATE = (SELECT MAX(x.CREATE_DATE) FROM
								 t_cust_questionnaire_info x 
								WHERE x.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
								AND x.RC_STATE = 'E')
			AND A.RC_STATE = 'E'
			AND B.RC_STATE = 'E'
			AND C.RC_STATE = 'E'
			AND D.RC_STATE = 'E'
			AND E.RC_STATE = 'E'
			AND F.RC_STATE = 'E'
    </select>
  <!-- 获得生成的交易基本信息 -->  
    <select id="getTradeBaseInfo"  parameterType="java.util.Map" resultType="java.util.Map">
					SELECT
					a.trade_info_id "tradeInfoId",
					A.TRADE_NO "tradeNo",
					A.TRADE_TYPE "tradeType",
                    A.CURRENCY "currency",
					A.AGENT_ID "agentId",
					A.COMPANY_ID "companyId",
					A.TRADE_COM_ID "tradeComId",
					A.TRADE_INFO_NO "tradeInfoNo",
					(
					SELECT
						CONCAT(
							GROUP_CONCAT(e.product_name),
							''
						)
					FROM
						t_trade_product_info_view d,
						t_pd_product e
					WHERE
						d.TRADE_INFO_ID = a.trade_info_id
					AND d.PRODUCT_ID = e.product_id
					) "productName",
					(
					SELECT
						e.product_id
					FROM
						t_trade_product_info_view d,
						t_pd_product e
					WHERE
						d.TRADE_INFO_ID = a.trade_info_id
						AND d.PRODUCT_ID = e.product_id
				) "productId",
				(
				SELECT
					agent_name
				FROM
					t_agent
				WHERE
					agent_id = a.agent_id
				) "agentName",
				(
				SELECT
					AGENT_CODE
				FROM
					t_agent
				WHERE
					agent_id = a.agent_id
				) "agentCode",
				(
				SELECT
					com_name
				FROM
					t_def_com
				WHERE
					com_id = a.company_id
				) "comName",
				(
				SELECT
					com_name
				FROM
					t_def_com
				WHERE
					com_id = a.TRADE_COM_ID
				) "tradeComName",
				(
				SELECT
					com_code
				FROM
					t_def_com
				WHERE
					com_id = a.TRADE_COM_ID
				) "comCode",
				(
				SELECT
					store_name
				FROM
					t_def_store
				WHERE
					store_id = a.TRADE_STORE_ID
				) "tradeStoreName",
				A.TRADE_TOTAL_ASSETS "totalAssets",
				a.trade_staus "tradeStaus",
				(
						SELECT
							c.CUST_BASE_INFO_ID
						FROM
							t_trade_cust_info b,
							T_CUST_BASE_INFO c
						WHERE
							b.TRADE_INFO_ID = a.TRADE_INFO_ID
						AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
						AND b.rc_state = 'E'
					) "custBaseInfoId",
						(
						SELECT
							w.CUST_ADDRESS_INFO_ID
						FROM
							t_trade_cust_info b,
							T_CUST_BASE_INFO c,
            				t_cust_address_info w
						WHERE
							b.TRADE_INFO_ID = a.TRADE_INFO_ID
						AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
						AND w.CUST_BASE_INFO_ID=c.CUST_BASE_INFO_ID
						AND w.RC_STATE='E'
						AND b.rc_state = 'E'
					) "custAddressInfoId"
		FROM 
			T_TRADE_INFO A
		WHERE
			1 = 1
		AND RC_STATE = 'E'
		And A.TRADE_INFO_ID=#{tradeInfoId}
	</select>
</mapper>  