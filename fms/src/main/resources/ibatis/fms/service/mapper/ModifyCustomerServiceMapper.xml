<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fms.service.mapper.ModifyCustomerServiceMapper">
	<sql id="searchCustomerListCondition">
  		<if test="custBaseInfoId != null and custBaseInfoId !=''" >
      		AND A.cust_base_info_id  <![CDATA[ <> ]]>  #{custBaseInfoId}
    	</if>
  	</sql>

	
    <!-- 获取客户归属信息 -->
    <select id="custAscriptionMapList" parameterType="java.util.Map" resultType="java.util.Map">
    <!-- s -->
       select b.com_name "comName",
       <!-- c.store_name "storeName", -->
         d.department_name "departmentName",a.agent_name "agentName",a.agent_code "agentCode"  
         from t_agent a ,t_def_com b,
         <!-- t_def_store c, -->
         t_def_department d,t_cust_base_info e
         where a.agent_id = e.agent_id and a.com_id = b.com_id
         <!-- and a.store_id = c.store_id --> 
         and a.department_id = d.department_id
         and e.cust_base_info_id = #{custBaseInfoId}
         and a.rc_state = 'E'
         and b.rc_state = 'E'
         <!-- and c.rc_state = 'E' -->
         and d.rc_state = 'E'
         and e.rc_state = 'E' 
    </select>
    <!-- 获取客户联系地址信息 -->
    <select id="custAddressInfoMapList" parameterType="java.util.Map" resultType="java.util.Map">
    <!-- s -->
		   	SELECT
			A.CUST_ADDRESS_INFO_ID "custAddressInfoId",
			A.ADDRESS_TYPE "addressType",
			CONCAT(A.ADDRESS_TYPE,"-",FUNC_GET_CODE_NAME (
				'addressType',
				A.ADDRESS_TYPE
			))   "addressTypeName",
			A.PROVINCE "province",
			CONCAT(A.PROVINCE,'-',FUNC_GET_PLACE_NAME ('01', A.PROVINCE))  "provinceName",
			A.CITY "city",
			CONCAT(A.CITY,'-',FUNC_GET_PLACE_NAME ('02', A.CITY)) "cityName",
			A.COUNTRY "country",
			CONCAT(A.COUNTRY ,'-',FUNC_GET_PLACE_NAME ('03', A.COUNTRY))  "countryName",
			A.STREET "street",
			A.ZIP_CODE "zipCode"
		FROM
			T_CUST_ADDRESS_INFO A
		WHERE
			1 = 1
		AND A.CUST_BASE_INFO_ID = #{custBaseInfoId}
		AND A.RC_STATE = 'E'
		ORDER BY
			A.CUST_ADDRESS_INFO_ID
		
		
    </select> 
    <!-- 获取客户账户信息 -->
    <select id="custAccInfoMapList" parameterType="java.util.Map" resultType="java.util.Map">
    <!-- s -->
   		SELECT a.cust_acc_info_id "custAccInfoId",A.BANK_CODE "bankCode",
   			(SELECT CONCAT(B.BANK_CODE,'-',BANK_NAME) FROM T_DEF_BANK B WHERE B.BANK_ID = A.BANK_CODE)"bankName",
   			<!-- A.BANK_CODE||'-'||FUNC_GET_CODE_NAME('bankCode',A.BANK_CODE)  -->
   			A.BRANCH_BANK_NAME "branchBankName",
   			A.ACC_NAME "accName",A.BANK_ACC_NO "bankAccNo"
		FROM T_CUST_ACC_INFO A
		WHERE 1=1
		AND A.CUST_BASE_INFO_ID = #{custBaseInfoId}
		AND A.RC_STATE = 'E'
		order by A.CUST_ACC_INFO_ID 
    </select> 
    <!--获取客户拜访信息-->
    <select id="getModifyCustomerVisitInfo" parameterType="java.util.Map" resultType="java.util.Map">
	   <!-- s -->
	   <!--  select tAlias.*
	    from (select nAlias.*, rownum r_rownum
	    from
	    ( -->
		  select a.cust_visitor_info_id "custVisitorInfoId",
	          date_format(a.cust_visit_time, '%Y-%m-%d %H:%i:%S') "custVisitTime",
	          a.cust_visit_type "custVisitType",
	          CONCAT(a.cust_visit_type , '-' ,
	          (select t.code_name
	             from t_Def_Code t
	            where t.code = a.cust_visit_type
	              and t.code_type = 'preCustVisitType')) "custVisitTypeName",
	          a.cust_visit_action "custVisitAction",
	          a.cust_visit_action "custVisitActionValue",
	          (select GROUP_CONCAT( CONCAT(b.code , '-' , b.code_name))
	             from t_def_code b
	            where b.code_type = 'preCustVisitAction'
	              and instr(a.cust_visit_action, b.code) > 0) "custVisitActionName",
	          a.cust_visit_content "custVisitContent",
	          date_format(a.next_visit_time,'%Y-%m-%d %H:%i:%S') "nextVisitTime"
	          from t_cust_visit_info a
	          where a.cust_base_info_id = #{custBaseInfoId}
	          and a.rc_state = 'E'
	          order by a.cust_visit_time desc
	     <!--      ) nAlias) tAlias
	    where r_rownum >=
	    #{startIndex}
	    and #{endIndex} >= r_rownum -->
    </select>
    <!--获取客户其他投资信息-->
    <select id="customerOtherInvestInfoMapList" parameterType="java.util.Map" resultType="java.util.Map">
		 <!-- s -->
		 select    a.cust_history_investment_id "custHistoryInvestmentId",a.investment_type "investmentType",
		           (CONCAT(a.investment_type , '-' , FUNC_GET_CODE_NAME('investmentType',a.investment_type)))"investmentTypeName",
		           a.product_name "productName",a.agency_name "agencyName",a.product_purchase_com "productPurchaseCom",
		           a.investment_money "investMentMoney",
		           a.product_duration "productDuration",
		           date_format(a.end_date,'%Y-%m-%d') "endDate",
		           a.remark "remark",
		           date_format(a.input_date,'%Y-%m-%d %H:%i:%S') "inputDate"
		           from t_cust_history_investment a ,t_cust_base_info b
		           where a.cust_base_info_id = b.cust_base_info_id
		           and b.cust_base_info_id = #{custBaseInfoId}
		           and a.rc_state = 'E'
		           and b.rc_state = 'E'
       
    </select>
    <!--获取客户我司投资记录-->
    <select id="customerMyInvestInfoMapList" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
	g.found_date,
	g.close_dperiods,
	g.close_dperiod_unit,
	(
		CASE
		WHEN e.product_type = '2' THEN
			FUNC_GET_CODE_NAME (
				'productType',
				e.product_type
			)
		ELSE
			FUNC_GET_CODE_NAME (
				'wealthProSubType',
				e.product_sub_type
			)
		END
	) "investmentType",
	e.product_id "productId",
	e.product_name "productName",
	e.product_type "productTypeCode",
	e.product_sub_type "productSubTypeCode",

IF (
	f.agency_short_name IS NULL,
	f.agency_name,
	f.agency_short_name
) "agencyName",
 c.trade_total_assets "investMentMoney",
 (
	CASE
	WHEN e.product_sub_type = '01'
	OR e.product_sub_type = '02' THEN
		concat(
			(
				CASE
				WHEN (
					SELECT
						x.CLOSE_DPERIOD
					FROM
						t_pd_wealth_fee_rate x
					WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
					AND d.beneficialType = x.BENEFICIAL_TYPE
					AND x.rc_state = "E"
				) IS NULL THEN
					g.CLOSE_DPERIODS
				ELSE
					(
						SELECT
							x.CLOSE_DPERIOD
						FROM
							t_pd_wealth_fee_rate x
						WHERE
							g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
					)
				END
			),
			FUNC_GET_CODE_NAME (
				'closedPeriodUnit',
				g.close_dperiod_unit
			)
		)
	ELSE
		concat(
			d.insurdPeriod,
			FUNC_GET_CODE_NAME (
				'insurdPeriodUnit',
				d.insurdPeriodUnit
			)
		)
	END
) "productDuration",
 CASE WHEN
(SELECT
x.VALUE_DATE
FROM t_trade_funds_share_change x
WHERE x.ORIGIN_TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E'
) IS NOT NULL
THEN (SELECT
x.VALUE_DATE
FROM t_trade_funds_share_change x
WHERE x.ORIGIN_TRADE_INFO_ID  = c.TRADE_INFO_ID
AND x.RC_STATE = 'E'
)
ELSE
 (
					CASE
					WHEN c.trade_type = '1' THEN
						(
							CASE
							WHEN e.product_sub_type = '01' OR e.product_sub_type = '02' THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									g.found_date,(
							CASE
							WHEN 
						(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						)  IS NULL THEN
						g.CLOSE_DPERIODS
						ELSE
								(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						) 
							END
						),
						g.CLOSE_DPERIOD_UNIT
								)
							ELSE
								NULL
							END
						)
					ELSE
						(
							CASE
							WHEN d.insurdPeriodUnit IN ('Y', 'M', 'D') THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									(
										SELECT
											x.effective_date
										FROM
											t_trade_status_info x
										WHERE
											x.trade_info_id = c.trade_info_id
									),
									d.insurdPeriod,
									d.insurdPeriodUnit
								)
							ELSE
								FUNC_GET_CODE_NAME ('insurdPeriodUnit', 'E')
							END
						)
					END
				)
END
 "endDate",
 e.remark "remark",
  date_format(
	g.FOUND_DATE,
	'%Y-%m-%d'
) "foundDate",
 date_format(
	c.trade_input_date,
	'%Y-%m-%d'
) "inputDate",
case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUST_BASE_INFO_ID = #{custBaseInfoId}) 
then (
CASE WHEN
(SELECT
x.trade_status
FROM
t_trade_funds_share_change x
WHERE
	x.ORIGIN_TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E') IS NOT NULL
THEN 
FUNC_GET_CODE_NAME('tradeStatus',(SELECT
x.trade_status
FROM
t_trade_funds_share_change x
WHERE
	x.ORIGIN_TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E'))
ELSE
( CASE
WHEN e.product_sub_type = '01'
OR e.product_sub_type = '02' THEN
	(
		CASE
		WHEN (
			CASE
			WHEN c.trade_type = '1' THEN
				(
					CASE
					WHEN e.product_sub_type = '01'
					OR e.product_sub_type = '02' THEN
						FUNC_FOUNDATE_CLOSED_ENDDATE (
							g.found_date,
							(
								CASE
								WHEN (
									SELECT
										x.CLOSE_DPERIOD
									FROM
										t_pd_wealth_fee_rate x
									WHERE
										g.PD_WEALTH_ID = x.PD_WEALTH_ID
									AND d.beneficialType = x.BENEFICIAL_TYPE
									AND x.rc_state = "E"
								) IS NULL THEN
									g.CLOSE_DPERIODS
								ELSE
									(
										SELECT
											x.CLOSE_DPERIOD
										FROM
											t_pd_wealth_fee_rate x
										WHERE
											g.PD_WEALTH_ID = x.PD_WEALTH_ID
										AND d.beneficialType = x.BENEFICIAL_TYPE
										AND x.rc_state = "E"
									)
								END
							),
							g.CLOSE_DPERIOD_UNIT
						)
					ELSE
						NULL
					END
				)
			ELSE
				(
					CASE
					WHEN d.insurdPeriodUnit IN ('Y', 'M', 'D') THEN
						FUNC_FOUNDATE_CLOSED_ENDDATE (
							(
								SELECT
									x.effective_date
								FROM
									t_trade_status_info x
								WHERE
									x.trade_info_id = c.trade_info_id
							),
							d.insurdPeriod,
							d.insurdPeriodUnit
						)
					ELSE
						FUNC_GET_CODE_NAME ('insurdPeriodUnit', 'E')
					END
				)
			END
		) > CURDATE() THEN
			'存续中'
		ELSE
			'已到期'
		END
	)
ELSE
	(
		CASE
		WHEN (
			SELECT
				sum(
					x.subscription_copies - FUNC_GET_ALL_REDEMPTION_SHARE (c.TRADE_INFO_ID)
				)
			FROM
				t_trade_status_info x
			WHERE
				x.TRADE_INFO_ID = c.TRADE_INFO_ID
			AND x.rc_state = 'E'
		) > 0 THEN
			'存续中'
		ELSE
			'已赎回'
		END
	)
END)
END)
ELSE
(
CASE WHEN
(SELECT
x.trade_status
FROM
t_trade_funds_share_change x
WHERE
	x.TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E') IS NOT NULL
THEN 
FUNC_GET_CODE_NAME('tradeStatus',(SELECT
x.trade_status
FROM
t_trade_funds_share_change x
WHERE
	x.TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E'))
ELSE
( CASE
WHEN e.product_sub_type = '01'
OR e.product_sub_type = '02' THEN
	(
		CASE
		WHEN (
			CASE
			WHEN c.trade_type = '1' THEN
				(
					CASE
					WHEN e.product_sub_type = '01'
					OR e.product_sub_type = '02' THEN
						FUNC_FOUNDATE_CLOSED_ENDDATE (
							g.found_date,
							(
								CASE
								WHEN (
									SELECT
										x.CLOSE_DPERIOD
									FROM
										t_pd_wealth_fee_rate x
									WHERE
										g.PD_WEALTH_ID = x.PD_WEALTH_ID
									AND d.beneficialType = x.BENEFICIAL_TYPE
									AND x.rc_state = "E"
								) IS NULL THEN
									g.CLOSE_DPERIODS
								ELSE
									(
										SELECT
											x.CLOSE_DPERIOD
										FROM
											t_pd_wealth_fee_rate x
										WHERE
											g.PD_WEALTH_ID = x.PD_WEALTH_ID
										AND d.beneficialType = x.BENEFICIAL_TYPE
										AND x.rc_state = "E"
									)
								END
							),
							g.CLOSE_DPERIOD_UNIT
						)
					ELSE
						NULL
					END
				)
			ELSE
				(
					CASE
					WHEN d.insurdPeriodUnit IN ('Y', 'M', 'D') THEN
						FUNC_FOUNDATE_CLOSED_ENDDATE (
							(
								SELECT
									x.effective_date
								FROM
									t_trade_status_info x
								WHERE
									x.trade_info_id = c.trade_info_id
							),
							d.insurdPeriod,
							d.insurdPeriodUnit
						)
					ELSE
						FUNC_GET_CODE_NAME ('insurdPeriodUnit', 'E')
					END
				)
			END
		) > CURDATE() THEN
			'存续中'
		ELSE
			'已到期'
		END
	)
ELSE
	(
		CASE
		WHEN (
			SELECT
				sum(
					x.subscription_copies - FUNC_GET_ALL_REDEMPTION_SHARE (c.TRADE_INFO_ID)
				)
			FROM
				t_trade_status_info x
			WHERE
				x.TRADE_INFO_ID = c.TRADE_INFO_ID
			AND x.rc_state = 'E'
		) > 0 THEN
			'存续中'
		ELSE
			'已赎回'
		END
	)
END)
END)
END
 "remainingStaus"
FROM
	t_cust_base_info a
JOIN t_trade_cust_info b ON a.cust_base_info_id = b.cust_base_info_id
JOIN t_trade_info c ON b.trade_info_id = c.trade_info_id
AND c.rc_state = 'E'
AND case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUST_BASE_INFO_ID = #{custBaseInfoId})
then (c.trade_staus IN ('06', '10', '11','12','13','14'))
ELSE (c.trade_staus IN ('06', '10','13')) END
LEFT JOIN t_trade_product_info_view d ON c.trade_info_id = d.TRADE_INFO_ID
LEFT JOIN t_pd_product e ON d.PRODUCT_ID = e.product_id
AND e.rc_state = 'E'
LEFT JOIN t_agency_com f ON f.agency_com_id = e.agency_com_id
AND f.rc_state = 'E'
LEFT JOIN t_pd_wealth g ON e.product_id = g.product_id
AND g.rc_state = 'E'
WHERE
	a.cust_base_info_id = #{custBaseInfoId}
AND a.rc_state = 'E'
AND e.product_sub_type = '01'
    </select>
    <select id="customerMyInvestInfoMapList02" parameterType="java.util.Map" resultType="java.util.Map">
				        SELECT
	g.found_date,
	g.close_dperiods,
	g.close_dperiod_unit,
	(
		CASE
		WHEN e.product_type = '2' THEN
			FUNC_GET_CODE_NAME (
				'productType',
				e.product_type
			)
		ELSE
			FUNC_GET_CODE_NAME (
				'wealthProSubType',
				e.product_sub_type
			)
		END
	) "investmentType",
	e.product_id "productId",
	e.product_name "productName",
	e.product_type "productTypeCode",
	e.product_sub_type "productSubTypeCode",

IF (
	f.agency_short_name IS NULL,
	f.agency_name,
	f.agency_short_name
) "agencyName",
 c.trade_total_assets "investMentMoney",
 (
	CASE
	WHEN e.product_sub_type = '01'
	OR e.product_sub_type = '02' THEN
		concat(
			(
				CASE
				WHEN (
					SELECT
						x.CLOSE_DPERIOD
					FROM
						t_pd_wealth_fee_rate x
					WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
					AND d.beneficialType = x.BENEFICIAL_TYPE
					AND x.rc_state = "E"
				) IS NULL THEN
					g.CLOSE_DPERIODS
				ELSE
					(
						SELECT
							x.CLOSE_DPERIOD
						FROM
							t_pd_wealth_fee_rate x
						WHERE
							g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
					)
				END
			),
			FUNC_GET_CODE_NAME (
				'closedPeriodUnit',
				g.close_dperiod_unit
			)
		)
	ELSE
		concat(
			d.insurdPeriod,
			FUNC_GET_CODE_NAME (
				'insurdPeriodUnit',
				d.insurdPeriodUnit
			)
		)
	END
) "productDuration",
 CASE WHEN
(SELECT
x.VALUE_DATE
FROM t_trade_funds_share_change x
WHERE x.ORIGIN_TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E'
) IS NOT NULL
THEN (SELECT
x.VALUE_DATE
FROM t_trade_funds_share_change x
WHERE x.ORIGIN_TRADE_INFO_ID  = c.TRADE_INFO_ID
AND x.RC_STATE = 'E'
)
ELSE
 (
					CASE
					WHEN c.trade_type = '1' THEN
						(
							CASE
							WHEN e.product_sub_type = '01' OR e.product_sub_type = '02' THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									g.found_date,(
							CASE
							WHEN 
						(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						)  IS NULL THEN
						g.CLOSE_DPERIODS
						ELSE
								(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						) 
							END
						),
						g.CLOSE_DPERIOD_UNIT
								)
							ELSE
								NULL
							END
						)
					ELSE
						(
							CASE
							WHEN d.insurdPeriodUnit IN ('Y', 'M', 'D') THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									(
										SELECT
											x.effective_date
										FROM
											t_trade_status_info x
										WHERE
											x.trade_info_id = c.trade_info_id
									),
									d.insurdPeriod,
									d.insurdPeriodUnit
								)
							ELSE
								FUNC_GET_CODE_NAME ('insurdPeriodUnit', 'E')
							END
						)
					END
				)
END
 "endDate",
 (
	CASE
	WHEN e.product_type = '1' THEN
		(
			(
				CASE
				WHEN d.beneficialType IS NOT NULL THEN
					(
						SELECT
							concat(
								ROUND(
									(
										IFNULL(h.expected_fee_rate, 0) + IFNULL(h.add_expected_fee_rate, 0)
									),
									2
								),
								'%'
							)
						FROM
							t_pd_wealth_fee_rate h
						WHERE
							h.fee_type = '01'
						AND g.pd_wealth_id = h.pd_wealth_id
						AND d.beneficialType = h.beneficial_Type
						AND h.rc_state = 'E'
					)
				ELSE
					(
						SELECT
							concat(
								ROUND(
									(
										IFNULL(h.expected_fee_rate, 0) + IFNULL(h.add_expected_fee_rate, 0)
									),
									2
								),
								'%'
							)
						FROM
							t_pd_wealth_fee_rate h
						WHERE
							h.fee_type = '01'
						AND g.pd_wealth_id = h.pd_wealth_id
						AND h.rc_state = 'E'
					)
				END
			)
		)
	ELSE
		(
			SELECT
				i.description
			FROM
				t_pd_risk i
			WHERE
				i.product_id = e.product_id
			AND i.rc_state = 'E'
		)
	END
) "expectFeeRate",
 e.remark "remark",
  date_format(
	g.FOUND_DATE,
	'%Y-%m-%d'
) "foundDate",
 date_format(
	c.trade_input_date,
	'%Y-%m-%d'
) "inputDate",
case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUST_BASE_INFO_ID = #{custBaseInfoId})
then (
CASE WHEN
(SELECT
x.trade_status
FROM
t_trade_funds_share_change x
WHERE
	x.ORIGIN_TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E') IS NOT NULL
THEN 
FUNC_GET_CODE_NAME('tradeStatus',(SELECT
x.trade_status
FROM
t_trade_funds_share_change x
WHERE
	x.ORIGIN_TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E'))
ELSE
( CASE
WHEN e.product_sub_type = '01'
OR e.product_sub_type = '02' THEN
	(
		CASE
		WHEN (
			CASE
			WHEN c.trade_type = '1' THEN
				(
					CASE
					WHEN e.product_sub_type = '01'
					OR e.product_sub_type = '02' THEN
						FUNC_FOUNDATE_CLOSED_ENDDATE (
							g.found_date,
							(
								CASE
								WHEN (
									SELECT
										x.CLOSE_DPERIOD
									FROM
										t_pd_wealth_fee_rate x
									WHERE
										g.PD_WEALTH_ID = x.PD_WEALTH_ID
									AND d.beneficialType = x.BENEFICIAL_TYPE
									AND x.rc_state = "E"
								) IS NULL THEN
									g.CLOSE_DPERIODS
								ELSE
									(
										SELECT
											x.CLOSE_DPERIOD
										FROM
											t_pd_wealth_fee_rate x
										WHERE
											g.PD_WEALTH_ID = x.PD_WEALTH_ID
										AND d.beneficialType = x.BENEFICIAL_TYPE
										AND x.rc_state = "E"
									)
								END
							),
							g.CLOSE_DPERIOD_UNIT
						)
					ELSE
						NULL
					END
				)
			ELSE
				(
					CASE
					WHEN d.insurdPeriodUnit IN ('Y', 'M', 'D') THEN
						FUNC_FOUNDATE_CLOSED_ENDDATE (
							(
								SELECT
									x.effective_date
								FROM
									t_trade_status_info x
								WHERE
									x.trade_info_id = c.trade_info_id
							),
							d.insurdPeriod,
							d.insurdPeriodUnit
						)
					ELSE
						FUNC_GET_CODE_NAME ('insurdPeriodUnit', 'E')
					END
				)
			END
		) > CURDATE() THEN
			'存续中'
		ELSE
			'已到期'
		END
	)
ELSE
	(
		CASE
		WHEN (
			SELECT
				sum(
					x.subscription_copies - FUNC_GET_ALL_REDEMPTION_SHARE (c.TRADE_INFO_ID)
				)
			FROM
				t_trade_status_info x
			WHERE
				x.TRADE_INFO_ID = c.TRADE_INFO_ID
			AND x.rc_state = 'E'
		) > 0 THEN
			'存续中'
		ELSE
			'已赎回'
		END
	)
END)
END)
ELSE
(
CASE WHEN
(SELECT
x.trade_status
FROM
t_trade_funds_share_change x
WHERE
	x.TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E') IS NOT NULL
THEN 
FUNC_GET_CODE_NAME('tradeStatus',(SELECT
x.trade_status
FROM
t_trade_funds_share_change x
WHERE
	x.TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E'))
ELSE
( CASE
WHEN e.product_sub_type = '01'
OR e.product_sub_type = '02' THEN
	(
		CASE
		WHEN (
			CASE
			WHEN c.trade_type = '1' THEN
				(
					CASE
					WHEN e.product_sub_type = '01'
					OR e.product_sub_type = '02' THEN
						FUNC_FOUNDATE_CLOSED_ENDDATE (
							g.found_date,
							(
								CASE
								WHEN (
									SELECT
										x.CLOSE_DPERIOD
									FROM
										t_pd_wealth_fee_rate x
									WHERE
										g.PD_WEALTH_ID = x.PD_WEALTH_ID
									AND d.beneficialType = x.BENEFICIAL_TYPE
									AND x.rc_state = "E"
								) IS NULL THEN
									g.CLOSE_DPERIODS
								ELSE
									(
										SELECT
											x.CLOSE_DPERIOD
										FROM
											t_pd_wealth_fee_rate x
										WHERE
											g.PD_WEALTH_ID = x.PD_WEALTH_ID
										AND d.beneficialType = x.BENEFICIAL_TYPE
										AND x.rc_state = "E"
									)
								END
							),
							g.CLOSE_DPERIOD_UNIT
						)
					ELSE
						NULL
					END
				)
			ELSE
				(
					CASE
					WHEN d.insurdPeriodUnit IN ('Y', 'M', 'D') THEN
						FUNC_FOUNDATE_CLOSED_ENDDATE (
							(
								SELECT
									x.effective_date
								FROM
									t_trade_status_info x
								WHERE
									x.trade_info_id = c.trade_info_id
							),
							d.insurdPeriod,
							d.insurdPeriodUnit
						)
					ELSE
						FUNC_GET_CODE_NAME ('insurdPeriodUnit', 'E')
					END
				)
			END
		) > CURDATE() THEN
			'存续中'
		ELSE
			'已到期'
		END
	)
ELSE
	(
		CASE
		WHEN (
			SELECT
				sum(
					x.subscription_copies - FUNC_GET_ALL_REDEMPTION_SHARE (c.TRADE_INFO_ID)
				)
			FROM
				t_trade_status_info x
			WHERE
				x.TRADE_INFO_ID = c.TRADE_INFO_ID
			AND x.rc_state = 'E'
		) > 0 THEN
			'存续中'
		ELSE
			'已赎回'
		END
	)
END)
END)
END
 "remainingStaus"
FROM
	t_cust_base_info a
JOIN t_trade_cust_info b ON a.cust_base_info_id = b.cust_base_info_id
AND b.rc_state = 'E'
JOIN t_trade_info c ON b.trade_info_id = c.trade_info_id
AND c.rc_state = 'E'
AND case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUST_BASE_INFO_ID = #{custBaseInfoId})
then (c.trade_staus IN ('06', '10', '11','12','13','14'))
ELSE (c.trade_staus IN ('06', '10','13')) END
LEFT JOIN t_trade_product_info_view d ON c.trade_info_id = d.TRADE_INFO_ID
LEFT JOIN t_pd_product e ON d.PRODUCT_ID = e.product_id
AND e.rc_state = 'E'
LEFT JOIN t_agency_com f ON f.agency_com_id = e.agency_com_id
AND f.rc_state = 'E'
LEFT JOIN t_pd_wealth g ON e.product_id = g.product_id
AND g.rc_state = 'E'
WHERE
	a.cust_base_info_id = #{custBaseInfoId}
AND a.rc_state = 'E'
and b.rc_state='e'
AND e.product_sub_type = '02'
				</select>
<select id="customerMyInvestInfoMapList03" parameterType="java.util.Map" resultType="java.util.Map">
				         SELECT
					g.found_date,
					g.close_dperiods,
					g.close_dperiod_unit,
					(
						CASE
						WHEN e.product_type = '2' THEN
							FUNC_GET_CODE_NAME (
								'productType',
								e.product_type
							)
						ELSE
							FUNC_GET_CODE_NAME (
								'wealthProSubType',
								e.product_sub_type
							)
						END
					) "investmentType",
					e.product_id "productId",
					e.product_name "productName",
					e.product_type "productTypeCode",
					e.product_sub_type "productSubTypeCode",
				IF (
					f.agency_short_name IS NULL,
					f.agency_name,
					f.agency_short_name
				) "agencyName",
				 c.trade_total_assets "investMentMoney",
				 (
					CASE
					WHEN e.product_sub_type = '01' OR e.product_sub_type = '02' THEN
						concat((
							CASE
							WHEN 
						(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						)  IS NULL THEN
						g.CLOSE_DPERIODS
						ELSE
								(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						) 
							END
						), FUNC_GET_CODE_NAME (
							'closedPeriodUnit',
							g.close_dperiod_unit
						))
					ELSE
						concat(d.insurdPeriod , FUNC_GET_CODE_NAME (
							'insurdPeriodUnit',
							d.insurdPeriodUnit
						))
					END
				) "productDuration",
				 (
					CASE
					WHEN c.trade_type = '1' THEN
						(
							CASE
							WHEN e.product_sub_type = '01' OR e.product_sub_type = '02' THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									g.found_date,(
							CASE
							WHEN 
						(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						)  IS NULL THEN
						g.CLOSE_DPERIODS
						ELSE
								(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						) 
							END
						),
						g.CLOSE_DPERIOD_UNIT
								)
							ELSE
								NULL
							END
						)
					ELSE
						(
							CASE
							WHEN d.insurdPeriodUnit IN ('Y', 'M', 'D') THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									(
										SELECT
											x.effective_date
										FROM
											t_trade_status_info x
										WHERE
											x.trade_info_id = c.trade_info_id
									),
									d.insurdPeriod,
									d.insurdPeriodUnit
								)
							ELSE
								FUNC_GET_CODE_NAME ('insurdPeriodUnit', 'E')
							END
						)
					END
				) "endDate",
				 	 (
					CASE
					WHEN e.product_type = '1' THEN
						(
							(
								CASE
								WHEN d.beneficialType IS NOT NULL THEN
									(
										SELECT
											concat('收益率' ,ROUND((
												IFNULL(h.expected_fee_rate, 0) + IFNULL(h.add_expected_fee_rate, 0)
											) ,2), '%')
										FROM
											t_pd_wealth_fee_rate h
										WHERE
											h.fee_type = '01'
										AND g.pd_wealth_id = h.pd_wealth_id
										AND d.beneficialType = h.beneficial_Type
										AND h.rc_state = 'E'
													)
								ELSE
									(
										SELECT
											concat('收益率' , ROUND((
												IFNULL(h.expected_fee_rate, 0) + IFNULL(h.add_expected_fee_rate, 0)
											) ,2), '%')
										FROM
											t_pd_wealth_fee_rate h
										WHERE
											h.fee_type = '01'
										AND g.pd_wealth_id = h.pd_wealth_id
										AND h.rc_state = 'E'
									)
								END
							)
						)
					ELSE
						(
							SELECT
								i.description
							FROM
								t_pd_risk i
							WHERE
								i.product_id = e.product_id
							AND i.rc_state = 'E'
						)
					END
				) "remark",
				 date_format(
					c.trade_input_date,
					'%Y-%m-%d'
				) "inputDate",
(
SELECT
x.net_value
FROM
t_pd_wealth_net_value x
WHERE
x.pd_wealth_id = g.pd_wealth_id
AND x.rc_state = 'E'
AND x.public_date = (
					SELECT
						max(e.public_date)
					FROM
						t_pd_wealth_net_value e
					WHERE
						e.pd_wealth_id = g.pd_wealth_id
					AND e.rc_state = 'E'
				)
) 'netValue',
 date_format(d.expectOpenDay,'%Y-%m-%d') "expectOpenDay",
(
SELECT
y.SUBSCRIPTION_COPIES - FUNC_GET_ALL_REDEMPTION_SHARE(c.trade_info_id)
FROM
t_trade_status_info y
WHERE
y.trade_info_id = c.trade_info_id
AND y.rc_state = 'E'
) 'remainShare',
round((
SELECT
x.net_value
FROM
t_pd_wealth_net_value x
WHERE
x.pd_wealth_id = g.pd_wealth_id
AND x.rc_state = 'E'
AND x.public_date = (
					SELECT
						max(e.public_date)
					FROM
						t_pd_wealth_net_value e
					WHERE
						e.pd_wealth_id = g.pd_wealth_id
					AND e.rc_state = 'E'
				)
)*(
SELECT
y.SUBSCRIPTION_COPIES - FUNC_GET_ALL_REDEMPTION_SHARE(c.trade_info_id)
FROM
t_trade_status_info y
WHERE
y.trade_info_id = c.trade_info_id
AND y.rc_state = 'E'
),2) 'remainMoney',
				CASE
				WHEN e.product_sub_type = '01' or e.product_sub_type = '02'
				THEN
				(
				CASE WHEN 
				(
					CASE
					WHEN c.trade_type = '1' THEN
						(
							CASE
							WHEN e.product_sub_type = '01' OR e.product_sub_type = '02' THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									g.found_date,(
							CASE
							WHEN 
						(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						)  IS NULL THEN
						g.CLOSE_DPERIODS
						ELSE
								(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						) 
							END
						),
						g.CLOSE_DPERIOD_UNIT
								)
							ELSE
								NULL
							END
						)
					ELSE
						(
							CASE
							WHEN d.insurdPeriodUnit IN ('Y', 'M', 'D') THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									(
										SELECT
											x.effective_date
										FROM
											t_trade_status_info x
										WHERE
											x.trade_info_id = c.trade_info_id
									),
									d.insurdPeriod,
									d.insurdPeriodUnit
								)
							ELSE
								FUNC_GET_CODE_NAME ('insurdPeriodUnit', 'E')
							END
						)
					END
				)  > CURDATE()
				THEN '存续中'
				ELSE '已到期'
				END
				)
				ELSE 
				(
				CASE
				WHEN (SELECT 
				sum(x.subscription_copies-
				FUNC_GET_ALL_REDEMPTION_SHARE(c.TRADE_INFO_ID))
				FROM
				t_trade_status_info x
				WHERE
				x.TRADE_INFO_ID=c.TRADE_INFO_ID
				AND x.rc_state = 'E' ) > 0
								THEN '存续中'
				ELSE '已赎回'
				END
				)
				END "remainingStaus"
				FROM
					t_cust_base_info a
				JOIN t_trade_cust_info b ON a.cust_base_info_id = b.cust_base_info_id
				JOIN t_trade_info c ON b.trade_info_id = c.trade_info_id
				AND c.rc_state = 'E'
				AND c.trade_staus IN ('06', '10', '11')
				LEFT JOIN t_trade_product_info_view d ON c.trade_info_id = d.TRADE_INFO_ID
				LEFT JOIN t_pd_product e ON d.PRODUCT_ID = e.product_id
				AND e.rc_state = 'E'
				LEFT JOIN t_agency_com f ON f.agency_com_id = e.agency_com_id
				AND f.rc_state = 'E'
				LEFT JOIN t_pd_wealth g ON e.product_id = g.product_id
				AND g.rc_state = 'E'
				WHERE
					a.cust_base_info_id =#{custBaseInfoId}
				AND a.rc_state = 'E'
				AND e.product_sub_type = '03'
				</select>
				
<select id="customerMyInvestInfoMapList04" parameterType="java.util.Map" resultType="java.util.Map">
				         SELECT
					g.found_date,
					g.close_dperiods,
					g.close_dperiod_unit,
					(
						CASE
						WHEN e.product_type = '2' THEN
							FUNC_GET_CODE_NAME (
								'productType',
								e.product_type
							)
						ELSE
							FUNC_GET_CODE_NAME (
								'wealthProSubType',
								e.product_sub_type
							)
						END
					) "investmentType",
					e.product_id "productId",
					e.product_name "productName",
					e.product_type "productTypeCode",
					e.product_sub_type "productSubTypeCode",
				IF (
					f.agency_short_name IS NULL,
					f.agency_name,
					f.agency_short_name
				) "agencyName",
				 c.trade_total_assets "investMentMoney",
				 date_format(d.expectOpenDay,'%Y-%m-%d') "expectOpenDay",
				 (
					CASE
					WHEN e.product_sub_type = '01' OR e.product_sub_type = '02' THEN
						concat((
							CASE
							WHEN 
						(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						)  IS NULL THEN
						g.CLOSE_DPERIODS
						ELSE
								(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						) 
							END
						), FUNC_GET_CODE_NAME (
							'closedPeriodUnit',
							g.close_dperiod_unit
						))
					ELSE
						concat(d.insurdPeriod , FUNC_GET_CODE_NAME (
							'insurdPeriodUnit',
							d.insurdPeriodUnit
						))
					END
				) "productDuration",
				 (
					CASE
					WHEN c.trade_type = '1' THEN
						(
							CASE
							WHEN e.product_sub_type = '01' OR e.product_sub_type = '02' THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									g.found_date,(
							CASE
							WHEN 
						(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						)  IS NULL THEN
						g.CLOSE_DPERIODS
						ELSE
								(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						) 
							END
						),
						g.CLOSE_DPERIOD_UNIT
								)
							ELSE
								NULL
							END
						)
					ELSE
						(
							CASE
							WHEN d.insurdPeriodUnit IN ('Y', 'M', 'D') THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									(
										SELECT
											x.effective_date
										FROM
											t_trade_status_info x
										WHERE
											x.trade_info_id = c.trade_info_id
									),
									d.insurdPeriod,
									d.insurdPeriodUnit
								)
							ELSE
								FUNC_GET_CODE_NAME ('insurdPeriodUnit', 'E')
							END
						)
					END
				) "endDate",
				 	 (
					CASE
					WHEN e.product_type = '1' THEN
						(
							(
								CASE
								WHEN d.beneficialType IS NOT NULL THEN
									(
										SELECT
											concat('收益率' ,ROUND((
												IFNULL(h.expected_fee_rate, 0) + IFNULL(h.add_expected_fee_rate, 0)
											) ,2), '%')
										FROM
											t_pd_wealth_fee_rate h
										WHERE
											h.fee_type = '01'
										AND g.pd_wealth_id = h.pd_wealth_id
										AND d.beneficialType = h.beneficial_Type
										AND h.rc_state = 'E'
													)
								ELSE
									(
										SELECT
											concat('收益率' , ROUND((
												IFNULL(h.expected_fee_rate, 0) + IFNULL(h.add_expected_fee_rate, 0)
											) ,2), '%')
										FROM
											t_pd_wealth_fee_rate h
										WHERE
											h.fee_type = '01'
										AND g.pd_wealth_id = h.pd_wealth_id
										AND h.rc_state = 'E'
									)
								END
							)
						)
					ELSE
						(
							SELECT
								i.description
							FROM
								t_pd_risk i
							WHERE
								i.product_id = e.product_id
							AND i.rc_state = 'E'
						)
					END
				) "remark",
				 date_format(
					c.trade_input_date,
					'%Y-%m-%d'
				) "inputDate",
(
SELECT
x.net_value
FROM
t_pd_wealth_net_value x
WHERE
x.pd_wealth_id = g.pd_wealth_id
AND x.rc_state = 'E'
AND x.public_date = (
					SELECT
						max(e.public_date)
					FROM
						t_pd_wealth_net_value e
					WHERE
						e.pd_wealth_id = g.pd_wealth_id
					AND e.rc_state = 'E'
				)
) 'netValue',
(
SELECT
y.SUBSCRIPTION_COPIES - FUNC_GET_ALL_REDEMPTION_SHARE(c.trade_info_id)
FROM
t_trade_status_info y
WHERE
y.trade_info_id = c.trade_info_id
AND y.rc_state = 'E'
) 'remainShare',
round((
SELECT
x.net_value
FROM
t_pd_wealth_net_value x
WHERE
x.pd_wealth_id = g.pd_wealth_id
AND x.rc_state = 'E'
AND x.public_date = (
					SELECT
						max(e.public_date)
					FROM
						t_pd_wealth_net_value e
					WHERE
						e.pd_wealth_id = g.pd_wealth_id
					AND e.rc_state = 'E'
				)
)*(
SELECT
y.SUBSCRIPTION_COPIES - FUNC_GET_ALL_REDEMPTION_SHARE(c.trade_info_id)
FROM
t_trade_status_info y
WHERE
y.trade_info_id = c.trade_info_id
AND y.rc_state = 'E'
),2) 'remainMoney',
				CASE
				WHEN e.product_sub_type = '01' or e.product_sub_type = '02'
				THEN
				(
				CASE WHEN 
				(
					CASE
					WHEN c.trade_type = '1' THEN
						(
							CASE
							WHEN e.product_sub_type = '01' OR e.product_sub_type = '02' THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									g.found_date,(
							CASE
							WHEN 
						(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						)  IS NULL THEN
						g.CLOSE_DPERIODS
						ELSE
								(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						) 
							END
						),
						g.CLOSE_DPERIOD_UNIT
								)
							ELSE
								NULL
							END
						)
					ELSE
						(
							CASE
							WHEN d.insurdPeriodUnit IN ('Y', 'M', 'D') THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									(
										SELECT
											x.effective_date
										FROM
											t_trade_status_info x
										WHERE
											x.trade_info_id = c.trade_info_id
									),
									d.insurdPeriod,
									d.insurdPeriodUnit
								)
							ELSE
								FUNC_GET_CODE_NAME ('insurdPeriodUnit', 'E')
							END
						)
					END
				)  > CURDATE()
				THEN '存续中'
				ELSE '已到期'
				END
				)
				ELSE 
				(
				CASE
				WHEN (SELECT 
				sum(x.subscription_copies-
				FUNC_GET_ALL_REDEMPTION_SHARE(c.TRADE_INFO_ID))
				FROM
				t_trade_status_info x
				WHERE
				x.TRADE_INFO_ID=c.TRADE_INFO_ID
				AND x.rc_state = 'E' ) > 0
								THEN '存续中'
				ELSE '已赎回'
				END
				)
				END "remainingStaus"
				FROM
					t_cust_base_info a
				JOIN t_trade_cust_info b ON a.cust_base_info_id = b.cust_base_info_id
				JOIN t_trade_info c ON b.trade_info_id = c.trade_info_id
				AND c.rc_state = 'E'
				AND c.trade_staus IN ('06', '10', '11')
				LEFT JOIN t_trade_product_info_view d ON c.trade_info_id = d.TRADE_INFO_ID
				LEFT JOIN t_pd_product e ON d.PRODUCT_ID = e.product_id
				AND e.rc_state = 'E'
				LEFT JOIN t_agency_com f ON f.agency_com_id = e.agency_com_id
				AND f.rc_state = 'E'
				LEFT JOIN t_pd_wealth g ON e.product_id = g.product_id
				AND g.rc_state = 'E'
				WHERE
					a.cust_base_info_id =#{custBaseInfoId}
				AND a.rc_state = 'E'
				AND e.product_sub_type = '04'
				</select>
				
    <!--获取客户家庭信息-->
    <select id="getCustFamilyInfoMapList" parameterType="java.util.Map" resultType="java.util.Map">
   		<!-- s -->
   		SELECT A.MEMBER_NAME "memberName",A.RELATION_TO_CUST "relationToCust",
       		CONCAT(A.RELATION_TO_CUST,'-',FUNC_GET_CODE_NAME('relationToCust',A.RELATION_TO_CUST)) "relationToCustName",
       		A.AGE "age",A.OCCUPATION_CODE "occupationCode",FUNC_GET_CODE_NAME('occupation',A.OCCUPATION_CODE)"occupationName",
       		A.ANNUAL_INCOME "annualIncome",A.MOBILE "mobile",A.EMAIL,A.QQ "qq",A.WECHAT "wechat" 
		FROM T_CUST_FAMILY_INFO A
		WHERE 1=1
		AND A.CUST_BASE_INFO_ID = #{custBaseInfoId}
		AND A.RC_STATE = 'E'
		order by A.CUST_FAMILY_INFO_ID 
    </select> 
    <!--获取客户房产信息-->
    <select id="getCustHouseInfoMapList" parameterType="java.util.Map" resultType="java.util.Map">
   		<!-- s -->
   		SELECT A.HOUSE_PROPERTY_CODE "housePropertyCode",A.HOUSE_PROPERTY_VALUE "housePropertyValue",
       		A.HOUSE_PROPERTY_STATE "housePropertyState",
       		FUNC_GET_CODE_NAME('houseType',A.HOUSE_PROPERTY_STATE)"housePropertyStateName"
		FROM T_CUST_HOUSE_INFO A
		WHERE 1=1
		AND A.CUST_BASE_INFO_ID = #{custBaseInfoId}
		AND A.RC_STATE = 'E'
		order by A.CUST_HOUSE_INFO_ID 
    </select>
    <!--获取客户车辆信息-->
    <select id="getCustCarInfoMapList" parameterType="java.util.Map" resultType="java.util.Map">
   		<!-- s -->
		SELECT
			A.CAR_CODE "carCode",
			A.CAR_TYPE "carType",
			CONCAT(A.CAR_TYPE , '-' , FUNC_GET_CODE_NAME ('carType', A.CAR_TYPE)) "carTypeName",
			A.CAR_BRAND "carBrand",
			CONCAT(A.CAR_BRAND , '-' , FUNC_GET_CODE_NAME ('carBrand', A.CAR_BRAND)) "carBrandName",
			A.ENGINE_NO "engineNo",
			A.CAR_FRAME_NO "carFrameNo",
			A.LICENSE_PLATE_NO "licensePlateNo",
			A.RE_PRICE "rePrice"
		FROM
			T_CUST_CAR_INFO A
		WHERE
			1 = 1
		AND A.CUST_BASE_INFO_ID =  #{custBaseInfoId}
		AND A.RC_STATE = 'E'
		ORDER BY
			A.CUST_CAR_INFO_ID
    </select>
    <!-- 获取客户投资意向和建议信息 -->
    <select id="getCustInvestmentSuggestList" parameterType="java.util.Map" resultType="java.util.Map">
       <!-- s -->
       select  a.cust_invest_suggest_id "custInvestSuggestId",
               date_format(a.visit_date,'%Y-%m-%d %H:%i:%S') "visitDate",
		       a.history_invest_project "historyInvestProject",
		       a.history_invest_project "historyInvestProjectValue",
		       (select group_concat(CONCAT(b.code , '-' , b.code_name))
		               from t_def_code b where b.code_type = 'investProject'
			             and instr(a.history_invest_project, b.code) > 0) "historyInvestProjectName",
		       a.invest_project "investProject",
		       a.invest_project "investProjectValue",
		       (select group_concat(CONCAT(b.code , '-' , b.code_name))
		               from t_def_code b where b.code_type = 'investProject'
			             and instr(a.invest_project, b.code) > 0) "investProjectName",
		       a.invest_suggest "investSuggest"
		       from t_cust_investment_suggest a
		       where a.cust_base_info_id = #{custBaseInfoId}
		       and a.rc_state = 'E'
       

    </select>
    <!--根据姓名和手机号验证客户是否已经属于其他财富顾问-->
    <select id="checkCustBaseInfoChnNameAndMobileCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from t_cust_base_info a,t_cust_contact_info b
                where a.cust_base_info_id = b.cust_base_info_id
                and a.agent_id = b.agent_id
                and a.agent_id not in #{agentId}
                and a.chn_name = #{chnName}
                and b.mobile = #{mobile}
                and a.rc_state = 'E'
                and b.rc_state = 'E'
	</select>
	<!-- 根据手机号或者身份证验证自己名下是否有重复客户 -->
	<select id="checkCustBaseInfoIdNoOrMobileCount" parameterType="java.util.Map" resultType="java.lang.Integer">
	   select  count(1) from t_cust_base_info a ,t_cust_contact_info b
		       where a.cust_base_info_id = b.cust_base_info_id
		       and a.agent_id = #{agentId}
		       and a.cust_base_info_id not in #{custBaseInfoId}
		       and (b.mobile = #{mobile} or a.id_no = #{idNo})
		       and a.rc_state = 'E'
		       and b.rc_state = 'E'
       
	</select>
	<!-- 根据姓名验证自己名下是否有重名客户 -->
	<select id="checkCustBaseInfoChnName" parameterType="java.util.Map" resultType="java.lang.Integer">
	   select  count(1) from t_cust_base_info a 
		       where a.cust_base_info_id not in #{custBaseInfoId}
		       and a.agent_id = #{agentId}
		       and a.chn_name = #{chnName}
		       and a.rc_state = 'E'
	</select>
	<!-- 根据姓名与手机号查询自己客户是否有冲突 -->
	<select id="searchCustomer" parameterType="java.util.Map" resultType="java.util.Map">
		  		select   a.chn_name  "chn_name" ,   
		  						a.agent_id "agent_id",   
		  						b.mobile "mobile"
		  		from 
		  						t_cust_base_info    a  INNER   JOIN  t_cust_contact_info b  on   (a.cust_base_info_id  = b.cust_base_info_id and  b.rc_state = 'E')
		  		where
		  						a.rc_state = 'E' 
		  				and
		  						a.chn_name = #{chnName}
		  				and
		  						b.mobile = #{mobile}
		  				and 
		  						a.agent_id  =  #{agentId}
		  						<include refid="searchCustomerListCondition"/>
	</select>
	<!-- 根据姓名与手机号查询他人客户 -->
	<select id="searchOthAgentCustomer" parameterType="java.util.Map" resultType="java.util.Map">
		  		select   a.chn_name  "chn_name" ,   
		  						a.agent_id "agent_id",   
		  						b.mobile "mobile"
		  		from 
		  						t_cust_base_info    a  INNER   JOIN  t_cust_contact_info b  on   (a.cust_base_info_id  = b.cust_base_info_id and  b.rc_state = 'E')
		  		where
		  						a.rc_state = 'E' 
		  				and
		  						a.chn_name = #{chnName}
		  				and
		  						b.mobile = #{mobile}
		  				and
		  						a.cust_level = #{custLevel}
		  				and 
		  						a.agent_id  <![CDATA[ <> ]]>  #{agentId}
		  						<include refid="searchCustomerListCondition"/>
	</select>
	<!-- 根据姓名与手机号查询他人客户 -->
	<select id="searchOthAgentPreCustomerByMobile" parameterType="java.util.Map" resultType="java.util.Map">
		  		select   a.chn_name  "custName" ,   
  						a.agent_id "agentId",   
  						b.mobile "mobile"
		  		from 
  						t_cust_base_info    a  INNER   JOIN  t_cust_contact_info b  on   (a.cust_base_info_id  = b.cust_base_info_id and  b.rc_state = 'E')
		  		where
		  						a.rc_state = 'E' 
		  				and
		  						a.cust_level = #{custLevel}
		  				and
		  						b.mobile = #{mobile}
		  				and 
		  						a.agent_id  <![CDATA[ <> ]]>  #{agentId}
		  		<include refid="searchCustomerListCondition"/>
	</select>
    
    
    
    
    <select id="getAllCustNextVisitInfo" parameterType="java.util.Map" resultType="java.util.Map">
    	<!-- T_SYS_EMAIL_INFO 表没有-->
    	SELECT B.CUST_VISITOR_INFO_ID "custVisitInfoId",A.CUSTOMER_NO "customerNo",A.CHN_NAME "custName",
	          FUNC_GET_CODE_NAME('sex',A.SEX) "custSex",
	          (SELECT FUNC_GET_PLACE_NAME('01',E.PROVINCE)||FUNC_GET_PLACE_NAME('02',E.CITY)||
	                  FUNC_GET_PLACE_NAME('03',E.COUNTRY)||E.STREET
	                  FROM T_CUST_ADDRESS_INFO E WHERE E.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID 
	                  /*AND E.ADDRESS_TYPE = '02'*/ AND E.RC_STATE = 'E' AND ROWNUM = 1) "custAddress",
	          DATE_FORMAT(B.NEXT_VISIT_TIME,'%Y-%m-%d %H:%i:%S') "nextVisitTime",
	          C.AGENT_NAME "agentName",C.EMAIL "agentEmail"
	    FROM T_CUST_BASE_INFO A,T_CUST_VISIT_INFO B,T_AGENT C
	    WHERE A.CUST_BASE_INFO_ID = B.CUST_BASE_INFO_ID
	      AND A.AGENT_ID = B.AGENT_ID
	      AND B.AGENT_ID = C.AGENT_ID
	      AND B.NEXT_VISIT_TIME IS NOT NULL
	      AND C.EMAIL IS NOT NULL
	      AND (TRUNC(B.NEXT_VISIT_TIME)-TO_DATE('${currentDate}','%Y-%m-%d')) 
	          BETWEEN 0 AND FUNC_GET_CODE_NAME('sendMailAdvanceDays','01')
	      AND NOT EXISTS(SELECT 'X' FROM T_SYS_EMAIL_INFO D WHERE D.EMAIL_TYPE = '01' 
	                                AND D.EMAIL_RELATION_NO = B.CUST_VISITOR_INFO_ID 
	                                AND D.RC_STATE = 'E')
	      AND A.RC_STATE = 'E'
	      AND B.RC_STATE = 'E'
	      AND C.RC_STATE = 'E'
    </select>
    
    <select id="getMyCustomerByMobile" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT A.CUST_BASE_INFO_ID "custBaseInfoId",A.AGENT_ID "agentId"
		FROM T_CUST_BASE_INFO A,T_CUST_CONTACT_INFO B
		WHERE A.CUST_BASE_INFO_ID = B.CUST_BASE_INFO_ID
		  AND A.AGENT_ID = B.AGENT_ID
		  AND B.MOBILE = #{mobile}
		  AND A.AGENT_ID = #{agentId}
		  <if test="custBaseInfoId != null and custBaseInfoId !=''" >
      		AND A.CUST_BASE_INFO_ID  <![CDATA[ <> ]]>  #{custBaseInfoId}
    	  </if>
		  AND A.RC_STATE = 'E'
		  AND B.RC_STATE = 'E'
    </select>
    <select id="getModifyCustomerInvestAmount" parameterType="java.util.Map" resultType="java.math.BigDecimal">
       select    IFNULL(sum(a.investment_money),0)
               from t_cust_history_investment a ,t_cust_base_info b
               where a.cust_base_info_id = b.cust_base_info_id
               and b.cust_base_info_id = #{custBaseInfoId}
               and a.rc_state = 'E'
               and b.rc_state = 'E'
    </select>
    
    <select id="getModifyCustomerMyInvestAmount" parameterType="java.util.Map" resultType="java.math.BigDecimal">
      select   IFNULL(sum(c.trade_total_assets),0)+IFNULL(SUM((SELECT
x.TRANSFER_ASSET
FROM
t_trade_funds_share_change x
WHERE
	x.ORIGIN_TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E'
AND x.trade_status = '13')),0)
                 from
                    t_cust_base_info a join t_trade_cust_info b 
                   on a.cust_base_info_id = b.cust_base_info_id and b.RC_STATE = 'E' 
                   join t_trade_info c on b.trade_info_id = c.trade_info_id 
                   and c.rc_state = 'E' 
                   and case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUST_BASE_INFO_ID = #{custBaseInfoId})
then (c.trade_staus IN ('06', '10', '11','12','13','14'))
ELSE (c.trade_staus IN ('06', '10','13')) END 
                   left join t_trade_product_info_view d on c.trade_info_id = d.TRADE_INFO_ID 
                   left join t_pd_product e on d.PRODUCT_ID = e.product_id and e.rc_state = 'E'
                   left join t_agency_com f on f.agency_com_id = e.agency_com_id and f.rc_state = 'E'
                   left join t_pd_wealth g on e.product_id = g.product_id and g.rc_state = 'E'
                   where a.cust_base_info_id = #{custBaseInfoId}
                   and a.rc_state = 'E'
                   and e.product_sub_type = '01'
    </select>
    <select id="getModifyCustomerMyInvestAmount02" parameterType="java.util.Map" resultType="java.math.BigDecimal">
      select   IFNULL(sum(c.trade_total_assets),0)+IFNULL(SUM((SELECT
x.TRANSFER_ASSET
FROM
t_trade_funds_share_change x
WHERE
	x.ORIGIN_TRADE_INFO_ID = c.TRADE_INFO_ID
AND x.RC_STATE = 'E'
AND x.trade_status = '13')),0)
                 from
                    t_cust_base_info a join t_trade_cust_info b 
                   on a.cust_base_info_id = b.cust_base_info_id and b.RC_STATE = 'E' 
                   join t_trade_info c on b.trade_info_id = c.trade_info_id 
                   and c.rc_state = 'E' 
                   and case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUST_BASE_INFO_ID = #{custBaseInfoId})
then (c.trade_staus IN ('06', '10', '11','12','13','14'))
ELSE (c.trade_staus IN ('06', '10','13')) END 
                   left join t_trade_product_info_view d on c.trade_info_id = d.TRADE_INFO_ID 
                   left join t_pd_product e on d.PRODUCT_ID = e.product_id and e.rc_state = 'E'
                   left join t_agency_com f on f.agency_com_id = e.agency_com_id and f.rc_state = 'E'
                   left join t_pd_wealth g on e.product_id = g.product_id and g.rc_state = 'E'
                   where a.cust_base_info_id = #{custBaseInfoId}
                   and a.rc_state = 'E'
                   and e.product_sub_type = '02'
    </select>
    <select id="getModifyCustomerMyInvestShare" parameterType="java.util.Map" resultType="java.math.BigDecimal">
				SELECT
					SUM(a.SUBSCRIPTION_COPIES)
					FROM
					t_trade_status_info a,
					t_trade_info b,
					t_cust_base_info c,
					t_trade_cust_info d,
					t_pd_product e,
					t_trade_product_info_view v
					WHERE
					a.TRADE_INFO_ID = b.TRADE_INFO_ID
					AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
					AND c.CUST_BASE_INFO_ID = d.CUST_BASE_INFO_ID
					AND b.TRADE_INFO_ID = v.TRADE_INFO_ID
					AND e.PRODUCT_ID = v.PRODUCT_ID
					AND e.PRODUCT_SUB_TYPE = '03'
					AND c.CUST_BASE_INFO_ID = #{custBaseInfoId}
					AND a.RC_STATE = 'E'
					AND b.RC_STATE = 'E'
					AND c.RC_STATE = 'E'
					AND d.RC_STATE = 'E'
					AND e.RC_STATE = 'E'
    </select>
    
    
    <select id="getModifyCustomerMyInvestShare02" parameterType="java.util.Map" resultType="java.math.BigDecimal">
				SELECT
					SUM(a.SUBSCRIPTION_COPIES)
					FROM
					t_trade_status_info a,
					t_trade_info b,
					t_cust_base_info c,
					t_trade_cust_info d,
					t_pd_product e,
					t_trade_product_info_view v
					WHERE
					a.TRADE_INFO_ID = b.TRADE_INFO_ID
					AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
					AND c.CUST_BASE_INFO_ID = d.CUST_BASE_INFO_ID
					AND b.TRADE_INFO_ID = v.TRADE_INFO_ID
					AND e.PRODUCT_ID = v.PRODUCT_ID
					AND e.PRODUCT_SUB_TYPE = '04'
					AND c.CUST_BASE_INFO_ID = #{custBaseInfoId}
					AND a.RC_STATE = 'E'
					AND b.RC_STATE = 'E'
					AND c.RC_STATE = 'E'
					AND d.RC_STATE = 'E'
					AND e.RC_STATE = 'E'
    </select>
    
    <!-- 查询客户在本公司存续金额 -->
    <select id="getModifyCustomerMyRemainAmount" parameterType="java.util.Map" resultType="java.math.BigDecimal">
      select   IFNULL(sum(c.trade_total_assets),0)
                 from
                    t_cust_base_info a join t_trade_cust_info b 
                   on a.cust_base_info_id = b.cust_base_info_id and b.RC_STATE = 'E'
                   join t_trade_info c on b.trade_info_id = c.trade_info_id 
                   and c.rc_state = 'E' 
                   and case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUST_BASE_INFO_ID = #{custBaseInfoId})
then (c.trade_staus IN ('06', '10', '11','12','13','14'))
ELSE (c.trade_staus IN ('06', '10','13')) END 
                   left join t_trade_product_info_view d on c.trade_info_id = d.TRADE_INFO_ID 
                   left join t_pd_product e on d.PRODUCT_ID = e.product_id and e.rc_state = 'E'
                   left join t_agency_com f on f.agency_com_id = e.agency_com_id and f.rc_state = 'E'
                   left join t_pd_wealth g on e.product_id = g.product_id and g.rc_state = 'E'
                   where a.cust_base_info_id = #{custBaseInfoId}
                   and a.rc_state = 'E'
                   and e.product_sub_type = '01'
                   AND(
					CASE
					WHEN c.trade_type = '1' THEN
						(
							CASE
							WHEN e.product_sub_type = '01' OR e.product_sub_type = '02' THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									g.found_date,(
							CASE
							WHEN 
						(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						)  IS NULL THEN
						g.CLOSE_DPERIODS
						ELSE
								(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						) 
							END
						),
						g.CLOSE_DPERIOD_UNIT
								)
							ELSE
								NULL
							END
						)
					ELSE
						(
							CASE
							WHEN d.insurdPeriodUnit IN ('Y', 'M', 'D') THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									(
										SELECT
											x.effective_date
										FROM
											t_trade_status_info x
										WHERE
											x.trade_info_id = c.trade_info_id
									),
									d.insurdPeriod,
									d.insurdPeriodUnit
								)
							ELSE
								FUNC_GET_CODE_NAME ('insurdPeriodUnit', 'E')
							END
						)
					END
				)>CURDATE()
    </select>
    <select id="getModifyCustomerMyRemainAmount02" parameterType="java.util.Map" resultType="java.math.BigDecimal">
      select   IFNULL(sum(c.trade_total_assets),0)
                 from
                    t_cust_base_info a join t_trade_cust_info b 
                   on a.cust_base_info_id = b.cust_base_info_id and b.RC_STATE = 'E'
                   join t_trade_info c on b.trade_info_id = c.trade_info_id 
                   and c.rc_state = 'E' 
                   and case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUST_BASE_INFO_ID = #{custBaseInfoId})
then (c.trade_staus IN ('06', '10', '11','12','13','14'))
ELSE (c.trade_staus IN ('06', '10','13')) END 
                   left join t_trade_product_info_view d on c.trade_info_id = d.TRADE_INFO_ID 
                   left join t_pd_product e on d.PRODUCT_ID = e.product_id and e.rc_state = 'E'
                   left join t_agency_com f on f.agency_com_id = e.agency_com_id and f.rc_state = 'E'
                   left join t_pd_wealth g on e.product_id = g.product_id and g.rc_state = 'E'
                   where a.cust_base_info_id = #{custBaseInfoId}
                   and a.rc_state = 'E'
                   and e.product_sub_type = '02'
                   AND(
					CASE
					WHEN c.trade_type = '1' THEN
						(
							CASE
							WHEN e.product_sub_type = '01' OR e.product_sub_type = '02' THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									g.found_date,(
							CASE
							WHEN 
						(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						)  IS NULL THEN
						g.CLOSE_DPERIODS
						ELSE
								(SELECT
						x.CLOSE_DPERIOD
						FROM
						t_pd_wealth_fee_rate x
						WHERE
						g.PD_WEALTH_ID = x.PD_WEALTH_ID
						AND d.beneficialType = x.BENEFICIAL_TYPE
						AND x.rc_state = "E"
						) 
							END
						),
						g.CLOSE_DPERIOD_UNIT
								)
							ELSE
								NULL
							END
						)
					ELSE
						(
							CASE
							WHEN d.insurdPeriodUnit IN ('Y', 'M', 'D') THEN
								FUNC_FOUNDATE_CLOSED_ENDDATE (
									(
										SELECT
											x.effective_date
										FROM
											t_trade_status_info x
										WHERE
											x.trade_info_id = c.trade_info_id
									),
									d.insurdPeriod,
									d.insurdPeriodUnit
								)
							ELSE
								FUNC_GET_CODE_NAME ('insurdPeriodUnit', 'E')
							END
						)
					END
				)>CURDATE()
    </select>
    <select id="getModifyCustomerMyRemainShare" parameterType="java.util.Map" resultType="java.math.BigDecimal">
					SELECT
						SUM(a.SUBSCRIPTION_COPIES)-SUM(FUNC_GET_ALL_REDEMPTION_SHARE(b.TRADE_INFO_ID))
						FROM
						t_trade_status_info a,
						t_trade_info b,
						t_cust_base_info c,
						t_trade_cust_info d,
						t_pd_product e,
						t_trade_product_info_view v
						WHERE
						a.TRADE_INFO_ID = b.TRADE_INFO_ID
						AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
						AND c.CUST_BASE_INFO_ID = d.CUST_BASE_INFO_ID
						AND b.TRADE_INFO_ID = v.TRADE_INFO_ID
						AND e.PRODUCT_ID = v.PRODUCT_ID
						AND e.PRODUCT_SUB_TYPE = '03'
						AND b.TRADE_STAUS = '10'
						AND c.CUST_BASE_INFO_ID = #{custBaseInfoId}
						AND a.RC_STATE = 'E'
						AND b.RC_STATE = 'E'
						AND c.RC_STATE = 'E'
						AND d.RC_STATE = 'E'
						AND e.RC_STATE = 'E'
    
    </select>
  <!--   获取我的海外存续份额 -->
    <select id="getModifyCustomerMyRemainShare02" parameterType="java.util.Map" resultType="java.math.BigDecimal">
					SELECT
						SUM(a.SUBSCRIPTION_COPIES)-SUM(FUNC_GET_ALL_REDEMPTION_SHARE(b.TRADE_INFO_ID))
						FROM
						t_trade_status_info a,
						t_trade_info b,
						t_cust_base_info c,
						t_trade_cust_info d,
						t_pd_product e,
						t_trade_product_info_view v
						WHERE
						a.TRADE_INFO_ID = b.TRADE_INFO_ID
						AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
						AND c.CUST_BASE_INFO_ID = d.CUST_BASE_INFO_ID
						AND b.TRADE_INFO_ID = v.TRADE_INFO_ID
						AND e.PRODUCT_ID = v.PRODUCT_ID
						AND e.PRODUCT_SUB_TYPE = '04'
						AND b.TRADE_STAUS = '10'
						AND c.CUST_BASE_INFO_ID = #{custBaseInfoId}
						AND a.RC_STATE = 'E'
						AND b.RC_STATE = 'E'
						AND c.RC_STATE = 'E'
						AND d.RC_STATE = 'E'
						AND e.RC_STATE = 'E'
    
    </select>
    
    <!-- 根据agentId查询财富顾问信息 -->
    <select id="searchAgent" parameterType="java.util.Map" resultType="java.util.Map">
  		<!-- +? -->
  		select b.com_name "comName", d.department_name "departmentName", c.store_name "storeName", 
		       a.agent_name "agentName", a.agent_code "agentCode"
		from t_agent a,t_def_com b,t_def_store c,t_def_department d
		where a.com_id = b.com_id
			and a.store_id = c.store_id
			and a.department_id = d.department_id
			and a.rc_state = 'E'
			and b.rc_state = 'E'
			and c.rc_state = 'E'
			and d.rc_state = 'E'
			and a.agent_id = #{agentId}
    </select> 
    
    
    <select id="getAllCustVisitEmail" parameterType="java.util.Map" resultType="java.util.Map">
    	<!-- sys_email_info 么得-->
    	SELECT A.SYS_EMAIL_INFO_ID "sysEmailInfoId",A.EMAIL_ADDRESS "address",A.EMAIL_TITLE "title",A.EMAIL_CONTENT "content"
	    FROM T_SYS_EMAIL_INFO A
	    WHERE A.EMAIL_STATUS = '01'
	            OR (A.EMAIL_CREATE_TIME IS NOT NULL 
	               AND (TO_DATE('${currentDate}','%Y-%m-%d')-TRUNC(A.EMAIL_CREATE_TIME)) 
	                   BETWEEN 0 AND FUNC_GET_CODE_NAME('sendMailAdvanceDays','01'))
	        AND A.RC_STATE = 'E'
    </select>
    <!-- 获取风控问卷历史记录信息 -->
    <select id="getHistoryRecordList" parameterType="java.util.Map" resultType="java.util.Map">
				SELECT
						a.SCORE 'score',
						a.SUBMIT_DATE 'submitDate',
						FUNC_GET_CODE_NAME('questionnaireType',(CASE b.QUESTIONNAIRE_TYPE WHEN '03' THEN '01'
						WHEN '04' THEN '02' ELSE b.QUESTIONNAIRE_TYPE END))	 'custQuestionnaireState',
						a.CUST_QUESTIONNAIRE_ID 'custQuestionnaireId',
            FUNC_GET_CODE_NAME('custRiskLevel',a.CUST_RISK_LEVEL) 'custRiskLevel'
					FROM
						t_cust_questionnaire_info a,
t_def_questionnaire b
					WHERE
						1 = 1
AND b.QUESTIONNAIRE_ID = a.QUESTIONNAIRE_ID
					AND a.cust_base_info_id = #{custBaseInfoId}
					AND a.RC_STATE = 'E'
					ORDER BY
						a.SUBMIT_DATE DESC
LIMIT #{startIndex} , #{endIndex} 
    </select>
    <!-- 获取风控问卷历史记录总数 -->
   <select id="getHistoryRecordListCount" parameterType="java.util.Map" resultType="java.lang.Integer">
 	<!-- s -->
		SELECT COUNT(1)
		FROM 
				      t_cust_questionnaire_info 
		WHERE 
		1 = 1
					AND cust_base_info_id = #{custBaseInfoId}
					AND
		    RC_STATE = 'E'
    </select> 
</mapper>