<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
  
<mapper namespace="com.fms.service.mapper.CustomerServiceMapper">

  	<sql id="searchCustomerListCondition">
  		<if test="chnName != null and chnName !=''" >
      		AND A.CHN_NAME like '%${chnName}%'
    	</if>
    	<if test="idType != null and idType !=''" >
      		AND A.ID_TYPE = #{idType}
    	</if>
    	<if test="idNo != null and idNo !=''" >
      		AND A.ID_NO = #{idNo}
    	</if>
    	<if test=" agentId != null and agentId != ''" >
    		AND A.AGENT_ID = #{agentId}
    	</if>
  	</sql>
  
  	<select id="searchCustomerList" parameterType="java.util.Map" resultType="java.util.Map">
  	<!-- S -->
  	<!-- limit 可查出数据 -->
  		
         		SELECT 
					         		CONCAT(A.CUST_BASE_INFO_ID,'') 															"custBaseInfoId",
					         		A.CUSTOMER_NO 																								"customerNo",
					         		A.CHN_NAME 																										"chnName",
					                A.LAST_NAME 																										"lastName",
					                A.FIRST_NAME 																									"firstName",
					                A.SEX 																														"sex",
					               FUNC_GET_CODE_NAME('sex',A.SEX) 						"sexName",
					               date_format(A.BIRTHDAY,'%Y-%m-%d') 														"birthday",
					               A.AGE 																														"age",
					               A.ID_TYPE 																												"idType",
					               FUNC_GET_CODE_NAME('idType',A.ID_TYPE) 		"idTypeName" ,
					                A.ID_NO 																													"idNo",
					               A.NATIVE_PLACE 																								"nativePlace",
					               A.DRIVING_LICENSE 																							"drivingLicense",
			                   	  (SELECT 	AGENT_NAME 
			                   		FROM 		T_AGENT 
			                   		WHERE 	AGENT_ID = A.AGENT_ID AND RC_STATE = 'E')				"belongAgentName",
			                   	   date_format(A.ID_VALIDITY_DATE,'%Y-%m-%d') 										"idValidityDate",
			                   	   A.cust_level																											"custLevel",
			                   	   A.agent_id																												"agentId"
		        FROM 	  T_CUST_BASE_INFO    A  
		        WHERE 1=1
		        AND A.RC_STATE = 'E'
				<include refid="searchCustomerListCondition"/>
				order by A.CUST_BASE_INFO_ID desc
 			LIMIT #{startIndex} , #{endIndex} 
  	
		
    </select> 
    
    <select id="searchCustomerCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(1)
        FROM T_CUST_BASE_INFO A
        WHERE 1=1
        AND A.RC_STATE = 'E'
		<include refid="searchCustomerListCondition"/>
    </select> 
 
 	<select id="getCustAccList" parameterType="java.util.Map" resultType="java.util.Map">
 	<!-- S -->
   		SELECT a.cust_acc_info_id "custAccInfoId",A.BANK_CODE "bankCode",
   			(SELECT CONCAT(B.BANK_CODE, '-' ,BANK_NAME) FROM T_DEF_BANK B WHERE B.BANK_ID = A.BANK_CODE)"bankName",
   			<!-- A.BANK_CODE||'-'||FUNC_GET_CODE_NAME('bankCode',A.BANK_CODE)  -->
   			A.BRANCH_BANK_NAME "branchBankName",
   			A.ACC_NAME "accName",A.BANK_ACC_NO "bankAccNo"
		FROM T_CUST_ACC_INFO A
		WHERE 1=1
		AND A.CUST_BASE_INFO_ID = #{custBaseInfoId}
		AND A.RC_STATE = #{rcState}
		order by A.CUST_ACC_INFO_ID 
    </select> 
 
 	<select id="getCustFamilyList" parameterType="java.util.Map" resultType="java.util.Map">
 	<!-- s -->
   		SELECT A.MEMBER_NAME "memberName",A.RELATION_TO_CUST "relationToCust",
       		CONCAT(A.RELATION_TO_CUST,'-',(FUNC_GET_CODE_NAME('relationToCust',A.RELATION_TO_CUST)))"relationToCustName",
       		A.AGE "age",A.OCCUPATION_CODE "occupationCode",FUNC_GET_CODE_NAME('occupation',A.OCCUPATION_CODE)"occupationName",
       		A.ANNUAL_INCOME "annualIncome",A.MOBILE "mobile",A.EMAIL,A.QQ "qq",A.WECHAT "wechat" 
		FROM T_CUST_FAMILY_INFO A
		WHERE 1=1
		AND A.CUST_BASE_INFO_ID = #{custBaseInfoId}
		AND A.RC_STATE = #{rcState}
		order by A.CUST_FAMILY_INFO_ID 
    </select> 

 	<select id="getCustAddressList" parameterType="java.util.Map" resultType="java.util.Map">
 	<!-- s -->
   		SELECT A.CUST_ADDRESS_INFO_ID "custAddressInfoId",A.ADDRESS_TYPE "addressType",
   			CONCAT(A.ADDRESS_TYPE,'-',FUNC_GET_CODE_NAME('addressType',A.ADDRESS_TYPE))"addressTypeName",
       		A.PROVINCE "province",CONCAT(A.PROVINCE,'-',FUNC_GET_PLACE_NAME('01',A.PROVINCE))"provinceName",A.CITY "city",
       		CONCAT(A.CITY,'-',FUNC_GET_PLACE_NAME('02',A.CITY))"cityName",A.COUNTRY "country",
       		CONCAT(A.COUNTRY,'-',FUNC_GET_PLACE_NAME('03',A.COUNTRY))"countryName",A.STREET "street",A.ZIP_CODE "zipCode"
		FROM T_CUST_ADDRESS_INFO A
		WHERE 1=1
		AND A.CUST_BASE_INFO_ID = #{custBaseInfoId}
		<if test="agentId != null and agentId !=''" >
      		AND A.AGENT_ID = #{agentId}
    	</if>
    	<if test="agentId == null or agentId ==''" >
      		AND A.AGENT_ID IS NULL
    	</if>
		AND A.RC_STATE = #{rcState}
		order by A.CUST_ADDRESS_INFO_ID 
    </select> 
    
    <select id="getCustHouseList" parameterType="java.util.Map" resultType="java.util.Map">
    <!-- s -->
   		SELECT A.HOUSE_PROPERTY_CODE "housePropertyCode",A.HOUSE_PROPERTY_VALUE "housePropertyValue",
       		A.HOUSE_PROPERTY_STATE "housePropertyState",
       		FUNC_GET_CODE_NAME('houseType',A.HOUSE_PROPERTY_STATE)"housePropertyStateName"
		FROM T_CUST_HOUSE_INFO A
		WHERE 1=1
		AND A.CUST_BASE_INFO_ID = #{custBaseInfoId}
		AND A.RC_STATE = #{rcState}
		order by A.CUST_HOUSE_INFO_ID 
    </select>
 	
 	<select id="getCustCarList" parameterType="java.util.Map" resultType="java.util.Map">
 	<!-- s -->
   		SELECT A.CAR_CODE "carCode",A.CAR_TYPE "carType",CONCAT(A.CAR_TYPE,'-',FUNC_GET_CODE_NAME('carType',A.CAR_TYPE))"carTypeName",
       		A.CAR_BRAND "carBrand",CONCAT(A.CAR_BRAND,'-',FUNC_GET_CODE_NAME('carBrand',A.CAR_BRAND))"carBrandName",
       		A.ENGINE_NO "engineNo",A.CAR_FRAME_NO "carFrameNo",A.LICENSE_PLATE_NO "licensePlateNo",A.RE_PRICE "rePrice"
		FROM T_CUST_CAR_INFO A
		WHERE 1=1
		AND A.CUST_BASE_INFO_ID = #{custBaseInfoId}
		AND A.RC_STATE = #{rcState}
		order by A.CUST_CAR_INFO_ID 
    </select>
 	
 	<sql id="queryCustomerListCondition">
 		<if test="agentId != null and agentId !=''" >
      		AND EXISTS(SELECT 'X' FROM T_AGENT F WHERE F.AGENT_ID = #{agentId} AND F.AGENT_ID = A.AGENT_ID AND F.RC_STATE = 'E')
    	</if>
 		<if test="comId != null and comId !=''" >
      		AND EXISTS(SELECT 'X' FROM T_AGENT F WHERE F.COM_ID = #{comId} AND F.AGENT_ID = A.AGENT_ID AND F.RC_STATE = 'E')
    	</if>
    	<if test="departmentId != null and departmentId !=''" >
      		AND EXISTS(SELECT 'X' FROM T_AGENT F WHERE F.DEPARTMENT_ID = #{departmentId} AND F.AGENT_ID = A.AGENT_ID AND F.RC_STATE = 'E')
    	</if>
    	<if test="storeId != null and storeId !=''" >
    		AND EXISTS(SELECT 'X' FROM T_AGENT F WHERE F.STORE_ID = #{storeId} AND F.AGENT_ID = A.AGENT_ID AND F.RC_STATE = 'E')
    	</if>
    	<if test="agentId != null and agentId !=''" >
      		AND A.AGENT_ID = #{agentId}
    	</if>
  		<if test="customerNo != null and customerNo !=''" >
      		AND A.CUSTOMER_NO LIKE '%${customerNo}%'
    	</if>
    	<if test="chnName != null and chnName !=''" >
      		AND A.CHN_NAME LIKE '%${chnName}%'
    	</if>
    	<!-- <if test="lastName != null and lastName !=''" >
    		AND A.LAST_NAME LIKE '%'||#{lastName}||'%'
    	</if>
    	<if test="firstName != null and firstName !=''" >
    		AND A.FIRST_NAME LIKE '%'||#{firstName}||'%'
    	</if>
    	<if test="idType != null and idType !=''" >
      		AND A.ID_TYPE = #{idType}
    	</if>
    	<if test="idNo!= null and idNo!=''" >
      		AND A.ID_NO LIKE '%'||#{idNo}||'%'
    	</if>
    	<if test="sex != null and sex !=''" >
      		AND A.SEX = #{sex}
    	</if>
    	<if test="birthdayBegin != null and birthdayBegin !=''" >
      		AND A.BIRTHDAY <![CDATA[>=]]> date'${birthdayBegin}'
    	</if>
    	<if test="birthdayEnd != null and birthdayEnd !=''" >
      		AND A.BIRTHDAY <![CDATA[<=]]> date'${birthdayEnd}'
    	</if> -->
    	
    	<if test="custLevel != null and custLevel !=''" >
    		AND A.CUST_LEVEL = #{custLevel}
    	</if>
    	<if test="custQuality != null and custQuality !=''" >
    		AND Z.CUST_QUALITY = #{custQuality}
    	</if>
    	<if test="custObtainWay != null and custObtainWay !=''" >
    		AND A.CUST_OBTAIN_WAY = #{custObtainWay}
    	</if>
    	<if test="investCustomerType != null and investCustomerType !=''" >
    		AND A.INVEST_CUSTOMER_TYPE = #{investCustomerType}
    	</if>
    	<if test="custType != null and custType !=''" >
    		 AND EXISTS(SELECT 'X' FROM T_CUST_OTH_INFO OTH WHERE OTH.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID 
                                  AND OTH.CUST_TYPE = #{custType} AND OTH.AGENT_ID = A.AGENT_ID AND OTH.RC_STATE = 'E')
    	</if>
    	<if test="mobileOrIdNo != null and mobileOrIdNo !=''" >
    		AND (A.ID_NO = #{mobileOrIdNo} OR EXISTS(SELECT 'X' FROM T_CUST_CONTACT_INFO G WHERE G.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID 
            		AND G.RC_STATE = 'E' AND G.MOBILE = #{mobileOrIdNo}))
    	</if>
    	
    	<!-- 以下是查询权限控制 3-本机构及下属机构数据，2-本机构数据，1-本人数据-->
    	<if test='rolePrivilege!=null and rolePrivilege!=null and rolePrivilege=="3"'>
    	<!-- 	AND EXISTS(
    			SELECT 'X' FROM T_CUST_CONTACT_INFO B 
    			WHERE B.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
    			AND B.RC_STATE = 'E'
    			AND B.OPER_COM_ID IN(
    				SELECT C.COM_ID
					FROM T_DEF_COM C 
					WHERE C.RC_STATE = 'E'
						AND C.STATE='01'
						START WITH C.COM_ID = #{operComId} CONNECT BY PRIOR C.COM_ID = C.PARENT_COM_ID
    			)
    		) -->
    		and a.agent_id in (select x.agent_id
                 from t_agent x
                where x.com_id in 
                      (select Y.COM_ID from t_def_com Y
						where FIND_IN_SET(Y.COM_ID, queryChildrenNodeInfo(#{operComId}))
                       )
                  and x.rc_state = 'E')
    	</if>
    	<if test='rolePrivilege!=null and rolePrivilege!=null and rolePrivilege=="2" '>
    	<!-- 	AND EXISTS(
    			SELECT 'X' FROM T_CUST_CONTACT_INFO B 
    			WHERE B.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
    			AND B.RC_STATE = 'E'
    			AND B.OPER_COM_ID = #{operComId} 
    		) -->
    		 and a.agent_id in (select x.agent_id
                              from t_agent x
                                where x.com_id = #{operComId}
                                  and x.rc_state = 'E')
    	</if>
    	<if test='rolePrivilege!=null and rolePrivilege!=null and rolePrivilege=="1" '>
    	<!-- 	AND EXISTS(
    			SELECT 'X' FROM T_CUST_CONTACT_INFO B 
    			WHERE B.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
    			AND B.RC_STATE = 'E'
    			AND (EXISTS(SELECT'X' FROM T_AGENT WHERE USER_ID = #{createUserId} AND AGENT_ID =B.AGENT_ID ) 
    					OR B.CREATE_USER_ID = #{createUserId})
    		) -->
    		and a.agent_id in (select x.agent_id
			from t_agent x
			where x.user_id = #{createUserId}
			and x.rc_state = 'E')
    	</if>
    	<if test="isGoldenStateopen != null and isGoldenStateopen !=''" >
    		 AND EXISTS(SELECT 'X' FROM T_CUST_OTH_INFO OTH WHERE OTH.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID 
                                  AND OTH.IS_GOLDEN_STATEOPEN = #{isGoldenStateopen} AND OTH.AGENT_ID = A.AGENT_ID AND OTH.RC_STATE = 'E')
    	</if>
    	<if test="birthMonth != null and birthMonth !=''">
    		AND SUBSTR(A.BIRTHDAY FROM 6 FOR 2) =#{birthMonth}
    	</if>
    	
    	<!-- 权限控制结束 -->
  	</sql>
 	
 	<select id="queryCustomerList" parameterType="java.util.Map" resultType="java.util.Map">
  		<!-- S 将rownum改成了LIMIT-->
         		<!-- SELECT A.CUST_BASE_INFO_ID "custBaseInfoId",A.CUSTOMER_NO "customerNo",A.CHN_NAME "chnName",
		               A.LAST_NAME "lastName",A.FIRST_NAME "firstName",A.ID_TYPE "idType",
		               FUNC_GET_CODE_NAME('idType',A.ID_TYPE) "idTypeName",A.ID_NO "idNo",A.SEX "sex",
		               FUNC_GET_CODE_NAME('sex',A.SEX) "sexName",TO_CHAR(A.BIRTHDAY,'%Y-%m-%d') "birthday",
		               A.CUST_LEVEL "custLevel",FUNC_GET_CODE_NAME('custLevel',A.CUST_LEVEL) "custLevelName",
		               TO_CHAR(A.PRE_CUST_CONVERT_CUST_TIME,'%Y-%m-%d %H:%i:%S') "preCustConvertCustTime",
		               A.CUST_OBTAIN_WAY "custObtainWay",
		               FUNC_GET_CODE_NAME('custObtainWay',A.CUST_OBTAIN_WAY)"custObtainWayName",
		               TO_CHAR(A.CREATE_DATE,'%Y-%m-%d %H:%i:%S') "inputTime",
		               C.COM_ID "comId",C.COM_NAME "comName",B.AGENT_ID "agentId",B.AGENT_NAME "agentName",
		               (SELECT TO_CHAR(MAX(D.CUST_VISIT_TIME),'%Y-%m-%d %H:%i:%S') FROM T_CUST_VISIT_INFO D 
		                       WHERE D.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND D.RC_STATE = 'E') "lastVisitTime",
		               (SELECT COUNT(1) FROM T_CUST_VISIT_INFO D 
		                       WHERE D.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND D.RC_STATE = 'E') "visitTimes",
		               (SELECT COUNT(1) FROM T_TRADE_INFO D,T_TRADE_CUST_INFO E 
		                                  WHERE D.TRADE_INFO_ID = E.TRADE_INFO_ID 
		                                  AND E.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
		                                  AND D.TRADE_STAUS IN('11','10')
		                                  AND D.RC_STATE = 'E' AND E.RC_STATE = 'E')"signTimes"
		        FROM T_CUST_BASE_INFO A,T_AGENT B,T_DEF_COM C
		        WHERE 1=1
		        AND A.AGENT_ID = B.AGENT_ID(+)
		        AND B.COM_ID = C.COM_ID(+)
		        AND A.RC_STATE = 'E'
		        AND B.RC_STATE(+) = 'E'
		        AND C.RC_STATE(+) = 'E' -->
		        SELECT 
					    A.CUST_BASE_INFO_ID "custBaseInfoId",
					    A.CUSTOMER_NO         "customerNo",
					    A.CHN_NAME          		"chnName",
					    A.LAST_NAME         		"lastName",
					    A.FIRST_NAME        		"firstName",
					    A.ID_TYPE           			"idType",
					    FUNC_GET_CODE_NAME('idType',A.ID_TYPE) "idTypeName",
					    A.ID_NO "idNo",
					    A.SEX   "sex",
					    FUNC_GET_CODE_NAME('sex',A.SEX) "sexName",
					    date_format(A.BIRTHDAY,'%Y-%m-%d') "birthday",
					    A.CUST_LEVEL        "custLevel",
					    FUNC_GET_CODE_NAME('custLevel',A.CUST_LEVEL)       "custLevelName",
					    FUNC_GET_CODE_NAME('custQuality', Z.CUST_QUALITY) "custQuality",
					    date_format(A.PRE_CUST_CONVERT_CUST_TIME,'%Y-%m-%d %H:%i:%S') "preCustConvertCustTime",
					    A.CUST_OBTAIN_WAY   "custObtainWay",
					    FUNC_GET_CODE_NAME('custObtainWay',A.CUST_OBTAIN_WAY)"custObtainWayName",
					    date_format(A.CREATE_DATE,'%Y-%m-%d %H:%i:%S') "inputTime",
					    C.COM_ID "comId",
					    C.COM_NAME "comName",
					    B.AGENT_ID "agentId",
					    B.AGENT_NAME "agentName",
					    (SELECT date_format(MAX(D.CUST_VISIT_TIME),'%Y-%m-%d %H:%i:%S') FROM T_CUST_VISIT_INFO D 
					     WHERE D.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND D.RC_STATE = 'E') "lastVisitTime",
					    (SELECT COUNT(1) FROM T_CUST_VISIT_INFO D 
					     WHERE D.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND D.RC_STATE = 'E') "visitTimes",
					    (SELECT COUNT(1) FROM T_TRADE_INFO D,T_TRADE_CUST_INFO E 
					     WHERE D.TRADE_INFO_ID = E.TRADE_INFO_ID 
					           AND E.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
					           AND D.TRADE_STAUS IN('11','10','11','12','13','14')
					           AND D.RC_STATE = 'E' AND E.RC_STATE = 'E')"signTimes",
					    FUNC_GET_CODE_NAME('customerType',Z.CUST_TYPE) "custType",
					    FUNC_GET_CODE_NAME('investCustomerType',A.INVEST_CUSTOMER_TYPE) "investCustomerType",
					    A.INVEST_CUSTOMER_TYPE "investCustomerTypeCode",
					    FUNC_GET_CODE_NAME('investAuditState',A.INVEST_AUDIT_STATE) "investAuditState",
					    A.INVEST_AUDIT_STATE "investAuditStateCode"
				FROM 
				      T_CUST_BASE_INFO A LEFT JOIN T_AGENT B ON(A.Agent_Id = B.Agent_Id and B.Rc_State = 'E')
				      LEFT JOIN T_DEF_COM C ON (B.Com_Id = C.Com_Id and C.Rc_State = 'E')
				      LEFT JOIN t_Cust_Oth_Info Z ON (A.Cust_Base_Info_Id = Z.Cust_Base_Info_Id and Z.Rc_State = 'E')
				WHERE 
				    A.RC_STATE = 'E'
				<include refid="queryCustomerListCondition"/>
				order by A.CUST_BASE_INFO_ID desc
 			LIMIT #{startIndex} , #{endIndex} 
    </select> 
 	
 	<select id="queryCustomerListCount" parameterType="java.util.Map" resultType="java.lang.Integer">
 	<!-- s -->
		SELECT COUNT(1)
		FROM 
				      T_CUST_BASE_INFO A LEFT JOIN T_AGENT B ON(A.Agent_Id = B.Agent_Id and B.Rc_State = 'E')
				      LEFT JOIN T_DEF_COM C ON (B.Com_Id = C.Com_Id and C.Rc_State = 'E')
				      LEFT JOIN t_Cust_Oth_Info Z ON (A.Cust_Base_Info_Id = Z.Cust_Base_Info_Id and Z.Rc_State = 'E')
		WHERE 
		    A.RC_STATE = 'E'
		<include refid="queryCustomerListCondition"/>
    </select> 
 	
 	
 	
 	<select id="queryCustContactInfoList" parameterType="java.util.Map" resultType="java.util.Map">
 	<!-- s -->
		SELECT A.CUST_BASE_INFO_ID "custBaseInfoId",A.CUST_CONTACT_INFO_ID "custContactInfoId",A.AGENT_ID "agentId",
       		(SELECT B.AGENT_NAME FROM T_AGENT B WHERE B.AGENT_ID = A.AGENT_ID AND B.RC_STATE = 'E')"agentName",
       		A.PHONE "phone",A.MOBILE "mobile",A.EMAIL "email",A.QQ "qq",A.WECHAT "wechat"
		FROM T_CUST_CONTACT_INFO A
		WHERE A.CUST_BASE_INFO_ID = #{custBaseInfoId}
			AND A.RC_STATE = 'E'
		<include refid="com.sinosoft.core.service.mapper.CommonServiceMapper.queryPermissionControl"/>
			ORDER BY A.CUST_CONTACT_INFO_ID
    </select> 
 	
 	<select id="queryCustTradeCount" parameterType="java.util.Map" resultType="java.lang.Integer">
 	<!-- s -->
	 	SELECT COUNT(1) FROM T_TRADE_INFO A,T_TRADE_CUST_INFO B
			WHERE A.TRADE_INFO_ID = B.TRADE_INFO_ID
			AND B.CUST_BASE_INFO_ID = #{custBaseInfoId}
			AND A.TRADE_STAUS IN('01','02','03')
			AND A.RC_STATE = 'E'
			AND B.RC_STATE = 'E'
 	</select>
 	
 	<select id="getCustByAgentInfo" parameterType="java.util.Map" resultType="java.lang.Integer">
 	<!-- s -->
	 	SELECT COUNT(1)
			FROM T_CUST_BASE_INFO A,T_CUST_CONTACT_INFO B
			WHERE A.CUST_BASE_INFO_ID = B.CUST_BASE_INFO_ID
			AND B.AGENT_ID = #{agentId}
			AND A.CUST_BASE_INFO_ID = #{custBaseInfoId}
			AND A.RC_STATE = 'E'
			AND B.RC_STATE = 'E'
 	</select>
 	<select id="getCustDetailInfoList" parameterType="java.util.Map" resultType="java.util.LinkedHashMap">
 	<!-- s -->
	 	select A.CUSTOMER_NO "customerNo",A.CHN_NAME "chnName",
	       FUNC_GET_CODE_NAME('sex',IF(A.SEX IS NULL,'',A.SEX))"sex",
	       date_format(A.BIRTHDAY,'%Y-%m-%d') "birthday",A.ID_TYPE "idType",
	       A.ID_NO"idNo",B.MOBILE "mobile",B.EMAIL "email",B.QQ "qq",
	       C.MARRIAGE "marriage",C.DEGREE "degree",C.COMPANY_NAME "companyName",
	       C.OCCUPATION_CODE "occupation",C.POSITION "position",
	       C.ANNUAL_INCOME "annualIncome",C.WORK_TYPE "workType",
	       D.AGENT_ID "agentId"
		from T_CUST_BASE_INFO A,T_CUST_CONTACT_INFO B,T_CUST_OTH_INFO C,T_CUST_ADDRESS_INFO D
		where A.CUSTOMER_NO = #{customerNoId}
		  AND A.CUST_BASE_INFO_ID = B.CUST_BASE_INFO_ID
		  AND A.CUST_BASE_INFO_ID = C.CUST_BASE_INFO_ID
		  AND A.CUST_BASE_INFO_ID = D.CUST_BASE_INFO_ID
		  AND A.RC_STATE = 'E'
		  AND B.RC_STATE = 'E'
		  AND C.RC_STATE = 'E'
		  AND D.RC_STATE = 'E'
     <!-- select A.CUSTOMER_NO "customerNo",
          DECODE(A.CHN_NAME,null,'',A.CHN_NAME)"chnName",
          FUNC_GET_CODE_NAME('sex',DECODE(A.SEX,null,'',A.SEX))"sex",
          DECODE(to_char(A.BIRTHDAY,'%Y-%m-%d'),null,'NULL',to_char(A.BIRTHDAY,'%Y-%m-%d'))"birThday",
          FUNC_GET_CODE_NAME('idType',DECODE(A.ID_TYPE,null,'',A.ID_TYPE))"idType",
          DECODE(A.ID_NO,null,'',A.ID_NO)"idNo",
          DECODE(B.MOBILE,null,'',B.MOBILE)"moBile", 
          DECODE(B.EMAIL,null,'',B.EMAIL) "eMail",
          DECODE(B.QQ,null,'""',B.QQ)"qq",
          FUNC_GET_CODE_NAME('marriage',DECODE(C.MARRIAGE,null,'',C.MARRIAGE))"marRiage",
          decode(C.DEGREE,null,'',C.DEGREE)"deGree",
          decode(C.COMPANY_NAME,null,'',C.COMPANY_NAME)"comPanyName",
          decode(C.OCCUPATION_CODE,null,'',C.OCCUPATION_CODE)"occuPation",
          decode(C.POSITION,null,'',C.POSITION)"posiTion",
          decode(C.ANNUAL_INCOME,null,'',C.ANNUAL_INCOME)"annualInCome",
          decode(C.WORK_TYPE,null,'',C.WORK_TYPE)"workType",
          D.AGENT_ID "agentId"
          from T_CUST_BASE_INFO A,T_CUST_CONTACT_INFO B,T_CUST_OTH_INFO C,T_CUST_ADDRESS_INFO D
          where A.CUSTOMER_NO =#{customerNoId}
           AND A.CUST_BASE_INFO_ID = B.CUST_BASE_INFO_ID
           AND A.CUST_BASE_INFO_ID = C.CUST_BASE_INFO_ID
           AND A.CUST_BASE_INFO_ID = D.CUST_BASE_INFO_ID
           AND A.RC_STATE = 'E'
		   AND B.RC_STATE = 'E'
           AND C.RC_STATE = 'E'
           AND D.RC_STATE = 'E' -->
 	</select>
 	<select id="getCustAddressInfoList" parameterType="java.util.Map" resultType="java.util.LinkedHashMap">
 	<!-- s -->
    select    
          FUNC_GET_PLACE_NAME('01',A.PROVINCE)"province",FUNC_GET_PLACE_NAME('02',A.City)"city",
          FUNC_GET_PLACE_NAME('03',A.Country)"country",A.Street "street",A.ADDRESS_TYPE "addressType"
          from T_CUST_ADDRESS_INFO A,T_CUST_BASE_INFO B 
          where A.CUST_BASE_INFO_ID = B.CUST_BASE_INFO_ID
          and b.CUSTOMER_NO =#{customerNoId}
          and a.rc_state = 'E'
          and b.rc_state = 'E'
          
        
 	</select>
 	<select id="getTradeInfoList" parameterType="java.util.Map" resultType="java.util.Map">
 	<!-- s -->
 	    select a.*
 	    from t_trade_info a,t_trade_cust_info b,t_cust_base_info c
		where a.trade_info_id = b.trade_info_id
		      and b.cust_base_info_id = c.cust_base_info_id
		      and a.trade_staus in ('10','11')
		      and c.customer_no = #{customerId}
		      and a.rc_state = 'E'
		      and b.rc_state = 'E'
		      and c.rc_state = 'E'
 	</select>
 	<select id="getNetValue"  resultType="java.util.Map">
 	<!-- s -->
 	   select a.NET_VALUE "netValue" from T_PD_WEALTH_NET_VALUE a,
		        (select max(public_date) public_date from T_PD_WEALTH_NET_VALUE order by public_date desc)b,
		        t_pd_product c,t_pd_wealth d
		        where a.public_date = b.public_date
		        and c.product_id = d.product_id
		        and d.pd_wealth_id = a.pd_wealth_id
		        and c.product_id = #{productId}
		        and a.rc_state = 'E'
		        and c.rc_state = 'E'
		        and d.rc_state = 'E' 
 	</select>
 	<select id="getWealthPdInfoList" parameterType="java.util.Map" resultType="java.util.Map">
 	<!-- s 数据没出来-->
		 	<!-- select d.TRADE_INFO_ID , a.chn_name "name",b.order_no "orderNo",e.product_name "productName",f.agency_name "mechanism",
		       d.subscriptionFee "totalAmount",to_char(b.trade_date,'%Y-%m-%d %H:%i:%S') "investmentDate",h.expected_fee_rate/100 "yield",to_char(g.found_date,'%Y-%m-%d %H:%i:%S') "establishDate"
		      from t_cust_base_info a,t_trade_info b,t_trade_cust_info c,t_trade_product_info_view d,t_pd_product e,
		       t_agency_com f,t_pd_wealth g,t_pd_income_dis_detail h 
		       where a.cust_base_info_id = c.cust_base_info_id
		       and b.trade_info_id = c.trade_info_id
		       and b.trade_info_id = d.trade_info_id
		       and d.product_id = e.product_id
		       and e.agency_com_id = f.agency_com_id
		       and e.product_id = g.product_id
		       and a.cust_base_info_id = h.cust_base_info_id
		       and a.customer_no = #{customerNo}
		       and a.rc_state = 'E'
		       and b.rc_state = 'E'
		       and c.rc_state = 'E'
		       and e.rc_state = 'E'
		       and f.rc_state = 'E'
		       and g.rc_state = 'E'
		       and h.rc_state = 'E' -->
      select  a.chn_name "custName",b.trade_info_id "tradeInfoId",e.product_name "productName",
           if(f.agency_short_name is null,f.agency_name,f.agency_short_name)"mechanism",
           d.subscriptionFee "totalAmount",date_format(b.trade_date,'%Y-%m-%d %H:%i:%S') "investmentDate",
           date_format(g.found_date,'%Y-%m-%d %H:%i:%S') "establishDate",
           (case when d.closedPeriods is not null then
                 (select (ifnull(i.expected_fee_rate,0)+ifnull(i.add_expected_fee_rate,0))/100 
                    from t_pd_wealth h,t_pd_wealth_fee_rate i where h.pd_wealth_id = i.pd_wealth_id
                    and h.product_id =  e.product_id
                    and i.fee_type = '01'
                    and i.close_dperiod = d.closedPeriods
                    and d.subscriptionFee >= ifnull(i.subscription_fee_lower,0)
                    and ifnull(i.subscription_fee_upper,9999999999)> d.subscriptionFee
                    and h.rc_state = 'E'
                    and i.rc_state = 'E')
           else
             (select  (ifnull(i.expected_fee_rate,0)+ifnull(i.add_expected_fee_rate,0))/100 
                    from t_pd_wealth h,t_pd_wealth_fee_rate i where h.pd_wealth_id = i.pd_wealth_id
                    and h.product_id =  e.product_id
                    and i.fee_type = '01'
                    and d.subscriptionFee >= ifnull(i.subscription_fee_lower,0)
                    and ifnull(i.subscription_fee_upper,9999999999)> d.subscriptionFee
                    and h.rc_state = 'E'
                    and i.rc_state = 'E') 
              end
           ) "yield"
from t_cust_base_info a,t_trade_info b,t_trade_cust_info c,t_trade_product_info_view d,
     t_pd_product e, t_agency_com f,t_pd_wealth g
where a.cust_base_info_id = c.cust_base_info_id
     and b.trade_info_id = c.trade_info_id
     and b.trade_info_id = d.trade_info_id
     and d.product_id = e.product_id
     and e.agency_com_id = f.agency_com_id
     and e.product_id = g.product_id
     and b.trade_staus in ('10','11')
     and a.customer_no = #{customerNo}
     and a.rc_state = 'E'
     and b.rc_state = 'E'
     and c.rc_state = 'E'
     and e.rc_state = 'E'
     and f.rc_state = 'E'
     and g.rc_state = 'E'
     order by investmentDate desc
 	</select>
 	
 	
 	<select id="getTradeRedemptionList" parameterType="java.util.Map" resultType="java.util.Map">
 	<!-- s -->
 		SELECT B.REDEMPTION_TRADE_INFO_ID "redemptionTradeInfoId",B.REDEMPTION_INFO_ID "redemptionInfoId",
		       B.TRADE_INFO_ID "tradeInfoId",B.REDEMPTION_SHARE "redemptionShare",
		       B.ACTUAL_REDEMPTION_SHARE "actualRedemptionShare",B.ACTUAL_REDEMPTION_MONEY "actualRedemptionMoney"
		FROM T_REDEMPTION_INFO A,T_REDEMPTION_TRADE_INFO B
		WHERE A.REDEMPTION_INFO_ID = B.REDEMPTION_INFO_ID
		AND A.REDEMPTION_STATUS = '04'
		AND B.ACTUAL_REDEMPTION_SHARE>0
		AND B.TRADE_INFO_ID = #{tradeInfoId}
		AND A.RC_STATE = 'E'
		AND B.RC_STATE = 'E'
 	</select>

 	<!-- 微信接口开发开始 -->
    <!-- 获取客户风险等级类型和风险等级分数  -->
    <select id="getCustomerRiskLevelAndRiskLevelScore" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			b.SCORE "riskLevelScore",
			FUNC_GET_CODE_NAME("custRiskLevel",b.CUST_RISK_LEVEL) "riskLevel"
		FROM
			t_cust_base_info a,
			t_cust_questionnaire_info b
		WHERE
			a.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
			 AND a.CUSTOMER_NO = #{customerNo}
			AND a.RC_STATE="E"
			AND b.RC_STATE= "E" 
    </select>
    
     <!-- 投资分析客户资产配置接口 -->
      <select id="getCustomerAssetAllocation01" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
	a.PRODUCT_SUB_TYPE "productSubType",
	SUM(b.TRADE_TOTAL_ASSETS) 'amount',
	b.CURRENCY "currency"
	FROM
	t_pd_product a,
	t_trade_info b,
	t_trade_product_info_view v,
	t_cust_base_info c,
	t_trade_cust_info d
	WHERE
	a.PRODUCT_ID=v.PRODUCT_ID
	AND b.TRADE_INFO_ID=v.TRADE_INFO_ID
	AND c.CUST_BASE_INFO_ID=d.CUST_BASE_INFO_ID
	AND b.TRADE_INFO_ID=d.TRADE_INFO_ID
	AND a.RC_STATE = "E"
	AND b.RC_STATE = "E"
	AND c.RC_STATE = "E"
	AND d.RC_STATE = "E"
	and a.STATUS = "2"
	AND CASE
	WHEN EXISTS (
	SELECT
	'X'
	FROM
	t_trade_funds_share_change x,
	t_cust_base_info y,
	t_trade_cust_info z,
	t_trade_info m
	WHERE
	y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
	AND z.TRADE_INFO_ID = m.TRADE_INFO_ID
	AND
	x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
	AND y.RC_STATE = 'E'
	AND
	z.RC_STATE = 'E'
	AND m.RC_STATE = 'E'
	AND y.CUSTOMER_NO = #{customerNo})
	THEN
	(
	b.trade_staus IN (
	'06',
	'10',
	'11',
	'12',
	'13',
	'14'
	)
	)
	ELSE
	(
	b.trade_staus IN ('06', '10', '13')
	)
	END
	AND c.CUSTOMER_NO=#{customerNo}
	AND a.PRODUCT_CODE not like "%H"
	AND a.PRODUCT_SUB_TYPE=01
    </select>
    <select id="getCustomerAssetAllocation02" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
	a.PRODUCT_SUB_TYPE "productSubType",
	SUM( v.subscriptionFee)-(
	SELECT
	IFNULL(SUM(
	IFNULL(
	f.CONFIRM_DISTRIBUTE_PRINCIPAL,
	0
	) + IFNULL(
	f.CONFIRM_DISTRIBUTE_INTEREST,
	0
	)
	),0) 'distributeAmount'
	FROM
	t_trade_info a,
	t_trade_cust_info b,
	t_cust_base_info c,
	t_trade_product_info_view d,
	t_pd_product e,
	t_pd_income_dis_detail f,
	t_pd_income_dis g,
	t_pd_wealth h
	WHERE
	1 = 1
	AND a.TRADE_INFO_ID = b.TRADE_INFO_ID
	AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
	AND d.TRADE_INFO_ID = b.TRADE_INFO_ID
	AND d.PRODUCT_ID = e.PRODUCT_ID
	AND e.PRODUCT_ID = g.PD_PRODUCT_ID
	AND f.PD_INCOME_DISTRIBUTE_ID = g.PD_INCOME_DISTRIBUTE_ID
	AND f.CUST_BASE_INFO_ID=c.CUST_BASE_INFO_ID
	AND h.PRODUCT_ID=e.PRODUCT_ID
	AND e.SALES_STATUS IN (0, 1)
	AND e.PRODUCT_CODE not like "%H"
	AND c.CUSTOMER_NO = #{customerNo}
	AND (
	FUNC_FOUNDATE_CLOSED_ENDDATE (
	h.FOUND_DATE,
	(
	CASE
	WHEN
	(SELECT
	x.CLOSE_DPERIOD
	FROM
	t_pd_wealth_fee_rate x
	WHERE
	h.PD_WEALTH_ID = x.PD_WEALTH_ID
	AND d.beneficialType = x.BENEFICIAL_TYPE
	AND x.rc_state = "E"
	) IS NULL THEN
	h.CLOSE_DPERIODS
	ELSE
	(SELECT
	x.CLOSE_DPERIOD
	FROM
	t_pd_wealth_fee_rate x
	WHERE
	h.PD_WEALTH_ID = x.PD_WEALTH_ID
	AND d.beneficialType = x.BENEFICIAL_TYPE
	AND x.rc_state = "E"
	)
	END
	),
	h.CLOSE_DPERIOD_UNIT
	)
	) > CURDATE()
	AND a.RC_STATE = 'E'
	AND b.RC_STATE = 'E'
	AND c.RC_STATE = 'E'
	AND e.RC_STATE = 'E'
	AND f.RC_STATE = 'E'
	AND g.RC_STATE = 'E'
	AND h.RC_STATE = 'E'
	AND a.TRADE_STAUS in ("10","11","12","13","14")) 'amount',
	b.CURRENCY "currency"
	FROM
	t_pd_product a,
	t_trade_info b,
	t_trade_product_info_view v,
	t_cust_base_info c,
	t_trade_cust_info d,
	t_pd_wealth f
	WHERE
	a.PRODUCT_ID=v.PRODUCT_ID
	AND b.TRADE_INFO_ID=v.TRADE_INFO_ID
	AND c.CUST_BASE_INFO_ID=d.CUST_BASE_INFO_ID
	AND b.TRADE_INFO_ID=d.TRADE_INFO_ID
	AND a.PRODUCT_ID=f.PRODUCT_ID
	AND a.RC_STATE = "E"
	AND b.RC_STATE = "E"
	AND c.RC_STATE = "E"
	AND d.RC_STATE = "E"
	AND f.RC_STATE="E"
	and a.STATUS = "2"
	AND case when
	EXISTS(SELECT 'X'
	from t_trade_funds_share_change x,
	t_cust_base_info y,
	t_trade_cust_info z,
	t_trade_info m
	WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
	and z.TRADE_INFO_ID = m.TRADE_INFO_ID
	and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
	and y.RC_STATE = 'E'
	and z.RC_STATE = 'E'
	and m.RC_STATE = 'E'
	and y.CUSTOMER_NO = #{customerNo})
	then (b.trade_staus IN ('06', '10', '11','12','13','14'))
	ELSE (b.trade_staus IN ('06', '10','13')) END
	AND c.CUSTOMER_NO=#{customerNo}
	AND a.PRODUCT_CODE not like "%H"
	AND a.PRODUCT_SUB_TYPE=02
	AND (
	FUNC_FOUNDATE_CLOSED_ENDDATE (
	f.FOUND_DATE,
	(
	CASE
	WHEN
	(SELECT
	x.CLOSE_DPERIOD
	FROM
	t_pd_wealth_fee_rate x
	WHERE
	f.PD_WEALTH_ID = x.PD_WEALTH_ID
	AND v.beneficialType = x.BENEFICIAL_TYPE
	AND x.rc_state = "E"
	) IS NULL THEN
	f.CLOSE_DPERIODS
	ELSE
	(SELECT
	x.CLOSE_DPERIOD
	FROM
	t_pd_wealth_fee_rate x
	WHERE
	f.PD_WEALTH_ID = x.PD_WEALTH_ID
	AND v.beneficialType = x.BENEFICIAL_TYPE
	AND x.rc_state = "E"
	)
	END
	),
	f.CLOSE_DPERIOD_UNIT)
	) > CURDATE()
    </select>
     <select id="getCustomerAssetAllocation03" parameterType="java.util.Map" resultType="java.util.Map">
					SELECT 
						   a.PRODUCT_SUB_TYPE "productSubType",
				           SUM( v.subscriptionFee)-IFNULL((
						SELECT
							SUM(
								a.ACTU_REDEMPTION_TOTAL_MONEY
							)
						FROM
							t_redemption_info a,
							t_trade_info b,
							t_redemption_trade_info c,
                            t_pd_product d,
                            t_trade_product_info_view v
						WHERE
							1 = 1
						AND a.CUSTOMER_NO = #{customerNo}
						AND a.REDEMPTION_INFO_ID = c.REDEMPTION_INFO_ID
				  		AND b.TRADE_INFO_ID = c.TRADE_INFO_ID
				        AND b.CURRENCY="CNY"
                        AND b.TRADE_INFO_ID=v.TRADE_INFO_ID
                        AND d.PRODUCT_ID=v.PRODUCT_ID
			          	AND d.PRODUCT_CODE not like "%H"
						AND a.RC_STATE = "E"
						AND b.RC_STATE = "E"
						AND c.RC_STATE = "E"
					) ,0)'amount',
				           b.CURRENCY "currency"
					FROM
							t_pd_product a,
				      t_trade_info b,
				      t_trade_product_info_view v,
				      t_cust_base_info c,
				      t_trade_cust_info d
						WHERE
				    a.PRODUCT_ID=v.PRODUCT_ID
				AND b.TRADE_INFO_ID=v.TRADE_INFO_ID
				AND c.CUST_BASE_INFO_ID=d.CUST_BASE_INFO_ID
				AND b.TRADE_INFO_ID=d.TRADE_INFO_ID
				AND	a.RC_STATE = "E"
				AND	b.RC_STATE = "E"
				AND	c.RC_STATE = "E"
				AND	d.RC_STATE = "E"
				and a.STATUS = "2"
				AND b.TRADE_STAUS="10"
				AND c.CUSTOMER_NO=#{customerNo}
				AND a.PRODUCT_CODE not like "%H"
		        AND a.PRODUCT_SUB_TYPE=03
    </select>
    <select id="getCustomerAssetAllocation04CNY" parameterType="java.util.Map" resultType="java.util.Map">
					SELECT
					'04' AS 'productSubType',
					SUM(v.subscriptionFee) - (
						SELECT
							IFNULL(SUM(
									a.ACTU_REDEMPTION_TOTAL_MONEY
						           ),0)
						FROM
							t_redemption_info a,
							t_trade_info b,
							t_redemption_trade_info c
						WHERE
							1 = 1
						AND a.CUSTOMER_NO = #{customerNo}
						AND a.REDEMPTION_INFO_ID = c.REDEMPTION_INFO_ID
						AND b.TRADE_INFO_ID = c.TRADE_INFO_ID
				AND b.CURRENCY="CNY"
						AND a.RC_STATE = "E"
						AND b.RC_STATE = "E"
						AND c.RC_STATE = "E"
					) 'amount',
					b.CURRENCY "currency"
				FROM
					t_pd_product a,
					t_trade_info b,
					t_trade_product_info_view v,
					t_cust_base_info c,
					t_trade_cust_info d
				WHERE
					a.PRODUCT_ID = v.PRODUCT_ID
				AND b.TRADE_INFO_ID = v.TRADE_INFO_ID
				AND c.CUST_BASE_INFO_ID = d.CUST_BASE_INFO_ID
				AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND a.RC_STATE = "E"
				AND b.RC_STATE = "E"
				AND c.RC_STATE = "E"
				AND d.RC_STATE = "E"
				AND a. STATUS = "2"
				AND b.TRADE_STAUS = "10"
				AND c.CUSTOMER_NO = #{customerNo}
				AND a.PRODUCT_CODE LIKE "%H"
				AND b.CURRENCY="CNY"
    </select>
     <select id="getCustomerAssetAllocation04USD" parameterType="java.util.Map" resultType="java.util.Map">
					SELECT
					'04' AS 'productSubType',
					SUM(v.subscriptionFee) - (
						SELECT
							SUM(
								a.ACTU_REDEMPTION_TOTAL_MONEY
							)
						FROM
							t_redemption_info a,
							t_trade_info b,
							t_redemption_trade_info c
						WHERE
							1 = 1
						AND a.CUSTOMER_NO = #{customerNo}
						AND a.REDEMPTION_INFO_ID = c.REDEMPTION_INFO_ID
						AND b.TRADE_INFO_ID = c.TRADE_INFO_ID
				        AND b.CURRENCY = "USD"
						AND a.RC_STATE = "E"
						AND b.RC_STATE = "E"
						AND c.RC_STATE = "E"
					) 'amount',
					b.CURRENCY "currency"
				FROM
					t_pd_product a,
					t_trade_info b,
					t_trade_product_info_view v,
					t_cust_base_info c,
					t_trade_cust_info d
				WHERE
					a.PRODUCT_ID = v.PRODUCT_ID
				AND b.TRADE_INFO_ID = v.TRADE_INFO_ID
				AND c.CUST_BASE_INFO_ID = d.CUST_BASE_INFO_ID
				AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND a.RC_STATE = "E"
				AND b.RC_STATE = "E"
				AND c.RC_STATE = "E"
				AND d.RC_STATE = "E"
				AND a. STATUS = "2"
				AND b.TRADE_STAUS = "10"
				AND c.CUSTOMER_NO = #{customerNo}
				AND a.PRODUCT_CODE LIKE "%H"
				AND b.CURRENCY="USD"
    </select>
    <!-- 投资分析历史收益排名接口 -->
     <select id="getHistoryIncomeRanking" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.PRODUCT_NAME "productName", 
			CONCAT(ROUND(c.EXPECTED_FEE_RATE,2),'',"%") "earnRate"
		FROM
			t_pd_product a,
			t_pd_wealth b,
			t_pd_wealth_fee_rate c,
			t_cust_base_info d,
			t_trade_cust_info e,
			t_trade_info f,
			t_trade_product_info_view v
		WHERE
			1=1	
			and a.PRODUCT_ID = b.PRODUCT_ID
			AND b.PD_WEALTH_ID = c.PD_WEALTH_ID
			AND d.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
			AND e.TRADE_INFO_ID = f.TRADE_INFO_ID
			AND v.PRODUCT_ID = a.PRODUCT_ID
			AND v.TRADE_INFO_ID = e.TRADE_INFO_ID
			AND a.RC_STATE = "E"
			AND b.RC_STATE = "E"
			AND c.RC_STATE = "E"
			AND d.RC_STATE = "E"
			AND e.RC_STATE = "E"
			AND f.TRADE_STAUS in ("10","11","12","13","14")
			AND f.RC_STATE = "E"
			AND a.PRODUCT_TYPE = "1"
			AND a.PRODUCT_SUB_TYPE IN ("01", "02")
			AND d.CUSTOMER_NO = #{customerNo}
			AND
								(		
						CASE
						WHEN v.beneficialType IS NOT NULL
						THEN v.beneficialType = c.BENEFICIAL_TYPE
						ELSE 1=1
						END
						)
			AND 
				CURDATE() >
			(CASE
WHEN 
(
SELECT
y.TRANSFER_ALL
FROM t_trade_funds_share_change y
WHERE 
 e.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
AND y.RC_STATE = 'E'
) = '02'
THEN
(
SELECT
y.VALUE_DATE
FROM t_trade_funds_share_change y
WHERE 
 e.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
AND y.RC_STATE = 'E'
)
ELSE

					 FUNC_FOUNDATE_CLOSED_ENDDATE (
						b.FOUND_DATE,
						(
							CASE
							WHEN c.CLOSE_DPERIOD IS NULL THEN
								b.CLOSE_DPERIODS
							ELSE
								c.CLOSE_DPERIOD
							END
						),
						b.CLOSE_DPERIOD_UNIT
					)
END
)
			ORDER BY
				c.EXPECTED_FEE_RATE DESC
			LIMIT 0,5
    </select>
    
     <!-- 投资分析固收类产品回款预期接口 -->
    <select id="getSolidProductReturnedMoney" parameterType="java.util.Map" resultType="java.util.Map">
						SELECT
					DATE_FORMAT(j.DISTRIBUTE_DATE,"%Y-%m") "returnTime" ,
					ROUND(
					SUM(
							c.TRADE_TOTAL_ASSETS * (
								h.EXPECTED_FEE_RATE / 100 / 365
							) * (
								DATEDIFF(j.DISTRIBUTE_END_DATE,j.DISTRIBUTE_START_DATE)) + 
							 (j.PRINCIPAL_DISTRIBUTE_RATE / 100 * c.TRADE_TOTAL_ASSETS)
							)
						,2) "returnMoney"
				FROM
					t_pd_product a,
					t_pd_wealth b,
					t_trade_info c,
					t_trade_product_info_view d,
					t_trade_cust_info e,
					t_cust_base_info f,
				  t_pd_wealth_income_dis J,
				  t_pd_wealth_fee_rate H
				WHERE
					1 = 1
				AND h.RC_STATE = "E"
				AND  h.PD_WEALTH_ID = b.PD_WEALTH_ID
				AND j.PD_WEALTH_ID = b.PD_WEALTH_ID
				AND a.PRODUCT_ID = b.PRODUCT_ID
				AND c.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND f.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
				AND a.PRODUCT_ID = d.PRODUCT_ID
				AND c.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND a.RC_STATE = "E"
				AND b.RC_STATE = "E"
				AND c.RC_STATE = "E"
				AND c.TRADE_STAUS in ("10","11","12","13","14")
				AND e.RC_STATE = "E"
				AND f.RC_STATE = "E"
				AND f.CUSTOMER_NO = #{customerNo}
				AND a.PRODUCT_TYPE = "1"
				AND a.PRODUCT_SUB_TYPE = '02'
				AND c.TRADE_TOTAL_ASSETS > 0
				AND j.DISTRIBUTE_DATE > CURDATE() 
				AND
								(		
						CASE
						WHEN d.beneficialType IS NOT NULL
						THEN d.beneficialType = H.BENEFICIAL_TYPE
						ELSE 1=1
						END
						)
				GROUP BY  returnTime
				ORDER BY  returnTime
				LIMIT 0,3
    </select>

    <!-- 根据客户信息查询客户号 -->
    <select id="wechatLogin" parameterType="java.util.Map" resultType="java.util.Map">
			  SELECT 
					a.CUSTOMER_NO 'customerNo',
					1 "loginType"
				FROM
					t_cust_base_info a,
					t_cust_contact_info b
				WHERE
				    1=1
				AND	a.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
				AND a.CHN_NAME=#{customerName}
				AND a.ID_NO=#{idNo}
				AND b.MOBILE=#{mobile}
				AND a.RC_STATE='e'
				AND b.RC_STATE='e'

    </select>
    <!-- 根据客户号和产品号查特定股权产品信息 -->
    <select id="getStockDetail" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
	f.PRODUCT_NAME 'productName',
	CONCAT(
		(
		SELECT
			a.BANK_NAME
		FROM
			t_def_bank a
		WHERE
			a.BANK_ID = b.BANK_CODE
		),
		'\r\n',
		b.BANK_ACC_NO
	) 'custAccount',
	FORMAT(c.TRADE_TOTAL_ASSETS, 2) 'tradeTotalAssets',
	DATE_FORMAT(
		i.FOUND_DATE,
		'%Y年%m月%d日'
	) 'foundDate',
	FORMAT(c.TRADE_TOTAL_ASSETS, 2) 'remainTotalShare',
    FORMAT(c.TRADE_TOTAL_ASSETS, 2) 'remainTotalMoney'
FROM
	t_cust_base_info a,
	t_cust_acc_info b,
	t_trade_info c,
	t_trade_cust_acc_rela d,
	t_trade_cust_info e,
	t_pd_product f,
	t_trade_product_info_view g,
	t_pd_wealth i
WHERE
	1 = 1
AND a.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
AND b.CUST_ACC_INFO_ID = d.CUST_ACC_INFO_ID
AND d.TRADE_CUST_INFO_ID = e.TRADE_CUST_INFO_ID
AND a.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
AND c.TRADE_INFO_ID = e.TRADE_INFO_ID
AND f.PRODUCT_ID = g.PRODUCT_ID
AND c.TRADE_INFO_ID = g.TRADE_INFO_ID
AND f.PRODUCT_ID = i.PRODUCT_ID
AND d.TRADE_ACC_FLAG = '1'
AND c.TRADE_STAUS IN ("10", "11", "12", "13", "14")
AND a.CUSTOMER_NO =#{customerNo}
AND f.PRODUCT_ID =#{productId}
AND a.RC_STATE = 'e'
AND b.RC_STATE = 'e'
AND c.RC_STATE = 'e'
AND d.RC_STATE = 'e'
AND e.RC_STATE = 'e'
AND f.RC_STATE = 'e'
AND i.RC_STATE = 'e'
    </select>
    <!-- 根据客户号查询客户固定资产 -->
    <select id="getFixedAsset" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
	FORMAT(IFNULL((SUM(a.TRADE_TOTAL_ASSETS)),0),2) 'investTotal'
	FROM
	t_trade_info a,
	t_cust_base_info b,
	t_trade_cust_info c,
	t_pd_product d,
	t_trade_product_info_view e,
	t_pd_wealth f
	WHERE
	1 = 1
	AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
	AND a.TRADE_INFO_ID = c.TRADE_INFO_ID
	AND a.TRADE_INFO_ID = e.TRADE_INFO_ID
	AND d.PRODUCT_ID = e.PRODUCT_ID
	AND d.PRODUCT_ID = f.PRODUCT_ID
	AND case when
	EXISTS(SELECT 'X'
	from t_trade_funds_share_change x,
	t_cust_base_info y,
	t_trade_cust_info z,
	t_trade_info m
	WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
	and z.TRADE_INFO_ID = m.TRADE_INFO_ID
	and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
	and y.RC_STATE = 'E'
	and z.RC_STATE = 'E'
	and m.RC_STATE = 'E'
	and y.CUSTOMER_NO = #{customerNo})
	then (a.trade_staus IN ('06', '10', '11','12','13','14'))
	ELSE (a.trade_staus IN ('06', '10','13')) END
	AND b.CUSTOMER_NO = #{customerNo}
	AND d.PRODUCT_TYPE = 1
	AND d.PRODUCT_SUB_TYPE = 02
	AND d.SALES_STATUS = 0
	AND a.CURRENCY = 'CNY'
	AND (
		CASE WHEN
		(SELECT
		x.TRANSFER_ALL 
		FROM t_trade_funds_share_change x
		WHERE x.ORIGIN_TRADE_INFO_ID = a.TRADE_INFO_ID
		AND x.RC_STATE = 'E') = '02'
		THEN
		(SELECT
		x.VALUE_DATE
		FROM t_trade_funds_share_change x
		WHERE x.ORIGIN_TRADE_INFO_ID = a.TRADE_INFO_ID
		AND x.RC_STATE = 'E')
		ELSE
		FUNC_FOUNDATE_CLOSED_ENDDATE (
			f.FOUND_DATE,
			(
			CASE
			WHEN
			(SELECT
			x.CLOSE_DPERIOD
			FROM
			t_pd_wealth_fee_rate x
			WHERE
			f.PD_WEALTH_ID = x.PD_WEALTH_ID
			AND e.beneficialType = x.BENEFICIAL_TYPE
			AND x.rc_state = "E"
			) IS NULL THEN
			f.CLOSE_DPERIODS
			ELSE
			(SELECT
			x.CLOSE_DPERIOD
			FROM
			t_pd_wealth_fee_rate x
			WHERE
			f.PD_WEALTH_ID = x.PD_WEALTH_ID
			AND e.beneficialType = x.BENEFICIAL_TYPE
			AND x.rc_state = "E"
			)
			END
			),
			f.CLOSE_DPERIOD_UNIT
			)
		END
		)> CURDATE()
	AND a.RC_STATE = 'e'
	AND b.RC_STATE = 'e'
	AND c.RC_STATE = 'e'
	AND d.RC_STATE = 'e'
	AND f.RC_STATE = 'e'
    </select>
    <!-- 根据客户号查询客户的今日资产 -->
    <select id="getTodayAsset" parameterType="java.util.Map" resultType="java.util.Map">
				SELECT
					FORMAT(IFNULL((SUM(
						c.TRADE_TOTAL_ASSETS + (
							c.TRADE_TOTAL_ASSETS * g.EXPECTED_FEE_RATE / 100 / 365
						) * (
							CASE WHEN
							(SELECT
							x.VALUE_DATE
							FROM
							t_trade_funds_share_change x
							WHERE x.ORIGIN_TRADE_INFO_ID = c.TRADE_INFO_ID
							AND x.RC_STATE = 'E'
							) IS NOT NULL
							THEN
							DATEDIFF(
							(SELECT
							x.VALUE_DATE
							FROM
							t_trade_funds_share_change x
							WHERE x.ORIGIN_TRADE_INFO_ID = c.TRADE_INFO_ID
							AND x.RC_STATE = 'E'
							),f.FOUND_DATE)
							WHEN 
							(
							SELECT
							x.VALUE_DATE
							FROM
							t_trade_funds_share_change x
							WHERE x.TRADE_INFO_ID = c.TRADE_INFO_ID
							AND x.RC_STATE = 'E'
							) IS NOT NULL
							THEN 
							DATEDIFF(CURDATE(),(
							SELECT
							x.VALUE_DATE
							FROM
							t_trade_funds_share_change x
							WHERE x.TRADE_INFO_ID = c.TRADE_INFO_ID
							AND x.RC_STATE = 'E'
							))
							ELSE
								DATEDIFF(CURDATE(), f.FOUND_DATE)	
							END
							)
					) - (
						SELECT
							IFNULL(SUM(
								IFNULL(
									f.DISTRIBUTE_PRINCIPAL,
									0
								) + IFNULL(
									f.DISTRIBUTE_INTEREST,
									0
								)
							),0) 'distributeAmount'
						FROM
							t_pd_income_dis_detail f,
							t_pd_income_dis g
						WHERE
							1 = 1
						AND f.TRADE_INFO_ID = c.TRADE_INFO_ID
						AND f.PD_INCOME_DISTRIBUTE_ID = g.PD_INCOME_DISTRIBUTE_ID
						AND f.CUST_BASE_INFO_ID=a.CUST_BASE_INFO_ID
						AND f.RC_STATE = 'E'
						AND g.RC_STATE = 'E'
					)),0),2) 'forecastAsset'
				FROM
					t_cust_base_info a,
					t_pd_product b,
					t_trade_info c,
					t_trade_cust_info d,
					t_trade_product_info_view e,
					t_pd_wealth f,
					t_pd_wealth_fee_rate g
				WHERE
					a.CUST_BASE_INFO_ID = d.CUST_BASE_INFO_ID
				AND b.PRODUCT_ID = e.PRODUCT_ID
				AND c.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND c.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND b.PRODUCT_ID = f.PRODUCT_ID
				AND f.PD_WEALTH_ID = g.PD_WEALTH_ID
				AND b.PRODUCT_TYPE = 1
				AND b.PRODUCT_SUB_TYPE = 02
				AND	case when
					EXISTS(SELECT 'X'
					from t_trade_funds_share_change x,
					t_cust_base_info y,
					t_trade_cust_info z,
					t_trade_info m
					WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
					and z.TRADE_INFO_ID = m.TRADE_INFO_ID
					and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
					and y.RC_STATE = 'E'
					and z.RC_STATE = 'E'
					and m.RC_STATE = 'E'
					and y.CUSTOMER_NO = #{customerNo})
					then (c.trade_staus IN ('06', '10', '11','12','13','14'))
					ELSE (c.trade_staus IN ('06', '10','13')) END
				AND a.CUSTOMER_NO = #{customerNo}
				AND
							(		
					CASE
					WHEN e.beneficialType IS NOT NULL
					THEN e.beneficialType = g.BENEFICIAL_TYPE
					ELSE 1=1
					END
					)
				AND (
					CASE WHEN
					(SELECT
					x.TRANSFER_ALL 
					FROM t_trade_funds_share_change x
					WHERE x.ORIGIN_TRADE_INFO_ID = c.TRADE_INFO_ID
					AND x.RC_STATE = 'E') = '02'
					THEN
					(SELECT
					x.VALUE_DATE
					FROM t_trade_funds_share_change x
					WHERE x.ORIGIN_TRADE_INFO_ID = c.TRADE_INFO_ID
					AND x.RC_STATE = 'E')
					ELSE
					FUNC_FOUNDATE_CLOSED_ENDDATE (
										f.FOUND_DATE,
										(
											CASE
											WHEN g.CLOSE_DPERIOD IS NULL THEN
												f.CLOSE_DPERIODS
											ELSE
												g.CLOSE_DPERIOD
											END
										),
										f.CLOSE_DPERIOD_UNIT
									)
					END
				)> CURDATE()
				AND c.CURRENCY = 'CNY'
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND f.RC_STATE = 'e'
    </select>
     <!-- 根据客户号查询客户所持有的所有固定产品 -->
    <select id="getFixedProduct" parameterType="java.util.Map" resultType="java.util.Map">
				SELECT
					a.PRODUCT_ID 'productId',
				    a.PRODUCT_NAME 'productName',
				    CONCAT(ROUND(c.EXPECTED_FEE_RATE,2),'%') 'expectFeeRate'
				FROM
					t_pd_product a,
					t_pd_wealth b,
					t_pd_wealth_fee_rate c,
					t_cust_base_info d,
					t_trade_cust_info e,
					t_trade_product_info_view f,
					t_trade_info g
				WHERE
				    1 = 1
				AND	a.PRODUCT_ID = b.PRODUCT_ID
				AND b.PD_WEALTH_ID = c.PD_WEALTH_ID
				AND a.PRODUCT_ID = f.PRODUCT_ID
				AND d.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
				AND g.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND g.TRADE_INFO_ID = f.TRADE_INFO_ID
				AND d.CUSTOMER_NO = #{customerNo}
					AND
								(		
						CASE
						WHEN f.beneficialType IS NOT NULL
						THEN f.beneficialType = c.BENEFICIAL_TYPE
						ELSE 1=1
						END
						)
				AND (
					CASE WHEN
					(SELECT
					x.TRANSFER_ALL 
					FROM t_trade_funds_share_change x
					WHERE x.ORIGIN_TRADE_INFO_ID = g.TRADE_INFO_ID
					AND x.RC_STATE = 'E') = '02'
					THEN
					(SELECT
					x.VALUE_DATE
					FROM t_trade_funds_share_change x
					WHERE x.ORIGIN_TRADE_INFO_ID = g.TRADE_INFO_ID
					AND x.RC_STATE = 'E')
					ELSE
					FUNC_FOUNDATE_CLOSED_ENDDATE (
							b.FOUND_DATE,
							(
								CASE
								WHEN c.CLOSE_DPERIOD IS NULL THEN
									b.CLOSE_DPERIODS
								ELSE
									c.CLOSE_DPERIOD
								END
							),
							b.CLOSE_DPERIOD_UNIT
						)
					END
					)> CURDATE()
				AND case when
					EXISTS(SELECT 'X'
					from t_trade_funds_share_change x,
					t_cust_base_info y,
					t_trade_cust_info z,
					t_trade_info m
					WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
					and z.TRADE_INFO_ID = m.TRADE_INFO_ID
					and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
					and y.RC_STATE = 'E'
					and z.RC_STATE = 'E'
					and m.RC_STATE = 'E'
					and y.CUSTOMER_NO = #{customerNo})
					then (g.trade_staus IN ('06', '10', '11','12','13','14'))
					ELSE (g.trade_staus IN ('06', '10','13')) END
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND e.RC_STATE = 'e'
				AND g.RC_STATE = 'e'
				ORDER BY a.PRODUCT_ID
	</select>
	<!-- 根据客户号查询客户浮动资产CNY人民币-->
    <select id="getFloatAssetCNY" parameterType="java.util.Map" resultType="java.util.Map">
					    SELECT
FORMAT(IFNULL((SELECT
SUM(a.TRADE_TOTAL_ASSETS)
FROM
t_trade_info a,
t_cust_base_info b,
t_trade_cust_info c,
t_pd_product d,
t_trade_product_info_view v
WHERE
a.TRADE_INFO_ID = c.TRADE_INFO_ID
AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
AND d.PRODUCT_ID = v.PRODUCT_ID
AND a.TRADE_INFO_ID = v.TRADE_INFO_ID
AND b.CUSTOMER_NO = #{customerNo}
AND case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUSTOMER_NO = #{customerNo})
then (a.trade_staus IN ('06', '10', '11','12','13','14'))
ELSE (a.trade_staus IN ('06', '10','13')) END
AND d.PRODUCT_TYPE = "1"
AND d.PRODUCT_SUB_TYPE in (03,01)
AND a.CURRENCY = 'CNY'
AND a.RC_STATE = "E" 
AND b.RC_STATE = "E" 
AND c.RC_STATE = "E" 
AND d.RC_STATE = "E" 

) 
-CASE
WHEN
d.PRODUCT_SUB_TYPE = '03'
THEN
(CASE
WHEN x.REMAINING_TOTAL_SHARE = 0
THEN SUM(IFNULL(e.subscriptionFee,0))
ELSE
0
END
)
ELSE
0
END
,0),2) "amount",
FUNC_GET_CODE_NAME ('currency', 'CNY') 'currency'
				FROM
					t_trade_info a,
					t_cust_base_info b,
					t_trade_cust_info c,
					t_pd_product d,
					t_trade_product_info_view e,
t_redemption_info x,
t_redemption_trade_info y

				WHERE
					a.trade_staus = 10
				AND b.CUSTOMER_NO = #{customerNo}
				AND d.PRODUCT_SUB_TYPE IN (01, 03)
				AND a.CURRENCY = 'CNY'
				AND d.SALES_STATUS = 0
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND a.TRADE_INFO_ID = c.TRADE_INFO_ID
				AND a.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND x.REDEMPTION_INFO_ID = y.REDEMPTION_INFO_ID
				AND y.TRADE_INFO_ID = a.TRADE_INFO_ID
				AND x.REDEMPTION_STATUS = "04"
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND x.RC_STATE = 'e'
				AND y.RC_STATE = 'e'

	</select>
	<!-- 根据客户号查询客户浮动资产USD美元-->
    <select id="getFloatAssetUSD" parameterType="java.util.Map" resultType="java.util.Map">
					   SELECT
FORMAT(IFNULL((SELECT
SUM(a.TRADE_TOTAL_ASSETS)
FROM
t_trade_info a,
t_cust_base_info b,
t_trade_cust_info c,
t_pd_product d,
t_trade_product_info_view v
WHERE
a.TRADE_INFO_ID = c.TRADE_INFO_ID
AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
AND d.PRODUCT_ID = v.PRODUCT_ID
AND a.TRADE_INFO_ID = v.TRADE_INFO_ID
AND b.CUSTOMER_NO = #{customerNo}
AND case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUSTOMER_NO = #{customerNo})
then (a.trade_staus IN ('06', '10', '11','12','13','14'))
ELSE (a.trade_staus IN ('06', '10','13')) END
AND d.PRODUCT_TYPE = "1"
AND d.PRODUCT_SUB_TYPE in (03,01)
AND a.CURRENCY = 'USD'
AND a.RC_STATE = "E" 
AND b.RC_STATE = "E" 
AND c.RC_STATE = "E" 
AND d.RC_STATE = "E" 

) 
-CASE
WHEN
d.PRODUCT_SUB_TYPE = '03'
THEN
(CASE
WHEN x.REMAINING_TOTAL_SHARE = 0
THEN SUM(IFNULL(e.subscriptionFee,0))
ELSE
0
END
)
ELSE
0
END
,0),2) "amount",
FUNC_GET_CODE_NAME ('currency', 'USD') 'currency'
				FROM
					t_trade_info a,
					t_cust_base_info b,
					t_trade_cust_info c,
					t_pd_product d,
					t_trade_product_info_view e,
t_redemption_info x,
t_redemption_trade_info y

				WHERE
					a.trade_staus = 10
				AND b.CUSTOMER_NO = #{customerNo}
				AND d.PRODUCT_SUB_TYPE IN (01, 03)
				AND a.CURRENCY = 'USD'
				AND d.SALES_STATUS = 0
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND a.TRADE_INFO_ID = c.TRADE_INFO_ID
				AND a.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND x.REDEMPTION_INFO_ID = y.REDEMPTION_INFO_ID
				AND y.TRADE_INFO_ID = a.TRADE_INFO_ID
				AND x.REDEMPTION_STATUS = "04"
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND x.RC_STATE = 'e'
				AND y.RC_STATE = 'e'
	</select>
	<!-- 根据客户号查询客户的本周资产CNY 人民币 -->
    <select id="getLastAssetCNY" parameterType="java.util.Map" resultType="java.util.Map">
				 SELECT
				FORMAT((IFNULL(SUM(h.net_value*(f.subscription_copies - FUNC_GET_ALL_REDEMPTION_SHARE (A.TRADE_INFO_ID))),0)
				+
				(SELECT
				IFNULL(SUM(a.TRADE_TOTAL_ASSETS),0)
				FROM
				t_trade_info a,
				t_cust_base_info b,
				t_trade_cust_info c,
				t_pd_product d,
				t_trade_product_info_view e,
				t_trade_status_info f
				WHERE
				a.TRADE_INFO_ID=c.TRADE_INFO_ID
				AND b.CUST_BASE_INFO_ID=c.CUST_BASE_INFO_ID
				AND d.PRODUCT_ID=e.PRODUCT_ID
				AND a.TRADE_INFO_ID=e.TRADE_INFO_ID
				AND a.TRADE_INFO_ID=f.TRADE_INFO_ID
				AND d.PRODUCT_TYPE=1
				AND d.PRODUCT_SUB_TYPE=01
				AND case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUSTOMER_NO = #{customerNo})
then (a.trade_staus IN ('06', '10', '11','12','13','14'))
ELSE (a.trade_staus IN ('06', '10','13')) END
				AND d.SALES_STATUS=0
				AND b.CUSTOMER_NO=#{customerNo}
				AND A.CURRENCY='CNY'
			<!-- 	AND (
					SELECT
						SUM(
							f.subscription_copies - (
								FUNC_GET_ALL_REDEMPTION_SHARE (a.TRADE_INFO_ID)
							)
						)
				) > 0   -->
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND f.RC_STATE = 'e'
				)),2) 'amount',
				FUNC_GET_CODE_NAME ('currency', 'CNY') 'currency'
				FROM
					t_trade_info a,
					t_trade_cust_info b,
					t_cust_base_info c,
					t_trade_product_info_view d,
					t_pd_product e,
					t_trade_status_info f,
					t_pd_wealth g,
					t_pd_wealth_net_value h
				WHERE
					1 = 1
				AND g.product_id = e.product_id
				AND h.pd_wealth_id = g.pd_wealth_id
				AND f.trade_info_id = a.trade_info_id
				AND a.TRADE_INFO_ID = b.TRADE_INFO_ID
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND e.SALES_STATUS in (0,1)
				AND e.PRODUCT_TYPE = 1
				AND e.PRODUCT_SUB_TYPE = 03
				AND c.CUSTOMER_NO = #{customerNo}
				AND h.public_date = (
					SELECT
						max(a.public_date)
					FROM
						t_pd_wealth_net_value a
					WHERE
						a.pd_wealth_id = g.pd_wealth_id
					AND a.rc_state = 'E'
				)
				AND a.RC_STATE = 'E'
				AND b.RC_STATE = 'E'
				AND c.RC_STATE = 'E'
				AND e.RC_STATE = 'E'
				AND f.RC_STATE = 'E'
				AND g.RC_STATE = 'E'
				AND h.RC_STATE = 'E'
				AND a.TRADE_STAUS = 10
				AND A.CURRENCY='CNY'
    </select>
    <!-- 根据客户号查询客户的本周资产USD 美元 -->
    <select id="getLastAssetUSD" parameterType="java.util.Map" resultType="java.util.Map">
				 SELECT
				FORMAT((IFNULL(SUM(h.net_value*(f.subscription_copies - FUNC_GET_ALL_REDEMPTION_SHARE (A.TRADE_INFO_ID))),0)
				+
				(SELECT
				IFNULL(SUM(a.TRADE_TOTAL_ASSETS),0)
				FROM
				t_trade_info a,
				t_cust_base_info b,
				t_trade_cust_info c,
				t_pd_product d,
				t_trade_product_info_view e,
				t_trade_status_info f
				WHERE
				    1=1
				AND a.TRADE_INFO_ID=c.TRADE_INFO_ID
				AND b.CUST_BASE_INFO_ID=c.CUST_BASE_INFO_ID
				AND d.PRODUCT_ID=e.PRODUCT_ID
				AND a.TRADE_INFO_ID=e.TRADE_INFO_ID
				AND a.TRADE_INFO_ID=f.TRADE_INFO_ID
				AND d.PRODUCT_TYPE=1
				AND d.PRODUCT_SUB_TYPE=01
				AND case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUSTOMER_NO = #{customerNo})
then (a.trade_staus IN ('06', '10', '11','12','13','14'))
ELSE (a.trade_staus IN ('06', '10','13')) END
				AND d.SALES_STATUS=0
				AND b.CUSTOMER_NO=#{customerNo}
				AND A.CURRENCY='USD'
			<!-- AND (
					SELECT
						SUM(
							f.subscription_copies - (
								FUNC_GET_ALL_REDEMPTION_SHARE (a.TRADE_INFO_ID)
							)
						)
				) > 0   -->
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND f.RC_STATE = 'e'
				)),2) 'amount',
				FUNC_GET_CODE_NAME ('currency', a.CURRENCY) 'currency'
				FROM
					t_trade_info a,
					t_trade_cust_info b,
					t_cust_base_info c,
					t_trade_product_info_view d,
					t_pd_product e,
					t_trade_status_info f,
					t_pd_wealth g,
					t_pd_wealth_net_value h
				WHERE
					1 = 1
				AND g.product_id = e.product_id
				AND h.pd_wealth_id = g.pd_wealth_id
				AND f.trade_info_id = a.trade_info_id
				AND a.TRADE_INFO_ID = b.TRADE_INFO_ID
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND e.SALES_STATUS in (0,1)
				AND e.PRODUCT_TYPE = 1
				AND e.PRODUCT_SUB_TYPE = 03
				AND c.CUSTOMER_NO = #{customerNo}
				AND h.public_date = (
					SELECT
						max(a.public_date)
					FROM
						t_pd_wealth_net_value a
					WHERE
						a.pd_wealth_id = g.pd_wealth_id
					AND a.rc_state = 'E'
				)
				AND a.RC_STATE = 'E'
				AND b.RC_STATE = 'E'
				AND c.RC_STATE = 'E'
				AND e.RC_STATE = 'E'
				AND f.RC_STATE = 'E'
				AND g.RC_STATE = 'E'
				AND h.RC_STATE = 'E'
				AND a.TRADE_STAUS = 10
				AND A.CURRENCY='USD'
    </select>
    <!-- 根据客户号查询客户所持有的所有浮动产品 -->
    <select id="getFloatProduct03" parameterType="java.util.Map" resultType="java.util.Map">
			    SELECT DISTINCT
					a.PRODUCT_ID 'productId',
					a.PRODUCT_NAME 'productName'
				FROM
					t_pd_product a,
					t_pd_wealth b,
					t_pd_wealth_net_value c,
					t_cust_base_info d,
					t_trade_cust_info e,
					t_trade_product_info_view f,
					t_trade_info g,
					t_trade_status_info h
				WHERE
					a.PRODUCT_ID = b.PRODUCT_ID
				AND b.PD_WEALTH_ID = c.PD_WEALTH_ID
				AND a.PRODUCT_ID = f.PRODUCT_ID
				AND d.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
				AND g.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND g.TRADE_INFO_ID = f.TRADE_INFO_ID
				AND h.TRADE_INFO_ID = g.TRADE_INFO_ID
				AND d.CUSTOMER_NO = #{customerNo}
				AND a.PRODUCT_TYPE = "1"
				AND a.PRODUCT_SUB_TYPE = "03"
				AND g.TRADE_STAUS= "10"
				AND c.public_date = (
					SELECT
						max(e.public_date)
					FROM
						t_pd_wealth_net_value e
					WHERE
						e.pd_wealth_id = b.pd_wealth_id
					AND e.rc_state = 'E'
				)
				AND (
					SELECT
						SUM(
							h.subscription_copies - (
								FUNC_GET_ALL_REDEMPTION_SHARE (g.TRADE_INFO_ID)
							)
						)
				) > 0
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND e.RC_STATE = 'e'
				AND g.RC_STATE = 'e'
				AND h.RC_STATE = 'e'
				ORDER BY
					a.PRODUCT_ID
	</select>
	<!-- 股权产品 -->
	<select id="getFloatProduct01" parameterType="java.util.Map" resultType="java.util.Map">
				SELECT DISTINCT
					  d.PRODUCT_ID 'productId',
					  d.PRODUCT_NAME 'productName',
					  1 'lastNetValue',
					  d.PRODUCT_SUB_TYPE 'productSubType'
				 FROM t_cust_base_info a,
			          t_trade_info b,
				      t_trade_cust_info c,
				      t_pd_product d,
							t_pd_wealth e,
				      t_trade_product_info_view v
				      WHERE
				    a.CUST_BASE_INFO_ID=c.CUST_BASE_INFO_ID
				AND b.TRADE_INFO_ID=c.TRADE_INFO_ID
				AND b.TRADE_INFO_ID=v.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND d.PRODUCT_ID=v.PRODUCT_ID
				AND a.CUSTOMER_NO= #{customerNo}
				AND d.PRODUCT_TYPE=1
				AND d.PRODUCT_SUB_TYPE=01
				AND case when
EXISTS(SELECT 'X'
from t_trade_funds_share_change x,
t_cust_base_info y,
t_trade_cust_info z,
t_trade_info m
WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
and z.TRADE_INFO_ID = m.TRADE_INFO_ID
and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
and y.RC_STATE = 'E'
and z.RC_STATE = 'E'
and m.RC_STATE = 'E'
and y.CUSTOMER_NO = #{customerNo})
then (b.trade_staus IN ('06', '10', '11','12','13','14'))
ELSE (b.trade_staus IN ('06', '10','13')) END
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND e.RC_STATE = 'e'
AND (
CASE WHEN
(SELECT
x.TRANSFER_ALL 
FROM t_trade_funds_share_change x
WHERE x.ORIGIN_TRADE_INFO_ID = b.TRADE_INFO_ID
AND x.RC_STATE = 'E') = '02'
THEN
(SELECT
x.VALUE_DATE
FROM t_trade_funds_share_change x
WHERE x.ORIGIN_TRADE_INFO_ID = b.TRADE_INFO_ID
AND x.RC_STATE = 'E')
ELSE
FUNC_FOUNDATE_CLOSED_ENDDATE (
		e.FOUND_DATE,
		e.CLOSE_DPERIODS,
		e.CLOSE_DPERIOD_UNIT
	)
END
)> CURDATE()
</select>
	  <!-- 根据客户号和产品ID查询浮收产品详情 -->
    <select id="getFloatDetail" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT
					d.expectOpenDay 'expectOpenDay',
					e.product_name 'productName',
					FORMAT(
						(
							SUM(
								f.subscription_copies - FUNC_GET_ALL_REDEMPTION_SHARE (A.TRADE_INFO_ID)
							) * h.net_value
						),
						2
					) 'subscriptionFee',
					FORMAT(
						SUM(
							f.subscription_copies - FUNC_GET_ALL_REDEMPTION_SHARE (A.TRADE_INFO_ID)
						),
						2
					) 'subscriptionCopies',
					CONCAT(ROUND(h.net_value, 4),'','') 'lastNetValue',
						CONCAT(
						(
							SELECT
								BANK_NAME
							FROM
								t_def_bank
							WHERE
								BANK_ID = j.BANK_CODE
						),
						'\r\n',
						j.BANK_ACC_NO
					) 'custAccount',
					d.subscriptionfee 'tradeTotalAssets',
					IFNULL(g.close_dperiod_fee * d.subscriptionfee / 100,0) 'redemptionFee',
				  g.invest_increase_money 'investAddMoney',
				  IFNULL(ROUND(h.net_value-(
				SELECT
				x.net_value
				FROM
				t_pd_wealth_net_value x
				WHERE
				x.pd_wealth_id = g.pd_wealth_id
				AND x.public_date = (
					SELECT
						MIN(d.expectOpenDay)
					FROM
						t_trade_info a,
					t_trade_cust_info b,
					t_cust_base_info c,
					t_trade_product_info_view d,
					t_pd_product e
				WHERE
						a.TRADE_INFO_ID = b.TRADE_INFO_ID
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND a.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND c.CUSTOMER_NO = #{customerNo}
				AND e.PRODUCT_ID = #{productId}
				AND a.RC_STATE = 'E'
				AND b.RC_STATE = 'E'
				AND c.RC_STATE = 'E'
				AND e.RC_STATE = 'E'
				)
				), 4),'') "netValueChange"
		FROM
					t_trade_info a,
					t_trade_cust_info b,
					t_cust_base_info c,
					t_trade_product_info_view d,
					t_pd_product e,
					t_trade_status_info f,
					t_pd_wealth g,
					t_pd_wealth_net_value h,
					t_trade_cust_acc_rela i,
					t_cust_acc_info j
		WHERE
					1 = 1
				AND j.CUST_ACC_INFO_ID = i.CUST_ACC_INFO_ID
				AND i.TRADE_CUST_INFO_ID = b.TRADE_CUST_INFO_ID
				AND g.product_id = e.product_id
				AND h.pd_wealth_id = g.pd_wealth_id
				AND f.trade_info_id = a.trade_info_id
				AND a.TRADE_INFO_ID = b.TRADE_INFO_ID
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND i.TRADE_ACC_FLAG = '1'
				AND c.CUSTOMER_NO =#{customerNo}
				AND e.PRODUCT_ID =#{productId}
				AND h.public_date = (
					SELECT
						max(a.public_date)
					FROM
						t_pd_wealth_net_value a
					WHERE
						a.pd_wealth_id = g.pd_wealth_id
					AND a.rc_state = 'E'
				)
				AND a.RC_STATE = 'E'
				AND b.RC_STATE = 'E'
				AND c.RC_STATE = 'E'
				AND e.RC_STATE = 'E'
				AND f.RC_STATE = 'E'
				AND g.RC_STATE = 'E'
				AND h.RC_STATE = 'E'
				AND i.RC_STATE = 'E'
				AND a.TRADE_STAUS = "10" 
    </select>
    <!-- 获取浮动产品的赎回记录 -->
    <select id="getRedemptionRecord" parameterType="java.util.Map" resultType="java.util.Map">
						    SELECT
r.REDEMPTION_OPENDAY 'redemptionDate',
CONCAT(ROUND(r.ACTU_REDEMPTION_NET_VALUE,4),'','') 'redemptionNetValue',
FORMAT(r.ACTU_REDEMPTION_TOTAL_SHARE,2) 'redemptionCopies',
FORMAT(r.ACTU_REDEMPTION_TOTAL_MONEY,2) 'redemptionMoney',
FORMAT(r.ACTU_REDEMPTION_TOTAL_SHARE*(r.ACTU_REDEMPTION_NET_VALUE-(
SELECT 
MAX(x.NET_VALUE)
FROM
t_pd_wealth_net_value x,
t_pd_wealth y
WHERE
y.PRODUCT_ID = e.PRODUCT_ID
AND x.PD_WEALTH_ID = y.PD_WEALTH_ID
AND x.PUBLIC_DATE = d.expectOpenDay
AND x.RC_STATE = 'E'
AND y.RC_STATE = 'E'
)),2) "earnMoney"
FROM
t_trade_info a,
	t_trade_cust_info b,
	t_cust_base_info c,
	t_trade_product_info_view d,
	t_pd_product e,
t_redemption_info r
WHERE
		a.TRADE_INFO_ID = b.TRADE_INFO_ID
AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
AND d.PRODUCT_ID = e.PRODUCT_ID
AND r.PD_PRODUCT_ID = e.PRODUCT_ID
AND r.REDEMPTION_STATUS = '04'
AND r.CUSTOMER_NO = c.CUSTOMER_NO
AND c.CUSTOMER_NO =#{customerNo}
AND e.PRODUCT_ID=#{productId}
AND a.TRADE_STAUS = '10'
AND a.RC_STATE = 'E'
AND b.RC_STATE = 'E'
AND c.RC_STATE = 'E'
AND e.RC_STATE = 'E'
AND r.RC_STATE = 'E'
    </select>
     <select id="getNetValues" parameterType="java.util.Map" resultType="java.util.Map">
			 SELECT DISTINCT
					f.PUBLIC_DATE 'publicDate',
					ROUND(f.NET_VALUE,4) 'netValue'
				FROM
					t_trade_info a,
					t_trade_cust_info b,
					t_cust_base_info c,
					t_trade_product_info_view d,
					t_pd_product e,
					t_pd_wealth_net_value f,
				    t_pd_wealth g
				
				WHERE
					1 = 1
				AND a.TRADE_INFO_ID = b.TRADE_INFO_ID
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND e.PRODUCT_ID=g.PRODUCT_ID
				AND g.PD_WEALTH_ID=f.PD_WEALTH_ID
				AND c.CUSTOMER_NO = #{customerNo}
				AND e.PRODUCT_ID = #{productId}
				AND a.RC_STATE = 'E'
				AND b.RC_STATE = 'E'
				AND c.RC_STATE = 'E'
				AND e.RC_STATE = 'E'
				AND f.RC_STATE = 'E'
				AND g.RC_STATE = 'E'
				AND f.PUBLIC_DATE >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH)
				AND a.TRADE_STAUS in ("10","11","12","13","14")
				ORDER BY publicDate
     </select>
     
    <!-- 根据客户号和产品ID查询固收产品详情 -->
    <select id="getFixedDetail1" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT
	e.PRODUCT_NAME 'productName',
	DATE_FORMAT(f.FOUND_DATE, '%Y-%m-%d') 'foundDate',
	CONCAT(
		(
			CASE
			WHEN g.CLOSE_DPERIOD IS NULL THEN
				f.CLOSE_DPERIODS
			ELSE
				g.CLOSE_DPERIOD
			END
		),
		CASE
	WHEN FUNC_GET_CODE_NAME (
		'cloPeriUnit',
		f.CLOSE_DPERIOD_UNIT
	) = '月' THEN
		CONCAT(
			'个',
			FUNC_GET_CODE_NAME (
				'cloPeriUnit',
				f.CLOSE_DPERIOD_UNIT
			)
		)
	ELSE
		(
			FUNC_GET_CODE_NAME (
				'cloPeriUnit',
				f.CLOSE_DPERIOD_UNIT
			)
		)
	END
	) 'closePeriod',
	FORMAT(a.TRADE_TOTAL_ASSETS, 2) 'tradeTotalAssets',
	CONCAT(
		(
			SELECT
				BANK_NAME
			FROM
				t_def_bank
			WHERE
				BANK_ID = h.BANK_CODE
		),
		'\r\n',
		h.BANK_ACC_NO
	) 'custAccount',
	CONCAT(
		ROUND(g.EXPECTED_FEE_RATE, 2),
		'%'
	) 'expectFeeRate',
	FUNC_GET_CODE_NAME ('incomeWay', f.INCOME_WAY) 'incomeWay',
	FUNC_FOUNDATE_CLOSED_ENDDATE (
		f.FOUND_DATE,
		(
			CASE
			WHEN g.CLOSE_DPERIOD IS NULL THEN
				f.CLOSE_DPERIODS
			ELSE
				g.CLOSE_DPERIOD
			END
		),
		f.CLOSE_DPERIOD_UNIT
	) 'endDate'	
FROM
	t_trade_info a,
	t_trade_cust_info b,
	t_cust_base_info c,
	t_trade_product_info_view d,
	t_pd_product e,
	t_pd_wealth f,
	t_pd_wealth_fee_rate g,
	t_cust_acc_info h,
	t_trade_cust_acc_rela i
WHERE
	1 = 1
AND a.TRADE_INFO_ID = b.TRADE_INFO_ID
AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
AND d.TRADE_INFO_ID = b.TRADE_INFO_ID
AND d.PRODUCT_ID = e.PRODUCT_ID
AND e.PRODUCT_ID = f.PRODUCT_ID
AND f.PD_WEALTH_ID = g.PD_WEALTH_ID
AND i.TRADE_CUST_INFO_ID = b.TRADE_CUST_INFO_ID
AND i.CUST_ACC_INFO_ID = h.CUST_ACC_INFO_ID
AND i.TRADE_ACC_FLAG = '1'
AND (
	CASE
	WHEN d.beneficialType IS NOT NULL THEN
		d.beneficialType = g.BENEFICIAL_TYPE
	ELSE
		1 = 1
	END
)
AND c.CUSTOMER_NO =#{customerNo}
AND e.PRODUCT_ID =#{productId}
AND a.RC_STATE = 'E'
AND b.RC_STATE = 'E'
AND c.RC_STATE = 'E'
AND e.RC_STATE = 'E'
AND f.RC_STATE = 'E'
AND g.RC_STATE = 'E'
AND h.RC_STATE = 'E'
AND i.RC_STATE = 'E'
AND a.TRADE_STAUS IN ("10", "11", "12", "13", "14")		   			
    </select>
    <!--获取固定产品的分配记录，根据客户号和产品ID-->
    <select id="getDistributeRecord" parameterType="java.util.Map" resultType="java.util.Map">
SELECT
f.DISTRIBUTE_DATE "distributeDate" ,
CONCAT(DATEDIFF(f.DISTRIBUTE_END_DATE,f.DISTRIBUTE_START_DATE )+1,'','天') "period",
ROUND(v.subscriptionFee*f.PRINCIPAL_DISTRIBUTE_RATE/100,2) "subscriptionFee",
ROUND(v.subscriptionFee*g.EXPECTED_FEE_RATE/100*(DATEDIFF(f.DISTRIBUTE_END_DATE,f.DISTRIBUTE_START_DATE )+1)/365,2)'distributeMoney'
FROM
t_cust_base_info a,
t_trade_info b,
t_trade_cust_info c,
t_pd_product d,
t_trade_product_info_view v,
t_pd_wealth e,
t_pd_wealth_income_dis f,
t_pd_wealth_fee_rate g
WHERE 
a.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
AND b.TRADE_INFO_ID = c.TRADE_INFO_ID
AND d.PRODUCT_ID = v.PRODUCT_ID
AND b.TRADE_INFO_ID = v.TRADE_INFO_ID
AND d.PRODUCT_ID = e.PRODUCT_ID
AND f.PD_WEALTH_ID = e.PD_WEALTH_ID
AND g.PD_WEALTH_ID = e.PD_WEALTH_ID
AND d.PRODUCT_ID =#{productId}
AND a.CUSTOMER_NO =#{customerNo}
AND CURDATE() > f.DISTRIBUTE_DATE 
	AND
								(		
						CASE
						WHEN v.beneficialType IS NOT NULL
						THEN v.beneficialType = g.BENEFICIAL_TYPE
						ELSE 1=1
						END
						)
						AND a.RC_STATE = 'E'
						AND b.RC_STATE = 'E'
						AND c.RC_STATE = 'E'
						AND d.RC_STATE = 'E'
						AND e.RC_STATE = 'E'
						AND f.RC_STATE = 'E'
						AND g.RC_STATE = 'E'
    </select>
    
    <!-- 根据客户号查询固收产品历史 -->
    <select id="getFixedHistory" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.PRODUCT_ID 'productId',
			a.PRODUCT_NAME 'productName',
			DATE_FORMAT(b.FOUND_DATE, '%Y-%m-%d') 'foundDate',
			(
				CASE
				WHEN (
					SELECT
						y.TRANSFER_ALL
					FROM
						t_trade_funds_share_change y
					WHERE
						x.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
					AND y.RC_STATE = 'E'
				) = '02' THEN
					(
						SELECT
							y.VALUE_DATE
						FROM
							t_trade_funds_share_change y
						WHERE
							x.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
						AND y.RC_STATE = 'E'
					)
				ELSE
					(
						FUNC_FOUNDATE_CLOSED_ENDDATE (
							b.FOUND_DATE,
							(
								CASE
								WHEN z.CLOSE_DPERIOD IS NULL THEN
									b.CLOSE_DPERIODS
								ELSE
									z.CLOSE_DPERIOD
								END
							),
							b.CLOSE_DPERIOD_UNIT
						)
					)
				END
			) 'endDate',
			CONCAT(
				FORMAT(
					x.TRADE_TOTAL_ASSETS / 10000,
					2
				),
				'万'
			) 'tradeTotalAsset',
			CONCAT(
				FORMAT(z.EXPECTED_FEE_RATE, 1),
				'%'
			) 'expectFeeRate',
			FORMAT(
					IFNULL(
						(
							d.subscriptionFee + (
								d.subscriptionFee * (
									z.EXPECTED_FEE_RATE + IFNULL(z.ADD_EXPECTED_FEE_RATE, 0)
								) / 100 / 365
							) * (
								CASE
								WHEN (
									SELECT
										j.VALUE_DATE
									FROM
										t_trade_funds_share_change j
									WHERE
										j.ORIGIN_TRADE_INFO_ID = x.TRADE_INFO_ID
									AND j.RC_STATE = 'E'
								) IS NOT NULL THEN
									DATEDIFF(
										(
											SELECT
												j.VALUE_DATE
											FROM
												t_trade_funds_share_change j
											WHERE
												j.ORIGIN_TRADE_INFO_ID = x.TRADE_INFO_ID
											AND j.RC_STATE = 'E'
										),
										b.FOUND_DATE
									)
								ELSE
									DATEDIFF(
										(
											CASE
											WHEN (
												SELECT
													y.TRANSFER_ALL
												FROM
													t_trade_funds_share_change y
												WHERE
													x.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
												AND y.RC_STATE = 'E'
											) = '02' THEN
												(
													SELECT
														y.VALUE_DATE
													FROM
														t_trade_funds_share_change y
													WHERE
														x.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
													AND y.RC_STATE = 'E'
												)
											ELSE
												(
													FUNC_FOUNDATE_CLOSED_ENDDATE (
														b.FOUND_DATE,
														(
															CASE
															WHEN z.CLOSE_DPERIOD IS NULL THEN
																b.CLOSE_DPERIODS
															ELSE
																z.CLOSE_DPERIOD
															END
														),
														b.CLOSE_DPERIOD_UNIT
													)
												)
											END
										),
										b.FOUND_DATE
									)
								END
							)
						),
						0
					),
					2
				) 'cashMoney',
			CONCAT(
				(
					SELECT
						BANK_NAME
					FROM
						t_def_bank
					WHERE
						BANK_ID = h.BANK_CODE
				),
				'  ',
				h.BANK_ACC_NO
			) 'custAccount'
		FROM
			t_pd_product a,
			t_pd_wealth b,
			t_cust_base_info c,
			t_trade_product_info_view d,
			t_pd_income_dis_detail e,
			t_pd_income_dis f,
			t_pd_wealth_fee_rate z,
			t_trade_info x,
			t_trade_cust_info y,
			t_cust_acc_info h,
			t_trade_cust_acc_rela i,
			t_trade_cust_info j
		WHERE
			1 = 1
		AND a.PRODUCT_ID = d.PRODUCT_ID
		AND b.PRODUCT_ID = a.PRODUCT_ID
		AND c.CUST_BASE_INFO_ID = y.CUST_BASE_INFO_ID
		AND x.TRADE_INFO_ID = y.TRADE_INFO_ID
		AND d.TRADE_INFO_ID = x.TRADE_INFO_ID
		AND b.PD_WEALTH_ID = z.PD_WEALTH_ID
		AND a.PRODUCT_ID = f.PD_PRODUCT_ID
		AND f.PD_INCOME_DISTRIBUTE_ID = e.PD_INCOME_DISTRIBUTE_DETAIL_ID
		AND j.TRADE_INFO_ID = x.TRADE_INFO_ID
		AND i.TRADE_CUST_INFO_ID = j.TRADE_CUST_INFO_ID
		AND i.CUST_ACC_INFO_ID = h.CUST_ACC_INFO_ID
		AND i.TRADE_ACC_FLAG = '1'
		AND a.PRODUCT_SUB_TYPE = '02'
		AND (
			CASE
			WHEN d.beneficialType IS NOT NULL THEN
				d.beneficialType = z.BENEFICIAL_TYPE
			ELSE
				1 = 1
			END
		)
		AND CURDATE() > (
			CASE
			WHEN (
				SELECT
					y.TRANSFER_ALL
				FROM
					t_trade_funds_share_change y
				WHERE
					x.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
				AND y.RC_STATE = 'E'
			) = '02' THEN
				(
					SELECT
						y.VALUE_DATE
					FROM
						t_trade_funds_share_change y
					WHERE
						x.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
					AND y.RC_STATE = 'E'
				)
			ELSE
				(
					FUNC_FOUNDATE_CLOSED_ENDDATE (
						b.FOUND_DATE,
						(
							CASE
							WHEN z.CLOSE_DPERIOD IS NULL THEN
								b.CLOSE_DPERIODS
							ELSE
								z.CLOSE_DPERIOD
							END
						),
						b.CLOSE_DPERIOD_UNIT
					)
				)
			END
		)
		AND c.CUSTOMER_NO = #{customerNo}
		AND a.rc_state = 'E'
		AND b.rc_state = 'E'
		AND c.rc_state = 'E'
		AND e.rc_state = 'E'
		AND f.rc_state = 'E'
		AND x.rc_state = 'E'
		AND y.rc_state = 'E'
		AND z.rc_state = 'E'
		GROUP BY
			a.PRODUCT_NAME
		   
    </select>
    
    <!-- 根据客户号查询浮收产品历史 -->
    <select id="getFloatProductHistory" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT
				IFNULL(b.PRODUCT_ID,"XXX") 'productId',
				b.PRODUCT_NAME 'productName',
				d.expectOpenDay 'expectOpenDay',
				a.REDEMPTION_OPENDAY 'redemptionDate',
				(
					CASE
					WHEN f.CURRENCY = 'CNY' THEN
						CONCAT(
							FORMAT(
								SUM(d.subscriptionFee / 10000),
								2
							),
							'万'
						)
					WHEN f.CURRENCY = 'USD' THEN
						CONCAT(
							FORMAT(SUM(d.subscriptionFee), 2),
							'美元'
						)
					END
				) 'tradeTotalAsset',
				FORMAT(
						SUM(
							a.ACTU_REDEMPTION_TOTAL_MONEY
						),					
					2
				) 'redemptionMoney',
				CONCAT(
					ROUND(
						a.ACTU_REDEMPTION_NET_VALUE,
						4
					),
					'',
					''
				) 'netValue',
				CONCAT(
					(
						SELECT
							BANK_NAME
						FROM
							t_def_bank
						WHERE
							BANK_ID = g.BANK_CODE
					),
					'  ',
					g.BANK_ACC_NO
				) 'custAccount'
			FROM
				t_redemption_info a,
				t_pd_product b,
				t_cust_base_info c,
				t_trade_product_info_view d,
				t_trade_cust_info e,
				t_trade_info f,
				t_cust_acc_info g,
				t_trade_cust_acc_rela h
			WHERE
				1 = 1
			AND a.PD_PRODUCT_ID = b.PRODUCT_ID
			AND a.CUSTOMER_NO = c.CUSTOMER_NO
			AND c.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
			AND f.TRADE_INFO_ID = e.TRADE_INFO_ID
			AND d.TRADE_INFO_ID = f.TRADE_INFO_ID
			AND d.PRODUCT_ID = b.PRODUCT_ID
			AND g.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
			AND h.TRADE_CUST_INFO_ID = e.TRADE_CUST_INFO_ID
			AND h.CUST_ACC_INFO_ID = g.CUST_ACC_INFO_ID
			AND h.TRADE_ACC_FLAG = '1'
			AND b.PRODUCT_SUB_TYPE = '03'
			AND b. STATUS = '2'
			AND a.REMAINING_TOTAL_SHARE = 0
			AND a.CUSTOMER_NO = #{customerNo}
			AND a.rc_state = 'E'
			AND b.rc_state = 'E'
			AND c.rc_state = 'E'
			AND e.rc_state = 'E'
			AND f.rc_state = 'E'
			AND g.rc_state = 'E'
			AND h.rc_state = 'E'
			ORDER BY
				b.PRODUCT_NAME		
    </select>
    
	<select id="findAllProduct" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			t.PRODUCT_ID "productId",
			t.PRODUCT_CODE "productCode",
			t.PRODUCT_NAME "productName",
			t.PRODUCT_SUB_TYPE "productSubType"
		FROM
			t_pd_product t
		WHERE
			t.RC_STATE = "E"
			
			and t.STATUS = "2"
		LIMIT #{page} ,50
	</select>  
	
  
	<!-- 根据客户号产讯所有已购产品 -->  
    <select id="findAllBoughtProduct" parameterType="java.util.Map" resultType="java.util.Map" >
				SELECT DISTINCT
					a.PRODUCT_ID "productId",
					a.PRODUCT_CODE "productCode",
					a.PRODUCT_NAME "productName",
				    b.CUSTOMER_NO "customerNo",
				    b.CHN_NAME "customerName"
				FROM
					t_pd_product a,
					t_cust_base_info b,
					t_trade_info c,
					t_trade_cust_info d,
					t_trade_product_info_view v
				WHERE
					a.PRODUCT_ID = v.PRODUCT_ID
				AND b.CUST_BASE_INFO_ID = d.CUST_BASE_INFO_ID
				AND c.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND c.TRADE_INFO_ID = v.TRADE_INFO_ID 
				AND c.TRADE_STAUS in ("10","11","12","13","14")
				AND a. STATUS = "2"
				AND a.PRODUCT_ID=#{productId}
				AND a.RC_STATE="E"
				AND b.RC_STATE="E"
				AND c.RC_STATE="E"
				AND d.RC_STATE="E"
				LIMIT #{page},50
	</select>
	<!-- 客户归属功能 xtso -->
 	<sql id="queryCustomerBelongCondition">
 		<!-- 调整时间 -->
 		<if test="adjustStartTime != null and adjustStartTime != ''">
 			AND EXISTS(SELECT 'X' 
							           FROM T_CUST_BELONG_OPERATION BELONG 
							           WHERE 
							                 		BELONG.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND BELONG.BELONG_END_DATE IS  NULL AND BELONG.RC_STATE = 'E' 
							             AND BELONG.ADJUST_DATE <![CDATA[>=]]> date'${adjustStartTime}')
 		</if>
 		<if test="adjustEndTime != null and adjustEndTime != ''">
 			AND EXISTS(SELECT 'X' 
							           FROM T_CUST_BELONG_OPERATION BELONG 
							           WHERE 
							                 		BELONG.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND BELONG.BELONG_END_DATE IS  NULL AND BELONG.RC_STATE = 'E' 
							             AND BELONG.ADJUST_DATE <![CDATA[<=]]> ${adjustEndTime} 
 		</if>
 		<!-- 机构Id -->
 		<if test="comId != null and comId !=''" >
      		AND EXISTS(SELECT 'X' FROM T_AGENT F WHERE F.COM_ID = #{comId} AND F.AGENT_ID = A.AGENT_ID AND F.RC_STATE = 'E')
    	</if>
    	<!-- 业务部Id -->
    	<if test="departmentId != null and departmentId !=''" >
      		AND EXISTS(SELECT 'X' FROM T_AGENT F WHERE F.DEPARTMENT_ID = #{departmentId} AND F.AGENT_ID = A.AGENT_ID AND F.RC_STATE = 'E')
    	</if>
    	<!-- 门店Id -->
    	<!-- <if test="storeId != null and storeId !=''" >
    		AND EXISTS(SELECT 'X' FROM T_AGENT F WHERE F.STORE_ID = #{storeId} AND F.AGENT_ID = A.AGENT_ID AND F.RC_STATE = 'E')
    	</if> -->
    	<!-- 理财经理Id -->
    	<if test="agentId != null and agentId !=''" >
      		AND A.AGENT_ID = #{agentId}
    	</if>
    	<!-- 客户号 -->
  		<if test="customerNo != null and customerNo !=''" >
      		AND A.CUSTOMER_NO LIKE '%${customerNo}%'
    	</if>
    	<!-- 客户中文姓名 -->
    	<if test="chnName != null and chnName !=''" >
      		AND A.CHN_NAME LIKE '%${chnName}%'
    	</if>
    	<!-- 客户级别 -->
    	<if test="custLevel != null and custLevel !=''" >
    		AND A.CUST_LEVEL = #{custLevel}
    	</if>
    	<!-- 理财经理在职状态 -->
    	<if test="lisCust_statusName != null and lisCust_statusName != ''">
    		AND EXISTS (SELECT 'X' 
							             FROM T_AGENT AGENT 
							             WHERE AGENT.AGENT_ID = A.AGENT_ID 
							               AND AGENT.WORK_STATE = #{lisCust_statusName} AND  AGENT.RC_STATE = 'E')
    	</if>
    	<if test="custQuality != null and custQuality !=''" >
    		AND Z.CUST_QUALITY = #{custQuality}
    	</if>
    	<if test="custObtainWay != null and custObtainWay !=''" >
    		AND A.CUST_OBTAIN_WAY = #{custObtainWay}
    	</if>
    	<if test="custType != null and custType !=''" >
    		 AND EXISTS(SELECT 'X' FROM T_CUST_OTH_INFO OTH WHERE OTH.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID 
                                  AND OTH.CUST_TYPE = #{custType} AND OTH.AGENT_ID = A.AGENT_ID AND OTH.RC_STATE = 'E')
    	</if>
    	<if test="mobileOrIdNo != null and mobileOrIdNo !=''" >
    		AND (A.ID_NO = #{mobileOrIdNo} OR EXISTS(SELECT 'X' FROM T_CUST_CONTACT_INFO G WHERE G.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID 
            		AND G.RC_STATE = 'E' AND G.MOBILE = #{mobileOrIdNo}))
    	</if>
  	</sql>
  	
  	<select id="findCustomerBelongCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT count(1)                         
		FROM t_cust_base_info A LEFT JOIN t_cust_oth_info B ON (B.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID 
		and a.agent_id = b.agent_id AND B.RC_STATE = 'E')
		WHERE A.RC_STATE = 'E'
		<include refid="queryCustomerBelongCondition"/>
	</select>
	
	<select id="findCustomerBelongList" resultType="java.util.Map" parameterType="java.util.Map" >
		select
							            A.CUST_BASE_INFO_ID   "custBaseInfoId",
							            A.CUSTOMER_NO         "customerNo",
							            A.CHN_NAME            "chnName",
							            FUNC_GET_CODE_NAME('custLevel',A.CUST_LEVEL) "custLevel",
							            FUNC_GET_CODE_NAME('custObtainWay', A.CUST_OBTAIN_WAY) "custObtainWayName",
							            FUNC_GET_CODE_NAME('custQuality', B.CUST_QUALITY)      "custQuality",
							            FUNC_GET_CODE_NAME('customerType', B.CUST_TYPE)        "custType",
							            <!-- 当前财富顾问姓名 -->
							            (SELECT C.AGENT_NAME
							             FROM T_AGENT C
							             WHERE C.AGENT_ID = A.AGENT_ID and C.Rc_State = 'E') "agentName",
							             <!-- 当前财富顾问所属门店 -->
							            <!-- (SELECT D.STORE_NAME
							             FROM T_DEF_STORE D
							             WHERE D.STORE_ID = (
							                                    SELECT E.STORE_ID
							                                    FROM T_AGENT E
							                                    WHERE E.AGENT_ID = A.AGENT_ID AND E.RC_STATE = 'E'
							                                ))  "storeName", -->
							              <!-- 当前财富顾问所属机构姓名 -->
							            (SELECT F.COM_NAME
							             FROM T_DEF_COM F
							             WHERE F.COM_ID = (
							                                SELECT G.COM_ID
							                                FROM T_AGENT G
							                                WHERE (G.AGENT_ID = A.AGENT_ID AND G.RC_STATE = 'E')
							                              )) "comName",
							             <!-- 上任财富顾问姓名 -->              
							            (SELECT t.AGENT_NAME
													 FROM t_agent t where t.AGENT_ID =
													                  (SELECT m.agent_id
													                   FROM T_CUST_BELONG_OPERATION m
													                   WHERE  m.Cust_Base_Info_Id = A.Cust_Base_Info_Id AND M.RC_STATE = 'E' AND m.belong_end_date = 
													                                                      (SELECT Max(n.belong_end_date)
													                                                       FROM  T_CUST_BELONG_OPERATION n
													                                                       WHERE n.Cust_Base_Info_Id = A.Cust_Base_Info_Id AND n.RC_STATE = 'E' 
													                                                       )
													                    
													                  )
													                  AND t.RC_STATE = 'E' 
													              ) "agoAgentName",
							            <!-- 客户当前财富顾问归属起日 -->        
							            (SELECT date_format(z.belong_start_date, '%Y-%m-%d')
							             FROM t_cust_belong_operation z
							             WHERE z.cust_base_info_id = A.Cust_Base_Info_Id and z.belong_end_date is null and z.rc_state = 'E')  "custBelongStartDay",
							             <!-- 客户与当前财富顾问签单次数 -->
							             (SELECT COUNT(1) 
							              FROM T_TRADE_INFO Q,T_TRADE_CUST_INFO P 
							              WHERE Q.TRADE_INFO_ID = P.TRADE_INFO_ID AND P.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND  Q.AGENT_ID = A.AGENT_ID AND Q.TRADE_STAUS IN('11','10','06') AND Q.RC_STATE = 'E' AND P.RC_STATE = 'E')"signTimes"
							from t_cust_base_info A LEFT JOIN t_cust_oth_info B ON(B.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND B.RC_STATE = 'E')
							WHERE A.RC_STATE = 'E'
									<include refid="queryCustomerBelongCondition"/>
									order by A.CUST_BASE_INFO_ID desc
 									LIMIT #{startIndex} , #{endIndex} 
	</select>
	<!-- 根据客户基本信息流水号查询客户基本信息与历史归属信息查询条件 -->
	<sql id="customerBaseInfoCondition">
  		<if test="custBaseInfoId != null and custBaseInfoId !=''" >
      		AND A.cust_base_info_id  <![CDATA[ = ]]>  #{custBaseInfoId}
    	</if>
  	</sql>
  	<!-- 根据客户基本信息流水号查询用于显示的客户相关信息 -->
    <select id="getCustInfoByCustBaseInfoId" parameterType="java.util.Map" resultType="java.util.Map">
    		select 
    				A.CUST_BASE_INFO_ID "customerBaseInfoId",
			        A.CUSTOMER_NO  		"customer_no",
			        A.Chn_Name           		 "chinese_name",
			        A.Sex         				 		"sex",
			        A.Id_Type     					 "idtype",
			        A.Id_No        					"idno",
			        A.Age          						"age",
			        A.Cust_Level   				"custLevelName",
			        A.Cust_Obtain_Way 	"custObtainWay",
			        B.Cust_Type       			"custType",
			        B.Cust_Quality    			"custQuality"
			from t_cust_base_info A left join t_cust_oth_info B on (A.Cust_Base_Info_Id = B.Cust_Base_Info_Id 
			and a.agent_id = b.agent_id and B.Rc_State = 'E')
			where     A.Rc_State = 'E'
			                <include refid="customerBaseInfoCondition"/>
    </select>
    
     <!-- 根据客户基本信息流水号查询客户历史归属信息 -->
     <select id="getCustBelongInfoByCustBaseInfoId" parameterType="java.util.Map" resultType="java.util.Map">
    		SELECT 
							  A.Cust_Operation_Id   "custOperationId",
							  A.Agent_Id            "agentId",
							  (select B.Agent_Code
							   from t_agent B
							   where B.Agent_Id = A.Agent_Id and B.Rc_State = 'E') "agentCode",
							  (select B.Agent_Name
							   from t_agent B
							   where B.Agent_Id = A.Agent_Id and B.Rc_State = 'E') "agentName",
							  (select C.Store_Name
							   from  t_agent B left join  t_def_store C on (B.Store_Id = C.Store_Id and C.Rc_State = 'E')
							   where B.AGENT_ID = A.Agent_Id and B.Rc_State = 'E') "storeName",
							   (select D.Com_Name
							   from  t_agent B left join  t_def_com D on (B.Com_Id = D.Com_Id and D.Rc_State = 'E')
							   where B.AGENT_ID = A.Agent_Id and B.Rc_State = 'E') "comName",
							   date_format(A.Belong_Start_Date, '%Y-%m-%d') "belongStartDate",
							   date_format(A.Belong_End_Date,'%Y-%m-%d') "belongEndDate",
							  (Case 
							    WHEN A.Belong_End_Date is not null Then  DATEDIFF(A.Belong_End_Date,A.Belong_Start_Date) + 1
							    Else null
							    END
							    ) "serverDay",
							   (SELECT COUNT(1) 
					            FROM T_TRADE_INFO Q,T_TRADE_CUST_INFO P 
					            WHERE Q.TRADE_INFO_ID = P.TRADE_INFO_ID AND P.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID 
					              AND  Q.AGENT_ID = A.AGENT_ID AND Q.TRADE_STAUS IN('11','10','06') AND Q.RC_STATE = 'E' AND P.RC_STATE = 'E') "signNumber",
							   	date_format(A.ADJUST_DATE,'%Y-%m-%d %H:%i:%S')   "adjustDate",
							   A.Adjust_Cause                    "adjustCause",
							   (select E.USER_NAME
							    from t_def_user E
							    where E.User_Id = A.User_Id) "operator"
			FROM 	T_CUST_BELONG_OPERATION A
			where
							A.Rc_State = 'E'
			                <include refid="customerBaseInfoCondition"/>
    			
    </select>
    <!-- 根据客户基本信息查询客户历史归属信息 -->
    <select id="queryCustHistoryBelongInfo" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT 
							  A.Cust_Operation_Id   "custOperationId",
							  A.Agent_Id            "agentId",
							  (select B.Agent_Code
							   from t_agent B
							   where B.Agent_Id = A.Agent_Id and B.Rc_State = 'E') "agentCode",
							  (select B.Agent_Name
							   from t_agent B
							   where B.Agent_Id = A.Agent_Id and B.Rc_State = 'E') "agentName",
							  <!-- (select C.Store_Name
							   from  t_agent B left join  t_def_store C on (B.Store_Id = C.Store_Id and C.Rc_State = 'E')
							   where B.AGENT_ID = A.Agent_Id and B.Rc_State = 'E') "storeName", -->
							   (select D.Com_Name
							   from  t_agent B left join  t_def_com D on (B.Com_Id = D.Com_Id and D.Rc_State = 'E')
							   where B.AGENT_ID = A.Agent_Id and B.Rc_State = 'E') "comName",
							   date_format(A.Belong_Start_Date, '%Y-%m-%d') "belongStartDate",
							   date_format(A.Belong_End_Date,'%Y-%m-%d') "belongEndDate",
							  (Case 
							    WHEN A.Belong_End_Date is not null Then DATEDIFF(A.Belong_End_Date,A.Belong_Start_Date)+1
							    Else null
							    END
							    ) "serverDay",
							   (SELECT COUNT(1) 
					            FROM T_TRADE_INFO Q,T_TRADE_CUST_INFO P 
					            WHERE Q.TRADE_INFO_ID = P.TRADE_INFO_ID AND P.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID 
					              AND  Q.AGENT_ID = A.AGENT_ID AND Q.TRADE_STAUS IN('11','10','06') AND Q.RC_STATE = 'E' AND P.RC_STATE = 'E') "signNumber",
							   date_format(A.ADJUST_DATE,'%Y-%m-%d %H:%i:%S')   "adjustDate",
							   A.Adjust_Cause                    "adjustCause",
							   (select E.USER_NAME
							    from t_def_user E
							    where E.User_Id = A.User_Id) "operator"
			FROM 	T_CUST_BELONG_OPERATION A
			where
							A.Rc_State = 'E'
							<include refid="customerBaseInfoCondition"/>
			order by A.cust_operation_id desc				
			LIMIT #{startIndex} , #{endIndex} 			
    			
    </select>
    <!-- 根据客户基本信息查询客户历史归属信息总条数 -->
    <select id="queryCustHistoryBelongInfoNums" parameterType="java.util.Map" resultType="java.lang.Integer">
   		SELECT 
				COUNT(1)
		FROM 	T_CUST_BELONG_OPERATION A
		where
						A.Rc_State = 'E'
		                <include refid="customerBaseInfoCondition"/>
   	</select>
    <!-- 导出客户历史归属信息 -->
    <select id="exportCustBelongExcel" parameterType="java.util.Map" resultType="java.util.Map">
    	select
							            A.CUSTOMER_NO         "customerNo",
							            A.CHN_NAME            "chnName",
							            FUNC_GET_CODE_NAME('custLevel',A.CUST_LEVEL) "custLevel",
							            FUNC_GET_CODE_NAME('custObtainWay', A.CUST_OBTAIN_WAY) "custObtainWayName",
							            FUNC_GET_CODE_NAME('custQuality', B.CUST_QUALITY)      "custQuality",
							            FUNC_GET_CODE_NAME('customerType', B.CUST_TYPE)        "custType",
							            <!-- 当前财富顾问姓名 -->
							            (SELECT C.AGENT_NAME
							             FROM T_AGENT C
							             WHERE C.AGENT_ID = A.AGENT_ID and C.Rc_State = 'E') "agentName",
							             <!-- 当前财富顾问所属门店 -->
							            (SELECT D.STORE_NAME
							             FROM T_DEF_STORE D
							             WHERE D.STORE_ID = (
							                                    SELECT E.STORE_ID
							                                    FROM T_AGENT E
							                                    WHERE E.AGENT_ID = A.AGENT_ID AND E.RC_STATE = 'E'
							                                ))  "storeName",
							              <!-- 当前财富顾问所属机构姓名 -->
							            (SELECT F.COM_NAME
							             FROM T_DEF_COM F
							             WHERE F.COM_ID = (
							                                SELECT G.COM_ID
							                                FROM T_AGENT G
							                                WHERE (G.AGENT_ID = A.AGENT_ID AND G.RC_STATE = 'E')
							                              )) "comName",
							             <!-- 上任财富顾问姓名 -->              
							            (SELECT t.AGENT_NAME
													 FROM t_agent t where t.AGENT_ID =
													                  (SELECT m.agent_id
													                   FROM T_CUST_BELONG_OPERATION m
													                   WHERE  m.Cust_Base_Info_Id = A.Cust_Base_Info_Id AND M.RC_STATE = 'E' AND m.belong_end_date = 
													                                                      (SELECT Max(n.belong_end_date)
													                                                       FROM  T_CUST_BELONG_OPERATION n
													                                                       WHERE n.Cust_Base_Info_Id = A.Cust_Base_Info_Id AND n.RC_STATE = 'E' 
													                                                       )
													                    
													                  )
													                  AND t.RC_STATE = 'E' 
													              ) "agoAgentName",
							            <!-- 客户当前财富顾问归属起日 -->        
							            (SELECT date_format(z.belong_start_date, '%Y-%m-%d')
							             FROM t_cust_belong_operation z
							             WHERE z.cust_base_info_id = A.Cust_Base_Info_Id and z.belong_end_date is null and z.rc_state = 'E')  "custBelongStartDay",
							             <!-- 客户与当前财富顾问签单次数 -->
							             (SELECT COUNT(1) 
							              FROM T_TRADE_INFO Q,T_TRADE_CUST_INFO P 
							              WHERE Q.TRADE_INFO_ID = P.TRADE_INFO_ID AND P.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND  Q.AGENT_ID = A.AGENT_ID AND Q.TRADE_STAUS IN('11','10','06') AND Q.RC_STATE = 'E' AND P.RC_STATE = 'E')"signTimes"
							from t_cust_base_info A LEFT JOIN t_cust_oth_info B ON(B.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND B.RC_STATE = 'E')
							WHERE A.RC_STATE = 'E'
									<include refid="queryCustomerBelongCondition"/>
    </select>
    <!-- 客户归属功能结束 xtso -->
    
    <!-- 客户基本信息数据导出  -->
	<select id="getCustBaseInfoDetail" parameterType="java.util.Map"
		resultType="java.util.Map">
SELECT
a.CUSTOMER_NO "customerNo",
a.CHN_NAME "chnName",
FUNC_GET_CODE_NAME('sex',a.SEX) "sex",
FUNC_GET_CODE_NAME('custLevel',a.CUST_LEVEL) "custLevel",
FUNC_GET_CODE_NAME('customerType',(SELECT
 x.CUST_TYPE FROM t_cust_oth_info x 
 WHERE x.cust_base_info_id = a.CUST_BASE_INFO_ID AND x.rc_state = "E")) "custType",
FUNC_GET_CODE_NAME('custObtainWay',a.CUST_OBTAIN_WAY) "custObtainWay",
FUNC_GET_CODE_NAME('nationality',a.NATIVE_PLACE) "nativePlace",
FUNC_GET_CODE_NAME('idType',a.ID_TYPE) "idType",
a.ID_NO "idNo",
a.ID_VALIDITY_DATE "idValidityDate",
a.BIRTHDAY "birthday",
(
SELECT
x.MOBILE
FROM
t_cust_contact_info x
WHERE
x.CUST_BASE_INFO_ID = a.CUST_BASE_INFO_ID
AND x.RC_STATE = 'E'
) "mobile",
(
SELECT
x.EMAIL
FROM
t_cust_contact_info x
WHERE
x.CUST_BASE_INFO_ID = a.CUST_BASE_INFO_ID
AND x.RC_STATE = 'E'
) "email",
b.AGENT_NAME "agentName",
b.MOBILE "agentMobile",
(SELECT
x.COM_NAME
FROM
t_def_com x
WHERE
x.COM_ID = b.COM_ID) "departmenName",
(SELECT y.COM_NAME
FROM t_def_com y
WHERE y.COM_ID = b.COM_ID AND y.RC_STATE = 'E') "comName",
FUNC_GET_CODE_NAME('isGoldenStateopen',c.IS_GOLDEN_STATEOPEN) "isGoldenStateopen",
case WHEN A.CUST_LEVEL = '02' THEN 0
						ELSE (
					(
							(
								SELECT
									ROUND(
										IFNULL(SUM(v.subscriptionFee), 0),
										2
									)
								FROM
									t_cust_base_info x,
									t_trade_cust_info b,
									t_trade_info c,
									t_trade_product_info_view v,
									t_pd_product d,
									t_pd_wealth g
								WHERE
									x.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
								AND c.TRADE_INFO_ID = b.TRADE_INFO_ID
								AND c.TRADE_INFO_ID = v.TRADE_INFO_ID
								AND d.PRODUCT_ID = v.PRODUCT_ID
								AND d.PRODUCT_ID = g.product_id
								AND x.RC_STATE = 'E'
								AND b.RC_STATE = 'E'
								AND c.RC_STATE = 'E'
								AND d.RC_STATE = 'E'
								AND g.RC_STATE = 'E'
								AND x.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
								AND d.PRODUCT_SUB_TYPE IN ('01', '02')
								AND FUNC_FOUNDATE_CLOSED_ENDDATE (
									g.FOUND_DATE,
									IFNULL(
										(
											SELECT
												x.CLOSE_DPERIOD
											FROM
												t_pd_wealth_fee_rate x
											WHERE
												g.PD_WEALTH_ID = x.PD_WEALTH_ID
											AND v.beneficialType = x.BENEFICIAL_TYPE
											AND x.rc_state = "E"
										),
										g.CLOSE_DPERIODS
									),
									g.CLOSE_DPERIOD_UNIT
								) > CURDATE()
								AND CASE
								WHEN EXISTS (
									SELECT
										'X'
									FROM
										t_trade_funds_share_change x,
										t_cust_base_info y,
										t_trade_cust_info z,
										t_trade_info m
									WHERE
										y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
									AND z.TRADE_INFO_ID = m.TRADE_INFO_ID
									AND x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
									AND y.RC_STATE = 'E'
									AND z.RC_STATE = 'E'
									AND m.RC_STATE = 'E'
									AND y.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
								) THEN
									(
										c.trade_staus IN (
											'06',
											'10',
											'11',
											'12',
											'13',
											'14'
										)
									)
								ELSE
									(
										c.trade_staus IN ('06', '10', '13')
									)
								END
							) + (
								SELECT
									ROUND(
										IFNULL(
											SUM(
												(
													SELECT
														MAX(x.net_value)
													FROM
														t_pd_wealth_net_value x
													WHERE
														x.pd_wealth_id = g.pd_wealth_id
													AND x.rc_state = 'E'
													AND x.public_date = (
														SELECT
															max(y.public_date)
														FROM
															t_pd_wealth_net_value y
														WHERE
															y.pd_wealth_id = g.pd_wealth_id
														AND y.rc_state = 'E'
													)
												) * (
													SELECT
															SUM(z.SUBSCRIPTION_COPIES - FUNC_GET_ALL_REDEMPTION_SHARE (d.trade_info_id))
													FROM
														t_trade_status_info z
													WHERE
														z.trade_info_id = d.trade_info_id
													AND z.rc_state = 'E'
												)
											),
											0
										),
										2
									)
								FROM
									t_cust_base_info b,
									t_trade_cust_info c,
									t_trade_info d,
									t_trade_product_info_view e,
									t_pd_product f,
									t_pd_wealth g
								WHERE
									b.cust_base_info_id = c.cust_base_info_id
								AND c.trade_info_id = d.trade_info_id
								AND d.trade_info_id = e.TRADE_INFO_ID
								AND e.PRODUCT_ID = f.product_id
								AND f.product_id = g.product_id
								AND b.rc_state = 'E'
								AND c.RC_STATE = 'E'
								AND d.rc_state = 'E'
								AND f.RC_STATE = 'E'
								AND g.rc_state = 'E'
								AND f.product_sub_type IN ('03', '04')
								AND b.cust_base_info_id = A.CUST_BASE_INFO_ID
							)
						)
					)
						END 'remainScale'
FROM
t_cust_base_info a,
t_agent b,
t_cust_oth_info c
WHERE
a.AGENT_ID = b.AGENT_ID
AND a.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
<include refid="queryCustomerListCondition"/>
AND a.RC_STATE = 'E'
AND b.RC_STATE = 'E'
AND c.RC_STATE = 'E'
	</select>
	
<!-- 二期查询 -->
	<!-- 查询产品合同 -->
<select id="getProductContract"  parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
		CONCAT(FUNC_GET_CODE_NAME('serverAddress','01'),substring(f.FILE_SAVE_PATH, 10),f.FILE_NAME,'')'productContract',
		f.UPLOAD_FILE_NAME 'fileName'
		FROM t_def_file_info f
		WHERE f.BUSINESS_NO=#{productId} 
		AND f.BUSINESS_TYPE=01
		AND f.BUSINESS_SUB_TYPE=101
		AND f.RC_STATE='E'
</select>
	<!-- 获取产品推介材料 -->
<select id="getProductMaterial"  parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
		CONCAT(FUNC_GET_CODE_NAME('serverAddress','01'),substring(i.FILE_SAVE_PATH, 10),i.FILE_NAME,'')'productMaterial',
		i.UPLOAD_FILE_NAME 'fileName'
		 FROM t_def_file_info i
		WHERE 
		i.BUSINESS_NO=#{productId}
		AND i.BUSINESS_TYPE=01
		AND i.BUSINESS_SUB_TYPE=103
		AND i.RC_STATE='E'
</select>
	<!-- 获取产品报告 -->
<select id="getPproductReport"  parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
		CONCAT(FUNC_GET_CODE_NAME('serverAddress','01'),substring(e.FILE_SAVE_PATH, 10),e.FILE_NAME,'')'productReport',
		e.UPLOAD_FILE_NAME 'fileName'
		 FROM t_def_file_info e
		WHERE 
		e.BUSINESS_NO=#{productId}
		AND e.BUSINESS_TYPE=01
		AND e.BUSINESS_SUB_TYPE=104
		AND e.RC_STATE='E'
		ORDER BY e.UPLOAD_FILE_NAME DESC
</select>

	<!-- 定期产品列表-->  
    <select id="findAllFixedProduct" resultType="java.util.Map" >
		SELECT
			a.PRODUCT_ID 'productId',
			a.PRODUCT_NAME 'productName',
			CONCAT(round((
				SELECT
					b.START_INVEST_MONEY
				FROM
					t_pd_wealth b
				WHERE
					b.PRODUCT_ID = a.PRODUCT_ID
				AND b.RC_STATE = 'E'
			)/10000,2),'万') 'startInvestMoney',
		(
				SELECT
		         case b.CLOSE_DPERIOD_UNIT 
		          WHEN 'D' then CONCAT(b.CLOSE_DPERIODS,'天')
				      WHEN 'M' then CONCAT(b.CLOSE_DPERIODS,'月')
		          WHEN 'Y' then CONCAT(b.CLOSE_DPERIODS,'年')
		    END
				FROM
					t_pd_wealth b
				WHERE
					b.PRODUCT_ID = a.PRODUCT_ID
				AND b.RC_STATE = 'E'
			) 'closePeriod'
		FROM
			t_pd_product a,t_pd_wealth c
		WHERE
			a.RC_STATE = 'E' 
		AND a.PRODUCT_ID=c.PRODUCT_ID
		AND c.RC_STATE='E'
		AND c.RAISE_END_DATE>=NOW()
		AND NOW()>=c.RAISE_START_DATE
		AND a.PRODUCT_TYPE='1'
		AND a.PRODUCT_SUB_TYPE = '02'
    </select>
    
    <!-- 定期产品详情 -->
    <select id="getFixedProductDetail" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
			a.PRODUCT_NAME 'productName',
		(
				SELECT
		         case b.CLOSE_DPERIOD_UNIT 
		          WHEN 'D' then CONCAT(b.CLOSE_DPERIODS,'天')
				      WHEN 'M' then CONCAT(b.CLOSE_DPERIODS,'月')
		          WHEN 'Y' then CONCAT(b.CLOSE_DPERIODS,'年')
		    END
				FROM
					t_pd_wealth b
				WHERE
					b.PRODUCT_ID = a.PRODUCT_ID
				AND b.RC_STATE = 'E'
			) 'closePeriod',
		IFNULL(b.PRODUCT_FEATURE,'') 'productFeature',
		FUNC_GET_CODE_NAME('level',b.grade) 'grade',
		IFNULL(b.INVEST_SCOPE,'') 'investScope',
		CONCAT(DATE_FORMAT(b.RAISE_START_DATE,'%Y年%m月%d日'),'-',DATE_FORMAT(b.RAISE_END_DATE,'%Y年%m月%d日')) 'raisePeriod',
		IFNULL(b.risk_Control_Measure,'') 'riskControlMeasure',
		IFNULL(b.cooperation_Partner,'') 'cooperationPartner',
		IFNULL(b.raise_Account,'') 'raiseAccount',
		IFNULL(b.trusteeship_Account,'') 'trusteeshipAccount',
		 IFNULL(a.PRODUCT_MANAGER,'') 'productManager' 
		FROM
			t_pd_product a,
			t_pd_wealth b
		WHERE
			a.rc_state = 'E'
		and a.PRODUCT_ID=b.PRODUCT_ID
		and b.RC_STATE='E'
		and a.PRODUCT_ID=#{productId}
	</select>
		<!--股权产品列表 -->  
    <select id="findAllStockProduct" resultType="java.util.Map" >
		SELECT
			a.PRODUCT_ID 'productId',
			a.PRODUCT_NAME 'productName',
			CONCAT(round((
				SELECT
					b.START_INVEST_MONEY
				FROM
					t_pd_wealth b
				WHERE
					b.PRODUCT_ID = a.PRODUCT_ID
				AND b.RC_STATE = 'E'
			)/10000,2),'万') 'startInvestMoney',
		(
				SELECT
		         case b.CLOSE_DPERIOD_UNIT 
		          WHEN 'D' then CONCAT(b.CLOSE_DPERIODS,'天')
				      WHEN 'M' then CONCAT(b.CLOSE_DPERIODS,'月')
		          WHEN 'Y' then CONCAT(b.CLOSE_DPERIODS,'年')
		    END
				FROM
					t_pd_wealth b
				WHERE
					b.PRODUCT_ID = a.PRODUCT_ID
				AND b.RC_STATE = 'E'
			) 'closePeriod'
		FROM
			t_pd_product a,t_pd_wealth c
		WHERE
			a.RC_STATE = 'E' 
		AND a.PRODUCT_ID=c.PRODUCT_ID
		AND c.RC_STATE='E'
		AND c.RAISE_END_DATE>CURDATE()
		AND CURDATE()>c.RAISE_START_DATE
		AND a.PRODUCT_TYPE='1'
		AND a.PRODUCT_SUB_TYPE = '01'
    </select>
	   <!-- 股权产品详情 -->
    <select id="getStockProductDetail" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
			a.PRODUCT_NAME 'productName',
		(
				SELECT
		         case b.CLOSE_DPERIOD_UNIT 
		          WHEN 'D' then CONCAT(b.CLOSE_DPERIODS,'天')
				      WHEN 'M' then CONCAT(b.CLOSE_DPERIODS,'月')
		          WHEN 'Y' then CONCAT(b.CLOSE_DPERIODS,'年')
		    END
				FROM
					t_pd_wealth b
				WHERE
					b.PRODUCT_ID = a.PRODUCT_ID
				AND b.RC_STATE = 'E'
			) 'closePeriod',
		IFNULL(b.PRODUCT_FEATURE,'') 'productFeature',
		FUNC_GET_CODE_NAME('level',b.grade) 'grade',
		IFNULL(b.INVEST_DIRECTION,'') 'investDirection',
		CONCAT(DATE_FORMAT(b.RAISE_START_DATE,'%Y年%m月%d日'),'-',DATE_FORMAT(b.RAISE_END_DATE,'%Y年%m月%d日')) 'raisePeriod',
		IFNULL(b.risk_Control_Measure,'') 'riskControlMeasure',
		IFNULL(b.cooperation_Partner,'') 'cooperationPartner',
		IFNULL(b.raise_Account,'') 'raiseAccount',
		IFNULL(b.trusteeship_Account,'') 'trusteeshipAccount',
		 IFNULL(a.PRODUCT_MANAGER,'') 'productManager' 
		FROM
			t_pd_product a,
			t_pd_wealth b
		WHERE
			a.rc_state = 'E'
		and a.PRODUCT_ID=b.PRODUCT_ID
		and b.RC_STATE='E'
		and a.PRODUCT_ID=#{productId}
	</select>
	
	<!--  号码是否存在 -->
    <select id="isOldCustomerCount1" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT
			COUNT(1)
		FROM
			t_agent t
		WHERE
			t.RC_STATE = 'E'
		AND t.MOBILE = #{mobile}
	</select>
	<!-- isOldCustomer2顾问 -->
    <select id="isOldCustomerCount2" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT
			COUNT(1)
		FROM
			t_cust_contact_info a,
			t_cust_base_info b
		WHERE
			a.RC_STATE = 'E' 
		AND  a.CUST_BASE_INFO_ID=b.CUST_BASE_INFO_ID
		AND b.RC_STATE='E'
		AND a.MOBILE = #{mobile}
	</select>

	<!-- 查询浮动产品列表 -->
	<select id="findFloatProductList" resultType="java.util.Map">
		SELECT  
			A.PRODUCT_ID 'productId',
			A.PRODUCT_NAME 'productName',
			CONCAT(ROUND(B.NET_VALUE ,4),'','') 'netValue',
			IFNULL(CONCAT(format(C.START_INVEST_MONEY/10000,2),'','万'),'') 'startInvestMoney',
			IFNULL(CONCAT(format(C.INVEST_INCREASE_MONEY/10000,2),'','万'),'') 'investIncreaseMoney',
			CASE WHEN a.PRODUCT_NAME LIKE '%淡水泉%'
			THEN (		CASE WHEN b.PUBLIC_DATE = d.OPEN_DATE
						THEN '最新净值' ELSE '最近预估净值' END	)
			ELSE '最新净值' END "netValueType"
		FROM t_pd_product A ,
				 t_pd_wealth_net_value B,
				 t_pd_wealth C,
				 t_pd_wealth_open_date D
		WHERE A.PRODUCT_ID = C.PRODUCT_ID
		AND  B.PD_WEALTH_ID = C.PD_WEALTH_ID
		AND  D.PD_WEALTH_ID = C.PD_WEALTH_ID
		AND  D.INVEST_END_DATE>CURDATE()
		AND  CURDATE()>D.INVEST_START_DATE
		AND  B.PUBLIC_DATE =(SELECT MAX(PUBLIC_DATE) 
			FROM t_pd_wealth_net_value  
			WHERE PD_WEALTH_ID=B.PD_WEALTH_ID
			AND RC_STATE='E') 
		AND  A.PRODUCT_SUB_TYPE='03'
		AND  A.PRODUCT_TYPE='1'
		AND  A.RC_STATE='E'
		AND  B.RC_STATE='E'
		AND  C.RC_STATE='E'
		AND  D.RC_STATE='E'
	</select>
	<!-- 查询浮动详情 -->
	<select id="findFloatProductDetails" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
A.PRODUCT_NAME 'productName',
IFNULL((SELECT
         case b.CLOSE_DPERIOD_UNIT 
          WHEN 'D' then CONCAT(b.CLOSE_DPERIODS,'天')
		      WHEN 'M' then CONCAT(b.CLOSE_DPERIODS,'月')
          WHEN 'Y' then CONCAT(b.CLOSE_DPERIODS,'年')
    END
		FROM
			t_pd_wealth b
		WHERE
			b.PRODUCT_ID = a.PRODUCT_ID
		AND b.RC_STATE = 'E'),'')'closePeriod',
IFNULL(B.PRODUCT_FEATURE,'') 'productFeature',
FUNC_GET_CODE_NAME('level',b.grade) 'grade',
IFNULL(B.INVEST_STRATEGY ,'')'investStrategy',
CONCAT(DATE_FORMAT(B.RAISE_START_DATE,'%Y年%m月%d日'),'-',DATE_FORMAT(B.RAISE_END_DATE,'%Y年%m月%d日')) 'raisePeriod',
IFNULL(B.RISK_CONTROL_MEASURE,'') 'riskControlMeasure',
IFNULL(B.COOPERATION_PARTNER,'') 'cooperationPartner',
IFNULL(B.RAISE_ACCOUNT ,'')'raiseAccount',
IFNULL(B.TRUSTEESHIP_ACCOUNT,'') 'trusteeshipAccount',
IFNULL(A.PRODUCT_MANAGER,'') 'productManager',
IFNULL(FUNC_GET_OPENDAY_RULES(b.EXPECT_OPEN_DAY_RULES),'') 'openDaysRules',
IFNULL((SELECT
         case b.CLOSE_DPERIOD_UNIT 
          WHEN 'D' then CONCAT(b.CLOSE_DPERIODS,'天')
		      WHEN 'M' then CONCAT(b.CLOSE_DPERIODS,'月')
          WHEN 'Y' then CONCAT(b.CLOSE_DPERIODS,'年')
    END
		FROM
			t_pd_wealth b
		WHERE
			b.PRODUCT_ID = a.PRODUCT_ID
		AND b.RC_STATE = 'E'),'') 'closePeriods'
FROM
	t_pd_product A,
	t_pd_wealth B 
WHERE A.PRODUCT_ID = B.PRODUCT_ID
  AND A.PRODUCT_SUB_TYPE='03'
	AND A.PRODUCT_TYPE='1'
	AND A.RC_STATE='E'
	AND B.RC_STATE='E'
	AND A.PRODUCT_ID=#{productId}

			
	</select>
	<select id="findOverseasProductList" resultType="java.util.Map">
			SELECT  
			A.PRODUCT_ID 'productId',
			A.PRODUCT_NAME 'productName',
			CONCAT(ROUND(B.NET_VALUE ,4),'','') 'netValue',
			IFNULL(CONCAT(format(C.START_INVEST_MONEY/10000,2),'','万'),'') 'startInvestMoney',
			IFNULL(CONCAT(format(C.INVEST_INCREASE_MONEY/10000,2),'','万'),'') 'investIncreaseMoney'
		FROM t_pd_product A ,
				 t_pd_wealth_net_value B,
				 t_pd_wealth C,
				 t_pd_wealth_open_date D
		WHERE A.PRODUCT_ID = C.PRODUCT_ID
		AND  B.PD_WEALTH_ID = C.PD_WEALTH_ID
		AND  D.PD_WEALTH_ID = C.PD_WEALTH_ID
		AND  D.INVEST_END_DATE>CURDATE()
		AND  CURDATE()>D.INVEST_START_DATE
		AND  B.PUBLIC_DATE =(SELECT MAX(PUBLIC_DATE) 
			FROM t_pd_wealth_net_value  
			WHERE PD_WEALTH_ID=B.PD_WEALTH_ID
			AND RC_STATE='E') 
		AND  A.PRODUCT_SUB_TYPE='04'
		AND  A.PRODUCT_TYPE='1'
		AND  A.RC_STATE='E'
		AND  B.RC_STATE='E'
		AND  C.RC_STATE='E'
		AND  D.RC_STATE='E'
	</select>
	
	<select id="findOverseasProductDetails" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT 
A.PRODUCT_NAME 'productName',
IFNULL((SELECT
         case b.CLOSE_DPERIOD_UNIT 
          WHEN 'D' then CONCAT(b.CLOSE_DPERIODS,'天')
		      WHEN 'M' then CONCAT(b.CLOSE_DPERIODS,'月')
          WHEN 'Y' then CONCAT(b.CLOSE_DPERIODS,'年')
    END
		FROM
			t_pd_wealth b
		WHERE
			b.PRODUCT_ID = a.PRODUCT_ID
		AND b.RC_STATE = 'E'),'')'closePeriod',
IFNULL(B.PRODUCT_FEATURE,'') 'productFeature',
FUNC_GET_CODE_NAME('level',b.grade) 'grade',
IFNULL(B.INVEST_STRATEGY ,'')'investStrategy',
CONCAT(DATE_FORMAT(B.RAISE_START_DATE,'%Y年%m月%d日'),'-',DATE_FORMAT(B.RAISE_END_DATE,'%Y年%m月%d日')) 'raisePeriod',
IFNULL(B.RISK_CONTROL_MEASURE,'') 'riskControlMeasure',
IFNULL(B.COOPERATION_PARTNER,'') 'cooperationPartner',
IFNULL(B.RAISE_ACCOUNT ,'')'raiseAccount',
IFNULL(B.TRUSTEESHIP_ACCOUNT,'') 'trusteeshipAccount',
IFNULL(A.PRODUCT_MANAGER,'') 'productManager',
IFNULL(FUNC_GET_OPENDAY_RULES(b.EXPECT_OPEN_DAY_RULES),'') 'openDaysRules',
IFNULL((SELECT
         case b.CLOSE_DPERIOD_UNIT 
          WHEN 'D' then CONCAT(b.CLOSE_DPERIODS,'天')
		      WHEN 'M' then CONCAT(b.CLOSE_DPERIODS,'月')
          WHEN 'Y' then CONCAT(b.CLOSE_DPERIODS,'年')
    END
		FROM
			t_pd_wealth b
		WHERE
			b.PRODUCT_ID = a.PRODUCT_ID
		AND b.RC_STATE = 'E'),'') 'closePeriods'
FROM
	t_pd_product A,
	t_pd_wealth B 
WHERE A.PRODUCT_ID = B.PRODUCT_ID
  AND A.PRODUCT_SUB_TYPE='04'
	AND A.PRODUCT_TYPE='1'
	AND A.RC_STATE='E'
	AND B.RC_STATE='E'
	AND A.PRODUCT_ID=#{productId}
	
	</select>
<!-- 根据登录信息查询理财经理信息 -->
    <select id="wechatLoginForAgent" parameterType="java.util.Map" resultType="java.util.Map">
			  SELECT 
				a.AGENT_ID "agentId",
				2 "loginType",
				IFNULL((
				SELECT
				x.CUSTOMER_NO
				FROM
				t_cust_base_info x,
				t_cust_contact_info y
				WHERE 
				x.CUST_BASE_INFO_ID = y.CUST_BASE_INFO_ID
				AND x.RC_STATE = 'E'
				AND y.RC_STATE = 'E'
				AND x.CHN_NAME=#{customerName}
				AND x.ID_NO=#{idNo}
				AND y.MOBILE=#{mobile}
				),"") "customerNo"
				FROM 
				t_agent a
				WHERE a.RC_STATE = 'E'
				AND a.AGENT_NAME=#{customerName}
				AND a.IDNO=#{idNo}
				AND a.MOBILE=#{mobile}
    </select>
	<!-- 根据登录信息查询理财经理信息 -->
    <select id="findAllCustomer" parameterType="java.util.Map" resultType="java.util.Map">
			 SELECT
				a.CUSTOMER_NO "customerNo",
				a.CHN_NAME "custName"
				FROM
				t_cust_base_info a
				WHERE
				a.AGENT_ID = #{agentId}
				<if test="custName != null and custName !=''" >
		      		AND A.CHN_NAME LIKE '%${custName}%'
		    	</if>
				AND a.RC_STATE = 'E'
    </select>
    
    <!-- 获取客户基本信息 -->
    <select id="queryCustBaseInfo" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT
				a.CHN_NAME "custName",
				a.BIRTHDAY "birthday",
				a.ID_NO "idNo",
				b.MOBILE "mobile",
				b.EMAIL "email",
				FUNC_GET_CODE_NAME('custRiskLevel',c.CUST_RISK_LEVEL) "riskLevel"
				
				FROM
				t_cust_base_info a,
				t_cust_contact_info b,
				t_cust_questionnaire_info c
				WHERE 
				a.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
				AND c.CUST_BASE_INFO_ID = a.CUST_BASE_INFO_ID
				AND a.CUSTOMER_NO = #{customerNo}
				AND a.RC_STATE = 'E'
				AND b.RC_STATE = 'E'
				AND c.RC_STATE = 'E'
    </select>
    
    <!-- 查询个人账户信息 -->
    <select id="queryPersonalInfo" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT
				a.CHN_NAME "chnName",
				a.ID_NO "idNo",
				b.MOBILE "mobile",
				b.EMAIL "email",
				IFNULL((SELECT
					FUNC_GET_CODE_NAME('custRiskLevel',x.CUST_RISK_LEVEL)
					FROM t_cust_questionnaire_info x
					WHERE x.CUST_BASE_INFO_ID = a.CUST_BASE_INFO_ID 
					AND x.RC_STATE = 'E'),'') "riskLevel",
				d.AGENT_NAME "agentName",
				d.MOBILE "agentMobile",
				IFNULL(d.SELF_INTRODUCTION,'') "agentSelfIntroduction",
				CASE WHEN a.ID_NO = d.IDNO AND a.CHN_NAME = d.AGENT_NAME 
				THEN d.AGENT_ID ELSE 0 END 'agentId',
				d.AGENT_ID 'custAgentId'
				FROM
				t_cust_base_info a,
				t_cust_contact_info b,
				t_agent d
				WHERE 
				a.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
				AND a.AGENT_ID = D.AGENT_ID
				AND a.CUSTOMER_NO = #{customerNo}
				AND a.RC_STATE = 'E'
				AND b.RC_STATE = 'E'
				AND d.RC_STATE = 'E'
    </select>
    
    <!-- 客户股权产品投资金额 -->
    <select id="getStockAsset" parameterType="java.util.Map" resultType="java.util.Map">
			    SELECT
				FORMAT(IFNULL((SUM(a.TRADE_TOTAL_ASSETS)),0),2) 'investTotal'
				FROM
				t_trade_info a,
				t_cust_base_info b,
				t_trade_cust_info c,
				t_pd_product d,
				t_trade_product_info_view e,
				t_pd_wealth f
				WHERE
				1 = 1
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND a.TRADE_INFO_ID = c.TRADE_INFO_ID
				AND a.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND d.PRODUCT_ID = f.PRODUCT_ID
				AND case when
				EXISTS(SELECT 'X'
				from t_trade_funds_share_change x,
				t_cust_base_info y,
				t_trade_cust_info z,
				t_trade_info m
				WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
				and z.TRADE_INFO_ID = m.TRADE_INFO_ID
				and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
				and y.RC_STATE = 'E'
				and z.RC_STATE = 'E'
				and m.RC_STATE = 'E'
				and y.CUSTOMER_NO = #{customerNo})
				then (a.trade_staus IN ('06', '10', '11','12','13','14'))
				ELSE (a.trade_staus IN ('06', '10','13')) END
				AND b.CUSTOMER_NO = #{customerNo}
				AND d.PRODUCT_TYPE = 1
				AND d.PRODUCT_SUB_TYPE = '01'
				AND (
					CASE WHEN
					(SELECT
					x.TRANSFER_ALL 
					FROM t_trade_funds_share_change x
					WHERE x.ORIGIN_TRADE_INFO_ID = a.TRADE_INFO_ID
					AND x.RC_STATE = 'E') = '02'
					THEN
					(SELECT
					x.VALUE_DATE
					FROM t_trade_funds_share_change x
					WHERE x.ORIGIN_TRADE_INFO_ID = a.TRADE_INFO_ID
					AND x.RC_STATE = 'E')
					ELSE
					FUNC_FOUNDATE_CLOSED_ENDDATE (		f.FOUND_DATE,
														f.CLOSE_DPERIODS,
														f.CLOSE_DPERIOD_UNIT )
					END
				)> CURDATE()
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND f.RC_STATE = 'e'
    </select>
    
    <!-- 客户股权产品预估金额 -->
    <select id="getStockForecastAsset" parameterType="java.util.Map" resultType="java.util.Map">
    		SELECT
				FORMAT(IFNULL((SUM(a.TRADE_TOTAL_ASSETS)),0),2) 'forecastAsset'
				FROM
				t_trade_info a,
				t_cust_base_info b,
				t_trade_cust_info c,
				t_pd_product d,
				t_trade_product_info_view e,
				t_pd_wealth f
				WHERE
				1 = 1
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND a.TRADE_INFO_ID = c.TRADE_INFO_ID
				AND a.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND d.PRODUCT_ID = f.PRODUCT_ID
				AND case when
				EXISTS(SELECT 'X'
				from t_trade_funds_share_change x,
				t_cust_base_info y,
				t_trade_cust_info z,
				t_trade_info m
				WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
				and z.TRADE_INFO_ID = m.TRADE_INFO_ID
				and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
				and y.RC_STATE = 'E'
				and z.RC_STATE = 'E'
				and m.RC_STATE = 'E'
				and y.CUSTOMER_NO = #{customerNo})
				then (a.trade_staus IN ('06', '10', '11','12','13','14'))
				ELSE (a.trade_staus IN ('06', '10','13')) END
				AND b.CUSTOMER_NO = #{customerNo}
				AND d.PRODUCT_TYPE = 1
				AND d.PRODUCT_SUB_TYPE = '01'
				AND (
					CASE WHEN
					(SELECT
					x.TRANSFER_ALL 
					FROM t_trade_funds_share_change x
					WHERE x.ORIGIN_TRADE_INFO_ID = a.TRADE_INFO_ID
					AND x.RC_STATE = 'E') = '02'
					THEN
					(SELECT
					x.VALUE_DATE
					FROM t_trade_funds_share_change x
					WHERE x.ORIGIN_TRADE_INFO_ID = a.TRADE_INFO_ID
					AND x.RC_STATE = 'E')
					ELSE
					FUNC_FOUNDATE_CLOSED_ENDDATE (		f.FOUND_DATE,
														f.CLOSE_DPERIODS,
														f.CLOSE_DPERIOD_UNIT )
					END
				)> CURDATE()
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND f.RC_STATE = 'e'
    </select>
    <!-- 持有股权产品 -->
	<select id="getStockProduct" parameterType="java.util.Map" resultType="java.util.Map">
				SELECT DISTINCT
					  d.PRODUCT_ID 'productId',
					  d.PRODUCT_NAME 'productName'
				 FROM 
				 	  t_cust_base_info a,
			          t_trade_info b,
				      t_trade_cust_info c,
				      t_pd_product d,
					  t_pd_wealth e,
				      t_trade_product_info_view v
				WHERE
				    a.CUST_BASE_INFO_ID=c.CUST_BASE_INFO_ID
				AND b.TRADE_INFO_ID=c.TRADE_INFO_ID
				AND b.TRADE_INFO_ID=v.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND d.PRODUCT_ID=v.PRODUCT_ID
				AND a.CUSTOMER_NO= #{customerNo}
				AND d.PRODUCT_TYPE=1
				AND d.PRODUCT_SUB_TYPE=01
				AND case when
					EXISTS(SELECT 'X'
					from t_trade_funds_share_change x,
					t_cust_base_info y,
					t_trade_cust_info z,
					t_trade_info m
					WHERE y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
					and z.TRADE_INFO_ID = m.TRADE_INFO_ID
					and x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
					and y.RC_STATE = 'E'
					and z.RC_STATE = 'E'
					and m.RC_STATE = 'E'
					and y.CUSTOMER_NO = #{customerNo})
					then (b.trade_staus IN ('06', '10', '11','12','13','14'))
					ELSE (b.trade_staus IN ('06', '10','13')) END
									AND a.RC_STATE = 'e'
									AND b.RC_STATE = 'e'
									AND c.RC_STATE = 'e'
									AND d.RC_STATE = 'e'
									AND e.RC_STATE = 'e'
					AND (
							CASE WHEN
							(SELECT
							x.TRANSFER_ALL 
							FROM t_trade_funds_share_change x
							WHERE x.ORIGIN_TRADE_INFO_ID = b.TRADE_INFO_ID
							AND x.RC_STATE = 'E') = '02'
							THEN
							(SELECT
							x.VALUE_DATE
							FROM t_trade_funds_share_change x
							WHERE x.ORIGIN_TRADE_INFO_ID = b.TRADE_INFO_ID
							AND x.RC_STATE = 'E')
							ELSE
							FUNC_FOUNDATE_CLOSED_ENDDATE (
									e.FOUND_DATE,
									e.CLOSE_DPERIODS,
									e.CLOSE_DPERIOD_UNIT
								)
							END
					)> CURDATE()
	</select>
	
	<!-- 客户浮动产品投资金额 -->
    <select id="getFloatAsset" parameterType="java.util.Map" resultType="java.util.Map">
			     SELECT
						FORMAT(IFNULL((SELECT
						SUM(a.TRADE_TOTAL_ASSETS)
						FROM
						t_trade_info a,
						t_cust_base_info b,
						t_trade_cust_info c,
						t_pd_product d,
						t_trade_product_info_view v
						WHERE
						a.TRADE_INFO_ID = c.TRADE_INFO_ID
						AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
						AND d.PRODUCT_ID = v.PRODUCT_ID
						AND a.TRADE_INFO_ID = v.TRADE_INFO_ID
						AND b.CUSTOMER_NO = #{customerNo}
						AND d.PRODUCT_TYPE = "1"
						AND d.PRODUCT_SUB_TYPE = '03'
						AND a.CURRENCY = 'CNY'
						AND a.trade_staus = '10'
						AND a.RC_STATE = "E" 
						AND b.RC_STATE = "E" 
						AND c.RC_STATE = "E" 
						AND d.RC_STATE = "E" 
						
						) 
						-(
						CASE
						WHEN x.REMAINING_TOTAL_SHARE = 0
						THEN SUM(IFNULL(e.subscriptionFee,0))
						ELSE
						0
						END
						)
						,0),2) "investTotal"
				FROM
					t_trade_info a,
					t_cust_base_info b,
					t_trade_cust_info c,
					t_pd_product d,
					t_trade_product_info_view e,
					t_redemption_info x,
					t_redemption_trade_info y

				WHERE
					a.trade_staus = '10'
				AND b.CUSTOMER_NO = #{customerNo}
				AND d.PRODUCT_SUB_TYPE = '03'
				AND a.CURRENCY = 'CNY'
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND a.TRADE_INFO_ID = c.TRADE_INFO_ID
				AND a.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND x.REDEMPTION_INFO_ID = y.REDEMPTION_INFO_ID
				AND y.TRADE_INFO_ID = a.TRADE_INFO_ID
				AND x.REDEMPTION_STATUS = "04"
				AND x.REMAINING_TOTAL_SHARE = 0
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND x.RC_STATE = 'e'
				AND y.RC_STATE = 'e'
    </select>
    
    <!-- 客户浮动产品预估资产 -->
    <select id="getFloatForecastAsset" parameterType="java.util.Map" resultType="java.util.Map">
     SELECT
				FORMAT(IFNULL(SUM(h.net_value*(f.subscription_copies - FUNC_GET_ALL_REDEMPTION_SHARE (A.TRADE_INFO_ID))),0),2) 'forecastAsset'
				FROM
					t_trade_info a,
					t_trade_cust_info b,
					t_cust_base_info c,
					t_trade_product_info_view d,
					t_pd_product e,
					t_trade_status_info f,
					t_pd_wealth g,
					t_pd_wealth_net_value h
				WHERE
					1 = 1
				AND g.product_id = e.product_id
				AND h.pd_wealth_id = g.pd_wealth_id
				AND f.trade_info_id = a.trade_info_id
				AND a.TRADE_INFO_ID = b.TRADE_INFO_ID
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND e.PRODUCT_TYPE = '1'
				AND e.PRODUCT_SUB_TYPE = '03'
				AND c.CUSTOMER_NO = #{customerNo}
				AND h.public_date = (
					SELECT
						max(a.public_date)
					FROM
						t_pd_wealth_net_value a
					WHERE
						a.pd_wealth_id = g.pd_wealth_id
					AND a.rc_state = 'E'
				)
				AND a.RC_STATE = 'E'
				AND b.RC_STATE = 'E'
				AND c.RC_STATE = 'E'
				AND e.RC_STATE = 'E'
				AND f.RC_STATE = 'E'
				AND g.RC_STATE = 'E'
				AND h.RC_STATE = 'E'
				AND a.TRADE_STAUS = '10'
				AND A.CURRENCY='CNY'
    </select>
    
    <!-- 查询海外产品投资金额CNY -->
    <select id="getOverseasAssetCNY" parameterType="java.util.Map" resultType="java.util.Map">
			     SELECT
					FORMAT(IFNULL((SELECT
					SUM(a.TRADE_TOTAL_ASSETS)
					FROM
					t_trade_info a,
					t_cust_base_info b,
					t_trade_cust_info c,
					t_pd_product d,
					t_trade_product_info_view v
					WHERE
					a.TRADE_INFO_ID = c.TRADE_INFO_ID
					AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
					AND d.PRODUCT_ID = v.PRODUCT_ID
					AND a.TRADE_INFO_ID = v.TRADE_INFO_ID
					AND b.CUSTOMER_NO = #{customerNo}
					AND d.PRODUCT_TYPE = "1"
					AND d.PRODUCT_SUB_TYPE = '04'
					AND a.CURRENCY = 'CNY'
					AND a.trade_staus = '10'
					AND a.RC_STATE = "E" 
					AND b.RC_STATE = "E" 
					AND c.RC_STATE = "E" 
					AND d.RC_STATE = "E" 
					
					) 
					-(
					CASE
					WHEN x.REMAINING_TOTAL_SHARE = 0
					THEN SUM(IFNULL(e.subscriptionFee,0))
					ELSE
					0
					END
					)
					,0),2) "investTotal",
					FUNC_GET_CODE_NAME ('currency', 'CNY') 'currency'
									FROM
										t_trade_info a,
										t_cust_base_info b,
										t_trade_cust_info c,
										t_pd_product d,
										t_trade_product_info_view e,
					t_redemption_info x,
					t_redemption_trade_info y

				WHERE
					a.trade_staus = '10'
				AND b.CUSTOMER_NO = #{customerNo}
				AND d.PRODUCT_SUB_TYPE = '04'
				AND a.CURRENCY = 'CNY'
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND a.TRADE_INFO_ID = c.TRADE_INFO_ID
				AND a.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND x.REDEMPTION_INFO_ID = y.REDEMPTION_INFO_ID
				AND y.TRADE_INFO_ID = a.TRADE_INFO_ID
				AND x.REDEMPTION_STATUS = "04"
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND x.RC_STATE = 'e'
				AND y.RC_STATE = 'e'
    </select>
    
      <!-- 查询海外产品投资金额USD -->
    <select id="getOverseasAssetUSD" parameterType="java.util.Map" resultType="java.util.Map">
			     SELECT
					FORMAT(IFNULL((SELECT
					SUM(a.TRADE_TOTAL_ASSETS)
					FROM
					t_trade_info a,
					t_cust_base_info b,
					t_trade_cust_info c,
					t_pd_product d,
					t_trade_product_info_view v
					WHERE
					a.TRADE_INFO_ID = c.TRADE_INFO_ID
					AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
					AND d.PRODUCT_ID = v.PRODUCT_ID
					AND a.TRADE_INFO_ID = v.TRADE_INFO_ID
					AND b.CUSTOMER_NO = #{customerNo}
					AND d.PRODUCT_TYPE = "1"
					AND d.PRODUCT_SUB_TYPE = '04'
					AND a.CURRENCY = 'USD'
					AND a.trade_staus = '10'
					AND a.RC_STATE = "E" 
					AND b.RC_STATE = "E" 
					AND c.RC_STATE = "E" 
					AND d.RC_STATE = "E" 
					) 
					-(
					CASE
					WHEN x.REMAINING_TOTAL_SHARE = 0
					THEN SUM(IFNULL(e.subscriptionFee,0))
					ELSE
					0
					END
					)
					,0),2) "investTotal",
					FUNC_GET_CODE_NAME ('currency', 'USD') 'currency'
									FROM
										t_trade_info a,
										t_cust_base_info b,
										t_trade_cust_info c,
										t_pd_product d,
										t_trade_product_info_view e,
					t_redemption_info x,
					t_redemption_trade_info y

				WHERE
					a.trade_staus = '10'
				AND b.CUSTOMER_NO = #{customerNo}
				AND d.PRODUCT_SUB_TYPE = '04'
				AND a.CURRENCY = 'USD'
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND a.TRADE_INFO_ID = c.TRADE_INFO_ID
				AND a.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND x.REDEMPTION_INFO_ID = y.REDEMPTION_INFO_ID
				AND y.TRADE_INFO_ID = a.TRADE_INFO_ID
				AND x.REDEMPTION_STATUS = "04"
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND x.RC_STATE = 'e'
				AND y.RC_STATE = 'e'
    </select>
    
    <!-- 客户海外产品预估资产CNY -->
    <select id="getOverseasForecastCNY" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
				FORMAT(IFNULL(SUM(h.net_value*(f.subscription_copies - FUNC_GET_ALL_REDEMPTION_SHARE (A.TRADE_INFO_ID))),0),2) 'amount',
				FUNC_GET_CODE_NAME ('currency', 'CNY') 'currency'
				FROM
					t_trade_info a,
					t_trade_cust_info b,
					t_cust_base_info c,
					t_trade_product_info_view d,
					t_pd_product e,
					t_trade_status_info f,
					t_pd_wealth g,
					t_pd_wealth_net_value h
				WHERE
					1 = 1
				AND g.product_id = e.product_id
				AND h.pd_wealth_id = g.pd_wealth_id
				AND f.trade_info_id = a.trade_info_id
				AND a.TRADE_INFO_ID = b.TRADE_INFO_ID
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND e.PRODUCT_TYPE = '1'
				AND e.PRODUCT_SUB_TYPE = '04'
				AND c.CUSTOMER_NO = #{customerNo}
				AND h.public_date = (
					SELECT
						max(a.public_date)
					FROM
						t_pd_wealth_net_value a
					WHERE
						a.pd_wealth_id = g.pd_wealth_id
					AND a.rc_state = 'E'
				)
				AND a.RC_STATE = 'E'
				AND b.RC_STATE = 'E'
				AND c.RC_STATE = 'E'
				AND e.RC_STATE = 'E'
				AND f.RC_STATE = 'E'
				AND g.RC_STATE = 'E'
				AND h.RC_STATE = 'E'
				AND a.TRADE_STAUS = '10'
				AND A.CURRENCY='CNY'
    </select>
    
     <!-- 客户海外产品预估资产USD -->
    <select id="getOverseasForecastUSD" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
				FORMAT(IFNULL(SUM(h.net_value*(f.subscription_copies - FUNC_GET_ALL_REDEMPTION_SHARE (A.TRADE_INFO_ID))),0),2) 'amount',
				FUNC_GET_CODE_NAME ('currency', 'USD') 'currency'
				FROM
					t_trade_info a,
					t_trade_cust_info b,
					t_cust_base_info c,
					t_trade_product_info_view d,
					t_pd_product e,
					t_trade_status_info f,
					t_pd_wealth g,
					t_pd_wealth_net_value h
				WHERE
					1 = 1
				AND g.product_id = e.product_id
				AND h.pd_wealth_id = g.pd_wealth_id
				AND f.trade_info_id = a.trade_info_id
				AND a.TRADE_INFO_ID = b.TRADE_INFO_ID
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND b.TRADE_INFO_ID = d.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND e.PRODUCT_TYPE = '1'
				AND e.PRODUCT_SUB_TYPE = '04'
				AND c.CUSTOMER_NO = #{customerNo}
				AND h.public_date = (
					SELECT
						max(a.public_date)
					FROM
						t_pd_wealth_net_value a
					WHERE
						a.pd_wealth_id = g.pd_wealth_id
					AND a.rc_state = 'E'
				)
				AND a.RC_STATE = 'E'
				AND b.RC_STATE = 'E'
				AND c.RC_STATE = 'E'
				AND e.RC_STATE = 'E'
				AND f.RC_STATE = 'E'
				AND g.RC_STATE = 'E'
				AND h.RC_STATE = 'E'
				AND a.TRADE_STAUS = '10'
				AND A.CURRENCY='USD'
    </select>
    
    <!-- 客户持有海外产品 -->
    <select id="getOverseasProduct" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT DISTINCT
					a.PRODUCT_ID 'productId',
					a.PRODUCT_NAME 'productName'
				FROM
					t_pd_product a,
					t_pd_wealth b,
					t_pd_wealth_net_value c,
					t_cust_base_info d,
					t_trade_cust_info e,
					t_trade_product_info_view f,
					t_trade_info g,
					t_trade_status_info h
				WHERE
					a.PRODUCT_ID = b.PRODUCT_ID
				AND b.PD_WEALTH_ID = c.PD_WEALTH_ID
				AND a.PRODUCT_ID = f.PRODUCT_ID
				AND d.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
				AND g.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND g.TRADE_INFO_ID = f.TRADE_INFO_ID
				AND h.TRADE_INFO_ID = g.TRADE_INFO_ID
				AND d.CUSTOMER_NO = #{customerNo}
				AND a.PRODUCT_TYPE = '1'
				AND a.PRODUCT_SUB_TYPE = '04'
				AND g.TRADE_STAUS='10'
				AND c.public_date = (
					SELECT
						max(e.public_date)
					FROM
						t_pd_wealth_net_value e
					WHERE
						e.pd_wealth_id = b.pd_wealth_id
					AND e.rc_state = 'E'
				)
				AND (
					SELECT
						SUM(
							h.subscription_copies - (
								FUNC_GET_ALL_REDEMPTION_SHARE (g.TRADE_INFO_ID)
							)
						)
				) > 0
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND e.RC_STATE = 'e'
				AND g.RC_STATE = 'e'
				AND h.RC_STATE = 'e'
				ORDER BY
					a.PRODUCT_ID
    </select>
    
    
    <!-- 查询客户投资总额USD -->
    <select id="getInvestTotalUSD" parameterType="java.util.Map" resultType="java.util.Map">
    		SELECT
					CONCAT(
					ROUND(IFNULL((SELECT
					SUM(a.TRADE_TOTAL_ASSETS)
					FROM
					t_trade_info a,
					t_cust_base_info b,
					t_trade_cust_info c,
					t_pd_product d,
					t_trade_product_info_view v
					WHERE
					a.TRADE_INFO_ID = c.TRADE_INFO_ID
					AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
					AND d.PRODUCT_ID = v.PRODUCT_ID
					AND a.TRADE_INFO_ID = v.TRADE_INFO_ID
					AND b.CUSTOMER_NO = #{customerNo}
					AND a.trade_staus = '10'
					AND d.PRODUCT_TYPE = "1"
					AND d.PRODUCT_SUB_TYPE in ('03','04')
					AND a.CURRENCY = 'USD'
					AND a.RC_STATE = "E" 
					AND b.RC_STATE = "E" 
					AND c.RC_STATE = "E" 
					AND d.RC_STATE = "E" 
					
					) 
					-CASE
					WHEN
					d.PRODUCT_SUB_TYPE in ('03','04')
					THEN
					(CASE
					WHEN x.REMAINING_TOTAL_SHARE = 0
					THEN SUM(IFNULL(e.subscriptionFee,0))
					ELSE
					0
					END
					)
					ELSE
					0
					END
					,0)/10000,2)
					,'','万') "investTotalUSD"
				FROM
					t_trade_info a,
					t_cust_base_info b,
					t_trade_cust_info c,
					t_pd_product d,
					t_trade_product_info_view e,
					t_redemption_info x,
					t_redemption_trade_info y

				WHERE
					a.trade_staus = 10
				AND b.CUSTOMER_NO = #{customerNo}
				AND d.PRODUCT_SUB_TYPE in ('03','04')
				AND a.CURRENCY = 'USD'
				AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND a.TRADE_INFO_ID = c.TRADE_INFO_ID
				AND a.TRADE_INFO_ID = e.TRADE_INFO_ID
				AND d.PRODUCT_ID = e.PRODUCT_ID
				AND x.REDEMPTION_INFO_ID = y.REDEMPTION_INFO_ID
				AND y.TRADE_INFO_ID = a.TRADE_INFO_ID
				AND x.REDEMPTION_STATUS = "04"
				AND a.RC_STATE = 'e'
				AND b.RC_STATE = 'e'
				AND c.RC_STATE = 'e'
				AND d.RC_STATE = 'e'
				AND x.RC_STATE = 'e'
				AND y.RC_STATE = 'e'
    </select>
    
    
     <!-- 查询客户理财经理电话 客服热线 -->
    <select id="getAgentMobile" parameterType="java.util.Map" resultType="java.util.Map">
    			select
					b.MOBILE "agentMobile",
					CONCAT('4006773977','','') "companyMobile",
					a.CHN_NAME "custName"
					FROM
					t_cust_base_info a,
					t_agent b
					WHERE
					a.AGENT_ID = b.AGENT_ID
					AND a.CUSTOMER_NO = #{customerNo}
					AND a.RC_STATE = 'E'
					AND b.RC_STATE = 'E'
    </select>
    <!-- 根据客户号查询股权产品历史 -->
    <select id="getStockHistory" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT
				a.PRODUCT_ID 'productId',
				a.PRODUCT_NAME 'productName',
				DATE_FORMAT(b.FOUND_DATE, '%Y-%m-%d') 'foundDate',
				(
					CASE
					WHEN (
						SELECT
							y.TRANSFER_ALL
						FROM
							t_trade_funds_share_change y
						WHERE
							e.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
						AND y.RC_STATE = 'E'
					) = '02' THEN
						(
							SELECT
								y.VALUE_DATE
							FROM
								t_trade_funds_share_change y
							WHERE
								e.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
							AND y.RC_STATE = 'E'
						)
					ELSE
						(
							FUNC_FOUNDATE_CLOSED_ENDDATE (
								b.FOUND_DATE,
								(
									CASE
									WHEN (
										SELECT
											x.CLOSE_DPERIOD
										FROM
											t_pd_wealth_fee_rate x
										WHERE
											b.PD_WEALTH_ID = x.PD_WEALTH_ID
										AND d.beneficialType = x.BENEFICIAL_TYPE
										AND x.rc_state = "E"
									) IS NULL THEN
										b.CLOSE_DPERIODS
									ELSE
										(
											SELECT
												x.CLOSE_DPERIOD
											FROM
												t_pd_wealth_fee_rate x
											WHERE
												b.PD_WEALTH_ID = x.PD_WEALTH_ID
											AND d.beneficialType = x.BENEFICIAL_TYPE
											AND x.rc_state = "E"
										)
									END
								),
								b.CLOSE_DPERIOD_UNIT
							)
						)
					END
				) 'endDate',
				CONCAT(
					FORMAT(d.subscriptionFee / 10000, 2),
					'万'
				) 'tradeTotalAsset',
				FORMAT(d.subscriptionFee, 2) 'cashMoney',
				CONCAT(
					(
						SELECT
							BANK_NAME
						FROM
							t_def_bank
						WHERE
							BANK_ID = h.BANK_CODE
					),
					'  ',
					h.BANK_ACC_NO
				) 'custAccount',
				"" expectFeeRate
			FROM
				t_pd_product a,
				t_pd_wealth b,
				t_cust_base_info c,
				t_trade_product_info_view d,
				t_trade_info e,
				t_trade_cust_info f,
				t_trade_cust_acc_rela g,
				t_cust_acc_info h
			WHERE
				1 = 1
			AND a.PRODUCT_ID = b.PRODUCT_ID
			AND b.PRODUCT_ID = d.PRODUCT_ID
			AND d.TRADE_INFO_ID = e.TRADE_INFO_ID
			AND e.TRADE_INFO_ID = f.TRADE_INFO_ID
			AND f.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
			AND g.TRADE_CUST_INFO_ID = f.TRADE_CUST_INFO_ID
			AND g.CUST_ACC_INFO_ID = h.CUST_ACC_INFO_ID
			AND h.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
			AND g.TRADE_ACC_FLAG = '1'
			AND a.PRODUCT_SUB_TYPE = '01'
			AND c.CUSTOMER_NO = #{customerNo}
			AND a.rc_state = 'E'
			AND b.rc_state = 'E'
			AND c.rc_state = 'E'
			AND e.rc_state = 'E'
			AND f.rc_state = 'E'
			AND g.rc_state = 'E'
			AND h.rc_state = 'E'
			AND CURDATE() > (
				CASE
				WHEN (
					SELECT
						y.TRANSFER_ALL
					FROM
						t_trade_funds_share_change y
					WHERE
						e.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
					AND y.RC_STATE = 'E'
				) = '02' THEN
					(
						SELECT
							y.VALUE_DATE
						FROM
							t_trade_funds_share_change y
						WHERE
							e.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
						AND y.RC_STATE = 'E'
					)
				ELSE
					(
						FUNC_FOUNDATE_CLOSED_ENDDATE (
							b.FOUND_DATE,
							(
								CASE
								WHEN (
									SELECT
										x.CLOSE_DPERIOD
									FROM
										t_pd_wealth_fee_rate x
									WHERE
										b.PD_WEALTH_ID = x.PD_WEALTH_ID
									AND d.beneficialType = x.BENEFICIAL_TYPE
									AND x.rc_state = "E"
								) IS NULL THEN
									b.CLOSE_DPERIODS
								ELSE
									(
										SELECT
											x.CLOSE_DPERIOD
										FROM
											t_pd_wealth_fee_rate x
										WHERE
											b.PD_WEALTH_ID = x.PD_WEALTH_ID
										AND d.beneficialType = x.BENEFICIAL_TYPE
										AND x.rc_state = "E"
									)
								END
							),
							b.CLOSE_DPERIOD_UNIT
						)
					)
				END
			)
    </select>
    <!-- 根据客户号查询海外产品历史 -->
    <select id="getOverseasHistory" parameterType="java.util.Map" resultType="java.util.Map">
		   SELECT
				IFNULL(b.PRODUCT_ID,"XXX") 'productId',
				b.PRODUCT_NAME 'productName',
				d.expectOpenDay 'expectOpenDay',
				a.REDEMPTION_OPENDAY 'redemptionDate',
				(
					CASE
					WHEN f.CURRENCY = 'CNY' THEN
						CONCAT(
							FORMAT(
								SUM(d.subscriptionFee / 10000),
								2
							),
							'万'
						)
					WHEN f.CURRENCY = 'USD' THEN
						CONCAT(
							FORMAT(SUM(d.subscriptionFee), 2),
							'美元'
						)
					END
				) 'tradeTotalAsset',
				FORMAT(
						SUM(
							a.ACTU_REDEMPTION_TOTAL_MONEY
						),
					2
				) 'redemptionMoney',
				CONCAT(
					ROUND(
						a.ACTU_REDEMPTION_NET_VALUE,
						4
					),
					'',
					''
				) 'netValue',
				CONCAT(
					(
						SELECT
							BANK_NAME
						FROM
							t_def_bank
						WHERE
							BANK_ID = g.BANK_CODE
					),
					'  ',
					g.BANK_ACC_NO
				) 'custAccount'
			FROM
				t_redemption_info a,
				t_pd_product b,
				t_cust_base_info c,
				t_trade_product_info_view d,
				t_trade_cust_info e,
				t_trade_info f,
				t_cust_acc_info g,
				t_trade_cust_acc_rela h
			WHERE
				1 = 1
			AND a.PD_PRODUCT_ID = b.PRODUCT_ID
			AND a.CUSTOMER_NO = c.CUSTOMER_NO
			AND c.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
			AND f.TRADE_INFO_ID = e.TRADE_INFO_ID
			AND d.TRADE_INFO_ID = f.TRADE_INFO_ID
			AND d.PRODUCT_ID = b.PRODUCT_ID
			AND g.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
			AND h.TRADE_CUST_INFO_ID = e.TRADE_CUST_INFO_ID
			AND h.CUST_ACC_INFO_ID = g.CUST_ACC_INFO_ID
			AND h.TRADE_ACC_FLAG = '1'
			AND b.PRODUCT_SUB_TYPE = '04'
			AND b. STATUS = '2'
			AND a.REMAINING_TOTAL_SHARE = 0
			AND a.CUSTOMER_NO = #{customerNo}
			AND a.rc_state = 'E'
			AND b.rc_state = 'E'
			AND c.rc_state = 'E'
			AND e.rc_state = 'E'
			AND f.rc_state = 'E'
			AND g.rc_state = 'E'
			AND h.rc_state = 'E'
			ORDER BY
				b.PRODUCT_NAME		
    </select>
    
    <!-- 查询固定热门产品 -->
    <select id="getFixedHotProductList" parameterType="java.util.Map" resultType="java.util.Map">
    		SELECT
			a.PRODUCT_ID 'productId',
			a.PRODUCT_NAME 'productName',
			CONCAT(round((
				SELECT
					b.START_INVEST_MONEY
				FROM
					t_pd_wealth b
				WHERE
					b.PRODUCT_ID = a.PRODUCT_ID
				AND b.RC_STATE = 'E'
			)/10000,2),'万') 'startInvestMoney',
		(
				SELECT
		         case b.CLOSE_DPERIOD_UNIT 
		          WHEN 'D' then CONCAT(b.CLOSE_DPERIODS,'天')
				      WHEN 'M' then CONCAT(b.CLOSE_DPERIODS,'月')
		          WHEN 'Y' then CONCAT(b.CLOSE_DPERIODS,'年')
		    END
				FROM
					t_pd_wealth b
				WHERE
					b.PRODUCT_ID = a.PRODUCT_ID
				AND b.RC_STATE = 'E'
			) 'closePeriod',
		c.PRODUCT_FEATURE "productFeature"	
		FROM
			t_pd_product a,t_pd_wealth c
		WHERE
			a.RC_STATE = 'E' 
		AND a.PRODUCT_ID=c.PRODUCT_ID
		AND c.RC_STATE='E'
		AND c.RAISE_END_DATE>=NOW()
		AND NOW()>=c.RAISE_START_DATE
		AND a.PRODUCT_TYPE='1'
		AND a.PRODUCT_SUB_TYPE = '02'
		AND a.IS_HOT = '01'
		AND  a.IS_ORDER = '01'
		AND a.STATUS = '2'
    </select>
    <select id="getStockHotProductList" parameterType="java.util.Map" resultType="java.util.Map">
    			SELECT
			a.PRODUCT_ID 'productId',
			a.PRODUCT_NAME 'productName',
			CONCAT(round((
				SELECT
					b.START_INVEST_MONEY
				FROM
					t_pd_wealth b
				WHERE
					b.PRODUCT_ID = a.PRODUCT_ID
				AND b.RC_STATE = 'E'
			)/10000,2),'万') 'startInvestMoney',
		(
				SELECT
		         case b.CLOSE_DPERIOD_UNIT 
		          WHEN 'D' then CONCAT(b.CLOSE_DPERIODS,'天')
				      WHEN 'M' then CONCAT(b.CLOSE_DPERIODS,'月')
		          WHEN 'Y' then CONCAT(b.CLOSE_DPERIODS,'年')
		    END
				FROM
					t_pd_wealth b
				WHERE
					b.PRODUCT_ID = a.PRODUCT_ID
				AND b.RC_STATE = 'E'
			) 'closePeriod',
		c.PRODUCT_FEATURE "productFeature"	
		FROM
			t_pd_product a,t_pd_wealth c
		WHERE
			a.RC_STATE = 'E' 
		AND a.PRODUCT_ID=c.PRODUCT_ID
		AND c.RC_STATE='E'
		AND c.RAISE_END_DATE>=NOW()
		AND NOW()>=c.RAISE_START_DATE
		AND a.PRODUCT_TYPE='1'
		AND a.PRODUCT_SUB_TYPE = '01'
		AND a.IS_HOT = '01'
		AND  a.IS_ORDER = '01'
		AND a.STATUS = '2'
    </select>
    
    <select id="getFloatHotProductList" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT  DISTINCT
				A.PRODUCT_ID 'productId',
				A.PRODUCT_NAME 'productName',
				IFNULL(CONCAT(ROUND((SELECT x.NET_VALUE FROM
							t_pd_wealth_net_value x WHERE
							x.PD_WEALTH_ID = C.PD_WEALTH_ID
							AND  x.PUBLIC_DATE =(SELECT MAX(PUBLIC_DATE) 
							FROM t_pd_wealth_net_value  
							WHERE PD_WEALTH_ID=x.PD_WEALTH_ID
							AND RC_STATE='E')) ,4),'',''),'') 'netValue',
				IFNULL(CONCAT(format(C.START_INVEST_MONEY/10000,2),'','万'),'') 'startInvestMoney',
			CASE WHEN (SELECT x.NET_VALUE FROM
							t_pd_wealth_net_value x WHERE
							x.PD_WEALTH_ID = C.PD_WEALTH_ID
							AND  x.PUBLIC_DATE =(SELECT MAX(PUBLIC_DATE) 
							FROM t_pd_wealth_net_value  
							WHERE PD_WEALTH_ID=x.PD_WEALTH_ID
							AND RC_STATE='E')) is null
			THEN ''
			ELSE (
			CASE WHEN a.PRODUCT_NAME LIKE '%淡水泉%'
			THEN (		CASE WHEN (SELECT x.PUBLIC_DATE FROM
							t_pd_wealth_net_value x WHERE
							x.PD_WEALTH_ID = C.PD_WEALTH_ID
							AND  x.PUBLIC_DATE =(SELECT MAX(PUBLIC_DATE) 
							FROM t_pd_wealth_net_value  
							WHERE PD_WEALTH_ID=x.PD_WEALTH_ID
							AND RC_STATE='E')) = d.OPEN_DATE
						THEN '最新净值' ELSE '最近预估净值' END	)
			ELSE '最新净值' END
			) END"netValueType",
		c.PRODUCT_FEATURE "productFeature"	
		FROM 	 t_pd_product A ,
				 t_pd_wealth C,
				 t_pd_wealth_open_date D
		WHERE A.PRODUCT_ID = C.PRODUCT_ID
		AND  D.PD_WEALTH_ID = C.PD_WEALTH_ID
		AND  D.INVEST_END_DATE>=NOW()
		AND  NOW()>=D.INVEST_START_DATE
		AND  A.PRODUCT_SUB_TYPE='03'
		AND  A.PRODUCT_TYPE='1'
		AND  A.IS_HOT = '01'
		AND  A.IS_ORDER = '01'
		AND  A.STATUS = '2'
		AND  A.RC_STATE='E'
		AND  C.RC_STATE='E'
		AND  D.RC_STATE='E'
    </select>
    
    <select id="getOverseasHotProductList" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT  DISTINCT
				A.PRODUCT_ID 'productId',
				A.PRODUCT_NAME 'productName',
				IFNULL(CONCAT(ROUND((SELECT x.NET_VALUE FROM
							t_pd_wealth_net_value x WHERE
							x.PD_WEALTH_ID = C.PD_WEALTH_ID
							AND  x.PUBLIC_DATE =(SELECT MAX(PUBLIC_DATE) 
							FROM t_pd_wealth_net_value  
							WHERE PD_WEALTH_ID=x.PD_WEALTH_ID
							AND RC_STATE='E')) ,4),'',''),'') 'netValue',
				IFNULL(CONCAT(format(C.START_INVEST_MONEY/10000,2),'','万'),'') 'startInvestMoney',
		c.PRODUCT_FEATURE "productFeature"	
		FROM 	 t_pd_product A ,
				 t_pd_wealth C,
				 t_pd_wealth_open_date D
		WHERE A.PRODUCT_ID = C.PRODUCT_ID
		AND  D.PD_WEALTH_ID = C.PD_WEALTH_ID
		AND  D.INVEST_END_DATE>=NOW()
		AND  NOW()>=D.INVEST_START_DATE 
		AND  A.PRODUCT_SUB_TYPE='04'
		AND  A.PRODUCT_TYPE='1'
		AND  A.IS_HOT = '01'
		AND  A.IS_ORDER = '01'
		AND  A.STATUS = '2'
		AND  A.RC_STATE='E'
		AND  C.RC_STATE='E'
		AND  D.RC_STATE='E'
    </select>
    
    <select id="getStockHistoryAmount" parameterType="java.util.Map" resultType="java.util.Map">
		    SELECT
			IFNULL(SUM(ROUND(d.subscriptionFee, 2)),0) 'historyAmount'
		FROM
			t_pd_product a,
			t_pd_wealth b,
			t_cust_base_info c,
			t_trade_product_info_view d,
			t_trade_info e,
			t_trade_cust_info f
		WHERE
			1 = 1
		AND a.PRODUCT_ID = b.PRODUCT_ID
		AND b.PRODUCT_ID = d.PRODUCT_ID
		AND d.TRADE_INFO_ID = e.TRADE_INFO_ID
		AND e.TRADE_INFO_ID = f.TRADE_INFO_ID
		AND f.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
		AND a.PRODUCT_SUB_TYPE = '01'
		AND c.CUSTOMER_NO = #{customerNo}
		AND a.rc_state = 'E'
		AND b.rc_state = 'E'
		AND c.rc_state = 'E'
		AND e.rc_state = 'E'
		AND f.rc_state = 'E'
		AND CURDATE() > (
			CASE
			WHEN (
				SELECT
					y.TRANSFER_ALL
				FROM
					t_trade_funds_share_change y
				WHERE
					e.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
				AND y.RC_STATE = 'E'
			) = '02' THEN
				(
					SELECT
						y.VALUE_DATE
					FROM
						t_trade_funds_share_change y
					WHERE
						e.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
					AND y.RC_STATE = 'E'
				)
			ELSE
				(
					FUNC_FOUNDATE_CLOSED_ENDDATE (
						b.FOUND_DATE,
						(
							CASE
							WHEN (
								SELECT
									x.CLOSE_DPERIOD
								FROM
									t_pd_wealth_fee_rate x
								WHERE
									b.PD_WEALTH_ID = x.PD_WEALTH_ID
								AND d.beneficialType = x.BENEFICIAL_TYPE
								AND x.rc_state = "E"
							) IS NULL THEN
								b.CLOSE_DPERIODS
							ELSE
								(
									SELECT
										x.CLOSE_DPERIOD
									FROM
										t_pd_wealth_fee_rate x
									WHERE
										b.PD_WEALTH_ID = x.PD_WEALTH_ID
									AND d.beneficialType = x.BENEFICIAL_TYPE
									AND x.rc_state = "E"
								)
							END
						),
						b.CLOSE_DPERIOD_UNIT
					)
				)
			END
		)
    </select>
    
       <select id="getFixedHistoryAmount" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT
				IFNULL(SUM(ROUND(d.subscriptionFee, 2)),0) 'historyAmount'
			FROM
				t_pd_product a,
				t_pd_wealth b,
				t_cust_base_info c,
				t_trade_product_info_view d,
				t_pd_wealth_fee_rate z,
				t_trade_info x,
			t_trade_cust_info y
			WHERE
				1 = 1
			AND  a.PRODUCT_ID = d.PRODUCT_ID
			AND b.PRODUCT_ID = a.PRODUCT_ID
			AND c.CUST_BASE_INFO_ID = y.CUST_BASE_INFO_ID
			AND x.TRADE_INFO_ID = y.TRADE_INFO_ID
			AND d.TRADE_INFO_ID = x.TRADE_INFO_ID
			AND b.PD_WEALTH_ID = z.PD_WEALTH_ID
			AND a.PRODUCT_SUB_TYPE = '02'
			AND (
				CASE
				WHEN d.beneficialType IS NOT NULL THEN
					d.beneficialType = z.BENEFICIAL_TYPE
				ELSE
					1 = 1
				END
			)
			AND CURDATE() > (
				CASE
				WHEN (
					SELECT
						y.TRANSFER_ALL
					FROM
						t_trade_funds_share_change y
					WHERE
							x.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
					AND y.RC_STATE = 'E'
				) = '02' THEN
					(
						SELECT
							y.VALUE_DATE
						FROM
							t_trade_funds_share_change y
						WHERE
						 x.TRADE_INFO_ID = y.ORIGIN_TRADE_INFO_ID
						AND y.RC_STATE = 'E'
					)
				ELSE
					(
						FUNC_FOUNDATE_CLOSED_ENDDATE (
							b.FOUND_DATE,
							(
								CASE
								WHEN z.CLOSE_DPERIOD
								IS NULL THEN b.CLOSE_DPERIODS
								ELSE z.CLOSE_DPERIOD
								END
							),
							b.CLOSE_DPERIOD_UNIT
						)
					)
				END
			)
			AND c.CUSTOMER_NO = #{customerNo}
			AND a.rc_state = 'E'
			AND b.rc_state = 'E'
			AND c.rc_state = 'E'
			AND x.rc_state = 'E'
			AND y.rc_state = 'E'
			AND z.rc_state = 'E'
    </select>
    
    <select id="getFloatHistoryAmount" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		IFNULL(SUM(ROUND(d.subscriptionFee, 2)),0) 'historyAmount'
		FROM
			t_redemption_info a,
			t_pd_product b,
			t_cust_base_info c,
			t_trade_product_info_view d,
			t_trade_cust_info e,
			t_trade_info f
		WHERE
			1 = 1
		AND a.PD_PRODUCT_ID = b.PRODUCT_ID
		AND a.CUSTOMER_NO = c.CUSTOMER_NO
		AND c.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
		AND f.TRADE_INFO_ID = e.TRADE_INFO_ID
		AND d.TRADE_INFO_ID = f.TRADE_INFO_ID
		AND d.PRODUCT_ID = b.PRODUCT_ID
		AND b.PRODUCT_SUB_TYPE = '03'
		AND a.REMAINING_TOTAL_SHARE = 0
		AND a.CUSTOMER_NO = #{customerNo}
		AND a.rc_state = 'E'
		AND b.rc_state = 'E'
		AND c.rc_state = 'E'
		AND e.rc_state = 'E'
		AND f.rc_state = 'E'
    </select>
    
    <select id="getOverseasHistoryAmountCNY" parameterType="java.util.Map" resultType="java.util.Map">
		    SELECT
		    IFNULL(SUM(ROUND(d.subscriptionFee, 2)),0) 'historyAmount'
		FROM
			t_redemption_info a,
			t_pd_product b,
			t_cust_base_info c,
			t_trade_product_info_view d,
			t_trade_cust_info e,
			t_trade_info f
		WHERE
			1 = 1
		AND a.PD_PRODUCT_ID = b.PRODUCT_ID
		AND a.CUSTOMER_NO = c.CUSTOMER_NO
		AND c.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
		AND f.TRADE_INFO_ID = e.TRADE_INFO_ID
		AND d.TRADE_INFO_ID = f.TRADE_INFO_ID
		AND d.PRODUCT_ID = b.PRODUCT_ID
		AND b.PRODUCT_SUB_TYPE = '04'
		AND a.REMAINING_TOTAL_SHARE = 0
		AND f.CURRENCY = 'CNY'
		AND a.CUSTOMER_NO = #{customerNo}
		AND a.rc_state = 'E'
		AND b.rc_state = 'E'
		AND c.rc_state = 'E'
		AND e.rc_state = 'E'
		AND f.rc_state = 'E'
    </select>
     <select id="getOverseasHistoryAmountUSD" parameterType="java.util.Map" resultType="java.util.Map">
		    SELECT
		    CONCAT(IFNULL(SUM(ROUND(d.subscriptionFee/10000, 2)),0),'','万') 'historyAmountUSD'
		FROM
			t_redemption_info a,
			t_pd_product b,
			t_cust_base_info c,
			t_trade_product_info_view d,
			t_trade_cust_info e,
			t_trade_info f
		WHERE
			1 = 1
		AND a.PD_PRODUCT_ID = b.PRODUCT_ID
		AND a.CUSTOMER_NO = c.CUSTOMER_NO
		AND c.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
		AND f.TRADE_INFO_ID = e.TRADE_INFO_ID
		AND d.TRADE_INFO_ID = f.TRADE_INFO_ID
		AND d.PRODUCT_ID = b.PRODUCT_ID
		AND b.PRODUCT_SUB_TYPE = '04'
		AND a.REMAINING_TOTAL_SHARE = 0
		AND f.CURRENCY = 'USD'
		AND a.CUSTOMER_NO = #{customerNo}
		AND a.rc_state = 'E'
		AND b.rc_state = 'E'
		AND c.rc_state = 'E'
		AND e.rc_state = 'E'
		AND f.rc_state = 'E'
    </select>
   
    <!-- 获取客户鲸币信息 -->
    <select id="getWhaleCoin" parameterType="java.util.Map" resultType="java.util.Map">
		   SELECT
				IFNULL(SUM(ROUND(a.TRADE_TOTAL_ASSETS/100000)),0) "coinAmount"
			FROM
				t_trade_info a,t_cust_base_info b,t_trade_cust_info c,t_trade_status_info d
			WHERE
				a.TRADE_INFO_ID = c.TRADE_INFO_ID AND b.CUST_BASE_INFO_ID = c.CUST_BASE_INFO_ID
				AND a.TRADE_INFO_ID = d.TRADE_INFO_ID AND a.RC_STATE = 'E' AND b.RC_STATE = 'E'
				AND c.RC_STATE = 'E' AND d.RC_STATE = 'E' AND a.TRADE_STAUS in ('10','11','12','13','14')
				AND b.CUSTOMER_NO = #{customerNo} AND d.CREATE_DATE BETWEEN #{queryDate} AND CURDATE()
    </select>
    
     <!-- 获取客户预约记录信息 -->
    <select id="getProductOrderRecord" parameterType="java.util.Map" resultType="java.util.Map">
				SELECT 
					B.PRODUCT_NAME "productName",
					FORMAT(A.ORDER_AMOUNT,2) "orderAmount",
					CASE WHEN A.ORDER_STATUS = '01' THEN '已预约'
					WHEN A.ORDER_STATUS = '02' THEN '已打款'
					WHEN A.ORDER_STATUS = '03' THEN '已撤销'
					WHEN A.ORDER_STATUS = '04' THEN '排队中'
					ELSE '' END "orderStatus",
					CASE WHEN A.ORDER_STATUS in ('01','02')
					THEN DATE_FORMAT(A.CREATE_DATE,'%Y-%m-%d') ELSE '' END "orderDate",
					CASE WHEN A.ORDER_STATUS = '02'
					THEN DATE_FORMAT(A.MODIFY_DATE,'%Y-%m-%d') ELSE '' END "toAccDate",
					CASE WHEN B.PRODUCT_SUB_TYPE in ('01','02')
					THEN DATE_FORMAT(D.RAISE_END_DATE,'%Y-%m-%d') 
					ELSE (SELECT DATE_FORMAT(MAX(x.INVEST_END_DATE),'%Y-%m-%d')
							FROM t_pd_wealth_open_date x WHERE x.PD_WEALTH_ID = d.PD_WEALTH_ID AND x.RC_STATE = 'E'
							AND CURDATE() >= x.INVEST_START_DATE
			        AND x.INVEST_END_DATE>=CURDATE()
						)
					END "closeDate"
				FROM T_PD_AMOUNT_ORDER_INFO A,
					T_PD_PRODUCT B,T_CUST_BASE_INFO C,t_pd_wealth D
				WHERE A.PRODUCT_ID = B.PRODUCT_ID
					AND A.CUST_BASE_INFO_ID = C.CUST_BASE_INFO_ID
					AND B.PRODUCT_ID = D.PRODUCT_ID
					AND A.RC_STATE = 'E'
					AND B.RC_STATE = 'E'
					AND C.RC_STATE = 'E'
					AND D.RC_STATE = 'E'
					AND C.CUSTOMER_NO = #{customerNo}
					AND case
						when B.PRODUCT_SUB_TYPE='01' OR B.PRODUCT_SUB_TYPE='02'
						THEN 
						CURRENT_TIMESTAMP <![CDATA[>=]]> (SELECT
						MAX(X.RAISE_START_DATE)
						 FROM
						t_pd_wealth X
						WHERE 
						X.PRODUCT_ID = B.PRODUCT_ID
						AND x.RC_STATE = "E"
						)
							AND CURRENT_TIMESTAMP <![CDATA[<=]]>
						(SELECT
						DATE_ADD(MAX(X.RAISE_END_DATE),INTERVAL 2 DAY)
						 FROM
						t_pd_wealth X
						WHERE 
						X.PRODUCT_ID = B.PRODUCT_ID
						AND x.RC_STATE = "E"
						)
						ELSE EXISTS(SELECT 'X' FROM t_pd_wealth X,t_pd_wealth_open_date Y
						WHERE X.PRODUCT_ID=B.PRODUCT_ID
						AND X.PD_WEALTH_ID = Y.PD_WEALTH_ID
						AND CURRENT_TIMESTAMP <![CDATA[>=]]> Y.INVEST_START_DATE
						AND CURRENT_TIMESTAMP <![CDATA[<=]]> DATE_ADD(a.expect_open_day,INTERVAL 2 DAY))
					END
    </select>
    
    <select id="getAgentInfoByMobile" parameterType="java.util.Map" resultType="java.util.Map">
			  SELECT 
				a.AGENT_ID "agentId",
				"true" AS "isOldCustomer",
				a.IDNO "idNo",
				a.AGENT_NAME "name",
				IFNULL((
				SELECT
				x.CUSTOMER_NO
				FROM
				t_cust_base_info x,
				t_cust_contact_info y
				WHERE 
				x.CUST_BASE_INFO_ID = y.CUST_BASE_INFO_ID
				AND x.RC_STATE = 'E'
				AND y.RC_STATE = 'E'
				AND y.MOBILE=#{mobile}
				),"") "customerNo"
				FROM 
				t_agent a
				WHERE a.RC_STATE = 'E'
				AND a.MOBILE=#{mobile}
    </select>
    <select id="getCustInfoByMobile" parameterType="java.util.Map" resultType="java.util.Map">
			  SELECT 
					a.CUSTOMER_NO 'customerNo',
					a.ID_NO "idNo",
					a.CHN_NAME "name",
					"true" AS "isOldCustomer"
				FROM
					t_cust_base_info a,
					t_cust_contact_info b
				WHERE
				    1=1
				AND	a.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
				AND b.MOBILE=#{mobile}
				AND a.RC_STATE='e'
				AND b.RC_STATE='e'
    </select>
    
      <select id="getFloatNetValues" parameterType="java.util.Map" resultType="java.util.Map">
			 SELECT DISTINCT
					f.PUBLIC_DATE 'publicDate',
					ROUND(f.NET_VALUE,4) 'netValue'
				FROM
					t_pd_product e,
					t_pd_wealth_net_value f,
				    t_pd_wealth g
				
				WHERE
					1 = 1
				AND e.PRODUCT_ID=g.PRODUCT_ID
				AND g.PD_WEALTH_ID=f.PD_WEALTH_ID
				AND e.PRODUCT_ID = #{productId}
				AND e.RC_STATE = 'E'
				AND f.RC_STATE = 'E'
				AND g.RC_STATE = 'E'
				ORDER BY publicDate
     </select>
     <!-- 根据AgentId 获取rm信息 -->
      <select id="getAgentDetailInfo" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT
			a.MOBILE "mobile",
			a.EMAIL "email",
			CONCAT((SELECT d.CODE_NAME FROM t_def_code d WHERE d.CODE_TYPE = 'fileSaveServer' AND d.CODE = '03'),
			(SELECT d.CODE_NAME FROM t_def_code d WHERE d.CODE_TYPE = 'fileSavePath' AND d.CODE = '03'),
			a.AGENT_IMAGE) "agentImage",
			a.WINNING_EXPERIENCE "prizedExperience",
			a.SELF_INTRODUCTION "selfIntroduction"
			FROM
			t_agent a
			WHERE 1= 1
			AND a.RC_STATE = 'E'
			AND a.AGENT_ID = #{agentId}
     </select>
     <select id="getCertificationList" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT
			FUNC_GET_CODE_NAME('certificationType',b.CERTIFICATION_TYPE) "certificationType",
			b.CERTIFICATION_CODE "certificationCode"
			FROM
			t_agent a,t_agent_certification_info b
			WHERE 1= 1
			AND a.AGENT_ID = b.AGENT_ID
			AND a.RC_STATE = 'E'
			AND b.RC_STATE = 'E'
			AND a.AGENT_ID = #{agentId}
     </select>
      <select id="getWorkList" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT
			FUNC_GET_CODE_NAME('agentOccupation',b.OCCUPATION) "agentOccupation",
			FUNC_GET_CODE_NAME('agentSubOccupation',b.SUB_OCCUPATION) "agentSubOccupation",
			FUNC_GET_CODE_NAME('agentDuties',b.DUTIES) "agentDuties",
			FUNC_GET_CODE_NAME('agentRank',b.RANK) "agentRank",
			DATE_FORMAT(b.START_DATE,'%Y.%m.%d') "startDate",
			DATE_FORMAT(b.END_DATE,'%Y.%m.%d') "endDate"
			FROM
			t_agent a,t_agent_work_info b
			WHERE 1= 1
			AND a.AGENT_ID = b.AGENT_ID
			AND a.RC_STATE = 'E'
			AND b.RC_STATE = 'E'
			AND a.AGENT_ID = #{agentId}
     </select>
     <select id="getAllNetValue" parameterType="java.util.Map" resultType="java.util.Map">
     SELECT DISTINCT
					f.PUBLIC_DATE 'publicDate',
					ROUND(f.NET_VALUE,4) 'netValue'
				FROM
					t_pd_product e,
					t_pd_wealth_net_value f,
				    t_pd_wealth g
				WHERE
					1 = 1
				AND e.PRODUCT_ID=g.PRODUCT_ID
				AND g.PD_WEALTH_ID=f.PD_WEALTH_ID
				AND e.PRODUCT_ID = #{productId}
				AND e.RC_STATE = 'E'
				AND f.RC_STATE = 'E'
				AND g.RC_STATE = 'E'
				  AND f.PUBLIC_DATE >= (
					CASE
					WHEN #{type} = '1' THEN
					DATE_SUB(CURDATE(), INTERVAL 1 MONTH)
					WHEN #{type} = '2' THEN
					DATE_SUB(CURDATE(), INTERVAL 1 YEAR)
					WHEN #{type} = '3' THEN
						1
					ELSE
						1
					END
				)
				ORDER BY publicDate
   </select>
    <select id="queryAllFloatProducts" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT
			x.PRODUCT_ID "productId",
			x.PRODUCT_NAME "productName"
		FROM t_pd_product x
			WHERE x.RC_STATE = 'E'
			AND x.PRODUCT_SUB_TYPE = '03'
			AND x.STATUS = '2'
   </select>
     <!-- /////////////////////////////////微信接口结束//////////////////////////////////// -->
     <select id="queryCustRemainAmount" parameterType="java.util.Map" resultType="java.util.Map">
		        SELECT 
					 case WHEN A.CUST_LEVEL = '02' THEN 0
						ELSE (
					(
							(
								SELECT
									ROUND(
										IFNULL(SUM(v.subscriptionFee), 0),
										2
									)
								FROM
									t_cust_base_info x,
									t_trade_cust_info b,
									t_trade_info c,
									t_trade_product_info_view v,
									t_pd_product d,
									t_pd_wealth g
								WHERE
									x.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
								AND c.TRADE_INFO_ID = b.TRADE_INFO_ID
								AND c.TRADE_INFO_ID = v.TRADE_INFO_ID
								AND d.PRODUCT_ID = v.PRODUCT_ID
								AND d.PRODUCT_ID = g.product_id
								AND x.RC_STATE = 'E'
								AND b.RC_STATE = 'E'
								AND c.RC_STATE = 'E'
								AND d.RC_STATE = 'E'
								AND g.RC_STATE = 'E'
								AND x.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
								AND d.PRODUCT_SUB_TYPE IN ('01', '02')
								AND FUNC_FOUNDATE_CLOSED_ENDDATE (
									g.FOUND_DATE,
									IFNULL(
										(
											SELECT
												x.CLOSE_DPERIOD
											FROM
												t_pd_wealth_fee_rate x
											WHERE
												g.PD_WEALTH_ID = x.PD_WEALTH_ID
											AND v.beneficialType = x.BENEFICIAL_TYPE
											AND x.rc_state = "E"
										),
										g.CLOSE_DPERIODS
									),
									g.CLOSE_DPERIOD_UNIT
								) > CURDATE()
								AND CASE
								WHEN EXISTS (
									SELECT
										'X'
									FROM
										t_trade_funds_share_change x,
										t_cust_base_info y,
										t_trade_cust_info z,
										t_trade_info m
									WHERE
										y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
									AND z.TRADE_INFO_ID = m.TRADE_INFO_ID
									AND x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
									AND y.RC_STATE = 'E'
									AND z.RC_STATE = 'E'
									AND m.RC_STATE = 'E'
									AND y.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
								) THEN
									(
										c.trade_staus IN (
											'06',
											'10',
											'11',
											'12',
											'13',
											'14'
										)
									)
								ELSE
									(
										c.trade_staus IN ('06', '10', '13')
									)
								END
							) + (
								SELECT
									ROUND(
										IFNULL(
											SUM(
												(
													SELECT
														x.net_value
													FROM
														t_pd_wealth_net_value x
													WHERE
														x.pd_wealth_id = g.pd_wealth_id
													AND x.rc_state = 'E'
													AND x.public_date = (
														SELECT
															max(y.public_date)
														FROM
															t_pd_wealth_net_value y
														WHERE
															y.pd_wealth_id = g.pd_wealth_id
														AND y.rc_state = 'E'
													)
												) * (
													SELECT
														
															SUM(z.SUBSCRIPTION_COPIES - FUNC_GET_ALL_REDEMPTION_SHARE (d.trade_info_id))
														
													FROM
														t_trade_status_info z
													WHERE
														z.trade_info_id = d.trade_info_id
													AND z.rc_state = 'E'
												)
											),
											0
										),
										2
									)
								FROM
									t_cust_base_info b,
									t_trade_cust_info c,
									t_trade_info d,
									t_trade_product_info_view e,
									t_pd_product f,
									t_pd_wealth g
								WHERE
									b.cust_base_info_id = c.cust_base_info_id
								AND c.trade_info_id = d.trade_info_id
								AND d.trade_info_id = e.TRADE_INFO_ID
								AND e.PRODUCT_ID = f.product_id
								AND f.product_id = g.product_id
								AND b.rc_state = 'E'
								AND c.RC_STATE = 'E'
								AND d.rc_state = 'E'
								AND f.RC_STATE = 'E'
								AND g.rc_state = 'E'
								AND f.product_sub_type IN ('03', '04')
								AND b.cust_base_info_id = A.CUST_BASE_INFO_ID
							)
						)
					)
						END 'remainScale'
				FROM 
				      T_CUST_BASE_INFO A LEFT JOIN T_AGENT B ON(A.Agent_Id = B.Agent_Id and B.Rc_State = 'E')
				      LEFT JOIN T_DEF_COM C ON (B.Com_Id = C.Com_Id and C.Rc_State = 'E')
				      LEFT JOIN t_Cust_Oth_Info Z ON (A.Cust_Base_Info_Id = Z.Cust_Base_Info_Id and Z.Rc_State = 'E')
				WHERE 
				    A.RC_STATE = 'E' AND A.CUST_BASE_INFO_ID = #{custBaseInfoId}
    </select> 
    
    <select id="queryCustUpgradeAuditList" parameterType="java.util.Map" resultType="java.util.Map">
		        SELECT 
					    A.CUST_BASE_INFO_ID "custBaseInfoId",
					    A.CUSTOMER_NO         "customerNo",
					    A.CHN_NAME          		"chnName",
					    A.LAST_NAME         		"lastName",
					    A.FIRST_NAME        		"firstName",
					    A.ID_TYPE           			"idType",
					    FUNC_GET_CODE_NAME('idType',A.ID_TYPE) "idTypeName",
					    A.ID_NO "idNo",
					    A.SEX   "sex",
					    FUNC_GET_CODE_NAME('sex',A.SEX) "sexName",
					    date_format(A.BIRTHDAY,'%Y-%m-%d') "birthday",
					    A.CUST_LEVEL        "custLevel",
					    FUNC_GET_CODE_NAME('custLevel',A.CUST_LEVEL)       "custLevelName",
					    FUNC_GET_CODE_NAME('custQuality', Z.CUST_QUALITY) "custQuality",
					    date_format(A.PRE_CUST_CONVERT_CUST_TIME,'%Y-%m-%d %H:%i:%S') "preCustConvertCustTime",
					    A.CUST_OBTAIN_WAY   "custObtainWay",
					    FUNC_GET_CODE_NAME('custObtainWay',A.CUST_OBTAIN_WAY)"custObtainWayName",
					    date_format(A.CREATE_DATE,'%Y-%m-%d %H:%i:%S') "inputTime",
					    C.COM_ID "comId",
					    C.COM_NAME "comName",
					    B.AGENT_ID "agentId",
					    B.AGENT_NAME "agentName",
					    (SELECT date_format(MAX(D.CUST_VISIT_TIME),'%Y-%m-%d %H:%i:%S') FROM T_CUST_VISIT_INFO D 
					     WHERE D.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND D.RC_STATE = 'E') "lastVisitTime",
					    (SELECT COUNT(1) FROM T_CUST_VISIT_INFO D 
					     WHERE D.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND D.RC_STATE = 'E') "visitTimes",
					    (SELECT COUNT(1) FROM T_TRADE_INFO D,T_TRADE_CUST_INFO E 
					     WHERE D.TRADE_INFO_ID = E.TRADE_INFO_ID 
					           AND E.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
					           AND D.TRADE_STAUS IN('11','10','11','12','13','14')
					           AND D.RC_STATE = 'E' AND E.RC_STATE = 'E')"signTimes",
					    FUNC_GET_CODE_NAME('customerType',Z.CUST_TYPE) "custType",
					    FUNC_GET_CODE_NAME('investCustomerType',A.INVEST_CUSTOMER_TYPE) "investCustomerType",
					    A.INVEST_CUSTOMER_TYPE "investCustomerTypeCode",
					    CASE A.INVEST_AUDIT_STATE WHEN '03' THEN '审核通过'
					    ELSE FUNC_GET_CODE_NAME('investAuditState',A.INVEST_AUDIT_STATE) END "investAuditState",
					    A.INVEST_AUDIT_STATE "investAuditStateCode"
				FROM 
				      T_CUST_BASE_INFO A LEFT JOIN T_AGENT B ON(A.Agent_Id = B.Agent_Id and B.Rc_State = 'E')
				      LEFT JOIN T_DEF_COM C ON (B.Com_Id = C.Com_Id and C.Rc_State = 'E')
				      LEFT JOIN t_Cust_Oth_Info Z ON (A.Cust_Base_Info_Id = Z.Cust_Base_Info_Id and Z.Rc_State = 'E')
				WHERE 
				    A.RC_STATE = 'E' AND A.INVEST_AUDIT_STATE in ('01','03')
				<include refid="queryCustomerListCondition"/>
				order by A.CUST_BASE_INFO_ID desc
 			LIMIT #{startIndex} , #{endIndex} 
    </select> 
 	
 	<select id="queryCustUpgradeAuditListCount" parameterType="java.util.Map" resultType="java.lang.Integer">
 	<!-- s -->
		SELECT COUNT(1)
		FROM 
				      T_CUST_BASE_INFO A LEFT JOIN T_AGENT B ON(A.Agent_Id = B.Agent_Id and B.Rc_State = 'E')
				      LEFT JOIN T_DEF_COM C ON (B.Com_Id = C.Com_Id and C.Rc_State = 'E')
				      LEFT JOIN t_Cust_Oth_Info Z ON (A.Cust_Base_Info_Id = Z.Cust_Base_Info_Id and Z.Rc_State = 'E')
		WHERE 
		    A.RC_STATE = 'E' AND A.INVEST_AUDIT_STATE in ('01','03')
		<include refid="queryCustomerListCondition"/>
    </select> 
    
    <select id="queryCustConclusion" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			conclusion "custConclusion",
			(
				SELECT
					CONCAT(CODE,"-",code_name)
				FROM
					t_def_code
				WHERE
					code_type = 'custCheckConclusion'
				AND CODE = a.conclusion
			) "custConclusionName",
			remark "custRemark"
		FROM
			t_cust_operation a
		WHERE
			cust_base_info_id = #{custBaseInfoId}
		AND operational_node = #{custOperationNode}
    </select>
    
    <select id="getProCustList" parameterType="java.util.Map" resultType="java.util.Map">
		        SELECT
					    A.CUST_BASE_INFO_ID "custBaseInfoId"
				FROM 
				      T_CUST_BASE_INFO A LEFT JOIN T_AGENT B ON(A.Agent_Id = B.Agent_Id and B.Rc_State = 'E')
				      LEFT JOIN T_DEF_COM C ON (B.Com_Id = C.Com_Id and C.Rc_State = 'E')
				      LEFT JOIN t_Cust_Oth_Info Z ON (A.Cust_Base_Info_Id = Z.Cust_Base_Info_Id and Z.Rc_State = 'E')
				WHERE 
				    A.RC_STATE = 'E'  AND A.CUST_LEVEL = '01'
				    AND Z.CUST_TYPE != '05'
				    AND 
				    ((
							SELECT
								ROUND(
									IFNULL(SUM(v.subscriptionFee), 0),
									2
								)
							FROM
								t_cust_base_info x,
								t_trade_cust_info b,
								t_trade_info c,
								t_trade_product_info_view v,
								t_pd_product d,
								t_pd_wealth g
							WHERE
								x.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
							AND c.TRADE_INFO_ID = b.TRADE_INFO_ID
							AND c.TRADE_INFO_ID = v.TRADE_INFO_ID
							AND d.PRODUCT_ID = v.PRODUCT_ID
							AND d.PRODUCT_ID = g.product_id
							AND x.RC_STATE = 'E'
							AND b.RC_STATE = 'E'
							AND c.RC_STATE = 'E'
							AND d.RC_STATE = 'E'
							AND g.RC_STATE = 'E'
							AND x.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
							AND d.PRODUCT_SUB_TYPE IN ('01', '02')
							AND FUNC_FOUNDATE_CLOSED_ENDDATE (
								g.FOUND_DATE,
								IFNULL(
									(
										SELECT
											x.CLOSE_DPERIOD
										FROM
											t_pd_wealth_fee_rate x
										WHERE
											g.PD_WEALTH_ID = x.PD_WEALTH_ID
										AND v.beneficialType = x.BENEFICIAL_TYPE
										AND x.rc_state = "E"
									),
									g.CLOSE_DPERIODS
								),
								g.CLOSE_DPERIOD_UNIT
							) > CURDATE()
							AND CASE
							WHEN EXISTS (
								SELECT
									'X'
								FROM
									t_trade_funds_share_change x,
									t_cust_base_info y,
									t_trade_cust_info z,
									t_trade_info m
								WHERE
									y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
								AND z.TRADE_INFO_ID = m.TRADE_INFO_ID
								AND x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
								AND y.RC_STATE = 'E'
								AND z.RC_STATE = 'E'
								AND m.RC_STATE = 'E'
								AND y.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
							) THEN
								(
									c.trade_staus IN (
										'06',
										'10',
										'11',
										'12',
										'13',
										'14'
									)
								)
							ELSE
								(
									c.trade_staus IN ('06', '10', '13')
								)
							END) + (SELECT
								ROUND(
									IFNULL(
										SUM(
											(
												SELECT
													x.net_value
												FROM
													t_pd_wealth_net_value x
												WHERE
													x.pd_wealth_id = g.pd_wealth_id
												AND x.rc_state = 'E'
												AND x.public_date = (
													SELECT
														max(y.public_date)
													FROM
														t_pd_wealth_net_value y
													WHERE
														y.pd_wealth_id = g.pd_wealth_id
													AND y.rc_state = 'E'
												)
											) * (
												SELECT
													SUM(z.SUBSCRIPTION_COPIES - FUNC_GET_ALL_REDEMPTION_SHARE (d.trade_info_id))
												FROM
													t_trade_status_info z
												WHERE
													z.trade_info_id = d.trade_info_id
												AND z.rc_state = 'E'
											)
										),
										0
									),
									2
								)
							FROM
								t_cust_base_info b,
								t_trade_cust_info c,
								t_trade_info d,
								t_trade_product_info_view e,
								t_pd_product f,
								t_pd_wealth g
							WHERE
								b.cust_base_info_id = c.cust_base_info_id
							AND c.trade_info_id = d.trade_info_id
							AND d.trade_info_id = e.TRADE_INFO_ID
							AND e.PRODUCT_ID = f.product_id
							AND f.product_id = g.product_id
							AND b.rc_state = 'E'
							AND c.RC_STATE = 'E'
							AND d.rc_state = 'E'
							AND f.RC_STATE = 'E'
							AND g.rc_state = 'E'
							AND f.product_sub_type IN ('03', '04')
							AND b.cust_base_info_id = A.CUST_BASE_INFO_ID
						)) >= 5000000
			</select>
			
			<select id="queryCustomerInvestList" parameterType="java.util.Map" resultType="java.util.Map">
		        SELECT 
					    A.CUST_BASE_INFO_ID "custBaseInfoId",
					    A.CUSTOMER_NO         "customerNo",
					    A.CHN_NAME          		"chnName",
					    A.LAST_NAME         		"lastName",
					    A.FIRST_NAME        		"firstName",
					    A.ID_TYPE           			"idType",
					    FUNC_GET_CODE_NAME('idType',A.ID_TYPE) "idTypeName",
					    A.ID_NO "idNo",
					    A.SEX   "sex",
					    FUNC_GET_CODE_NAME('sex',A.SEX) "sexName",
					    date_format(A.BIRTHDAY,'%Y-%m-%d') "birthday",
					    A.CUST_LEVEL        "custLevel",
					    FUNC_GET_CODE_NAME('custLevel',A.CUST_LEVEL)       "custLevelName",
					    FUNC_GET_CODE_NAME('custQuality', Z.CUST_QUALITY) "custQuality",
					    date_format(A.PRE_CUST_CONVERT_CUST_TIME,'%Y-%m-%d %H:%i:%S') "preCustConvertCustTime",
					    A.CUST_OBTAIN_WAY   "custObtainWay",
					    FUNC_GET_CODE_NAME('custObtainWay',A.CUST_OBTAIN_WAY)"custObtainWayName",
					    date_format(A.CREATE_DATE,'%Y-%m-%d %H:%i:%S') "inputTime",
					    C.COM_ID "comId",
					    C.COM_NAME "comName",
					    B.AGENT_ID "agentId",
					    B.AGENT_NAME "agentName",
					    (SELECT date_format(MAX(D.CUST_VISIT_TIME),'%Y-%m-%d %H:%i:%S') FROM T_CUST_VISIT_INFO D 
					     WHERE D.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND D.RC_STATE = 'E') "lastVisitTime",
					    (SELECT COUNT(1) FROM T_CUST_VISIT_INFO D 
					     WHERE D.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID AND D.RC_STATE = 'E') "visitTimes",
					    (SELECT COUNT(1) FROM T_TRADE_INFO D,T_TRADE_CUST_INFO E 
					     WHERE D.TRADE_INFO_ID = E.TRADE_INFO_ID 
					           AND E.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
					           AND D.TRADE_STAUS IN('11','10','11','12','13','14')
					           AND D.RC_STATE = 'E' AND E.RC_STATE = 'E')"signTimes",
					    FUNC_GET_CODE_NAME('customerType',Z.CUST_TYPE) "custType",
					    FUNC_GET_CODE_NAME('investCustomerType',A.INVEST_CUSTOMER_TYPE) "investCustomerType",
					    A.INVEST_CUSTOMER_TYPE "investCustomerTypeCode",
					    FUNC_GET_CODE_NAME('investAuditState',A.INVEST_AUDIT_STATE) "investAuditState",
					    A.INVEST_AUDIT_STATE "investAuditStateCode",
					 case WHEN A.CUST_LEVEL = '02' THEN 0
						ELSE (
					(
							(
								SELECT
									ROUND(
										IFNULL(SUM(v.subscriptionFee), 0),
										2
									)
								FROM
									t_cust_base_info x,
									t_trade_cust_info b,
									t_trade_info c,
									t_trade_product_info_view v,
									t_pd_product d,
									t_pd_wealth g
								WHERE
									x.CUST_BASE_INFO_ID = b.CUST_BASE_INFO_ID
								AND c.TRADE_INFO_ID = b.TRADE_INFO_ID
								AND c.TRADE_INFO_ID = v.TRADE_INFO_ID
								AND d.PRODUCT_ID = v.PRODUCT_ID
								AND d.PRODUCT_ID = g.product_id
								AND x.RC_STATE = 'E'
								AND b.RC_STATE = 'E'
								AND c.RC_STATE = 'E'
								AND d.RC_STATE = 'E'
								AND g.RC_STATE = 'E'
								AND x.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
								AND d.PRODUCT_SUB_TYPE IN ('01', '02')
								AND FUNC_FOUNDATE_CLOSED_ENDDATE (
									g.FOUND_DATE,
									IFNULL(
										(
											SELECT
												x.CLOSE_DPERIOD
											FROM
												t_pd_wealth_fee_rate x
											WHERE
												g.PD_WEALTH_ID = x.PD_WEALTH_ID
											AND v.beneficialType = x.BENEFICIAL_TYPE
											AND x.rc_state = "E"
										),
										g.CLOSE_DPERIODS
									),
									g.CLOSE_DPERIOD_UNIT
								) > CURDATE()
								AND CASE
								WHEN EXISTS (
									SELECT
										'X'
									FROM
										t_trade_funds_share_change x,
										t_cust_base_info y,
										t_trade_cust_info z,
										t_trade_info m
									WHERE
										y.CUST_BASE_INFO_ID = z.CUST_BASE_INFO_ID
									AND z.TRADE_INFO_ID = m.TRADE_INFO_ID
									AND x.ORIGIN_TRADE_INFO_ID = m.TRADE_INFO_ID
									AND y.RC_STATE = 'E'
									AND z.RC_STATE = 'E'
									AND m.RC_STATE = 'E'
									AND y.CUST_BASE_INFO_ID = A.CUST_BASE_INFO_ID
								) THEN
									(
										c.trade_staus IN (
											'06',
											'10',
											'11',
											'12',
											'13',
											'14'
										)
									)
								ELSE
									(
										c.trade_staus IN ('06', '10', '13')
									)
								END
							) + (
								SELECT
									ROUND(
										IFNULL(
											SUM(
												(
													SELECT
														x.net_value
													FROM
														t_pd_wealth_net_value x
													WHERE
														x.pd_wealth_id = g.pd_wealth_id
													AND x.rc_state = 'E'
													AND x.public_date = (
														SELECT
															max(y.public_date)
														FROM
															t_pd_wealth_net_value y
														WHERE
															y.pd_wealth_id = g.pd_wealth_id
														AND y.rc_state = 'E'
													)
												) * (
													SELECT
															SUM(z.SUBSCRIPTION_COPIES - FUNC_GET_ALL_REDEMPTION_SHARE (d.trade_info_id))
													FROM
														t_trade_status_info z
													WHERE
														z.trade_info_id = d.trade_info_id
													AND z.rc_state = 'E'
												)
											),
											0
										),
										2
									)
								FROM
									t_cust_base_info b,
									t_trade_cust_info c,
									t_trade_info d,
									t_trade_product_info_view e,
									t_pd_product f,
									t_pd_wealth g
								WHERE
									b.cust_base_info_id = c.cust_base_info_id
								AND c.trade_info_id = d.trade_info_id
								AND d.trade_info_id = e.TRADE_INFO_ID
								AND e.PRODUCT_ID = f.product_id
								AND f.product_id = g.product_id
								AND b.rc_state = 'E'
								AND c.RC_STATE = 'E'
								AND d.rc_state = 'E'
								AND f.RC_STATE = 'E'
								AND g.rc_state = 'E'
								AND f.product_sub_type IN ('03', '04')
								AND b.cust_base_info_id = A.CUST_BASE_INFO_ID
							)
						)
					)
						END 'remainScale'
				FROM 
				      T_CUST_BASE_INFO A LEFT JOIN T_AGENT B ON(A.Agent_Id = B.Agent_Id and B.Rc_State = 'E')
				      LEFT JOIN T_DEF_COM C ON (B.Com_Id = C.Com_Id and C.Rc_State = 'E')
				      LEFT JOIN t_Cust_Oth_Info Z ON (A.Cust_Base_Info_Id = Z.Cust_Base_Info_Id and Z.Rc_State = 'E')
				WHERE 
				    A.RC_STATE = 'E'
				<include refid="queryCustomerListCondition"/>
				order by A.CUST_BASE_INFO_ID desc
 			LIMIT #{startIndex} , #{endIndex} 
    </select> 
 	
 	<select id="queryCustomerInvestListCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM 
				      T_CUST_BASE_INFO A LEFT JOIN T_AGENT B ON(A.Agent_Id = B.Agent_Id and B.Rc_State = 'E')
				      LEFT JOIN T_DEF_COM C ON (B.Com_Id = C.Com_Id and C.Rc_State = 'E')
				      LEFT JOIN t_Cust_Oth_Info Z ON (A.Cust_Base_Info_Id = Z.Cust_Base_Info_Id and Z.Rc_State = 'E')
		WHERE 
		    A.RC_STATE = 'E'
		<include refid="queryCustomerListCondition"/>
    </select> 
    <!-- 获取股权产品分配记录 -->
    <select id="getStockProductRecord"  parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			h.DISTRIBUTE_DATE "distributeDate",
     		g.subscriptionFee "subscriptionFee",
			ROUND(g.subscriptionFee/1000000*h.DISTRIBUTE_MONEY,2) "distributeMoney"
		FROM
			t_cust_base_info a,
			t_trade_info c,
			t_trade_cust_info e,
			t_pd_product f,
			t_trade_product_info_view g,
			t_pd_wealth i,
			t_pd_wealth_stock_dis h
		WHERE
			1 = 1
		AND a.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
		AND c.TRADE_INFO_ID = e.TRADE_INFO_ID
		AND f.PRODUCT_ID = g.PRODUCT_ID
		AND c.TRADE_INFO_ID = g.TRADE_INFO_ID
		AND f.PRODUCT_ID = i.PRODUCT_ID
		AND i.PD_WEALTH_ID = H.PD_WEALTH_ID
	 	AND a.CUSTOMER_NO = #{customerNo}
	 	AND F.PRODUCT_ID = #{productId}
		AND CURDATE() >= h.DISTRIBUTE_DATE
		AND a.RC_STATE = 'e'
		AND c.RC_STATE = 'e'
		AND e.RC_STATE = 'e'
		AND f.RC_STATE = 'e'
		AND h.RC_STATE = 'e'
		AND i.RC_STATE = 'e'
		group by a.CUSTOMER_NO,h.DISTRIBUTE_DATE
		order by h.DISTRIBUTE_DATE
</select>
<select id="getStockProductSumTotal"  parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			IFNULL(SUM(ROUND(g.subscriptionFee/1000000*h.DISTRIBUTE_MONEY,2)),0) "distributeMoney"
		FROM
			t_cust_base_info a,
			t_trade_info c,
			t_trade_cust_info e,
			t_pd_product f,
			t_trade_product_info_view g,
			t_pd_wealth i,
			t_pd_wealth_stock_dis h
		WHERE
			1 = 1
		AND a.CUST_BASE_INFO_ID = e.CUST_BASE_INFO_ID
		AND c.TRADE_INFO_ID = e.TRADE_INFO_ID
		AND f.PRODUCT_ID = g.PRODUCT_ID
		AND c.TRADE_INFO_ID = g.TRADE_INFO_ID
		AND f.PRODUCT_ID = i.PRODUCT_ID
		AND i.PD_WEALTH_ID = H.PD_WEALTH_ID
	 	AND a.CUSTOMER_NO = #{customerNo}
	 	AND F.PRODUCT_ID = #{productId}
		AND h.DISTRIBUTE_DATE <![CDATA[<=]]> #{distributeDate}
 		AND a.RC_STATE = 'e'
		AND c.RC_STATE = 'e'
		AND e.RC_STATE = 'e'
		AND f.RC_STATE = 'e'
		AND h.RC_STATE = 'e'
		AND i.RC_STATE = 'e'
</select>
</mapper>  