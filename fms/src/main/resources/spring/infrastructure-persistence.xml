<?xml version="1.0"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/cache	http://www.springframework.org/schema/cache/spring-cache.xsd"
default-lazy-init="true" default-autowire="byName">

	<!-- Persistence - database, Hibernate, transactions, repository implementations -->
	<!-- 开启spring mvc、spring以及spring transaction的注解功能 -->
	<mvc:annotation-driven />
	<context:annotation-config />
	<!-- 自动bean创建以及自动依赖注入 -->
	<context:component-scan base-package="com.sinosoft" />
	<!-- <context:component-scan base-package="com.icbcaxa" /> -->
	<context:component-scan base-package="com.fms" />


	<!-- 开启缓存注解 -->
	<cache:annotation-driven cache-manager="cacheManager" />
	
	<!-- cacheManager工厂类，指定ehcache.xml的位置 -->
	<bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:configLocation="classpath:ehcache.xml" p:shared="false" />
	
	<!-- 声明cacheManager -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cacheManager-ref="cacheManagerFactory" />

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="UTF-8" />

	<bean id="jboss_dataSource1" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="url" value="${hibernate.connection.url}" />
		<property name="driverClassName" value="${hibernate.connection.driver_class}" />
		<property name="username" value="${hibernate.connection.username}" />
		<property name="password" value="${hibernate.connection.password}" />
		<property name="initialSize" value="4" />
		<property name="defaultAutoCommit" value="false" />
		
		<!-- <property name="url" value="${lis.url}" />
		<property name="driverClassName" value="${lis.driver_class}" />
		<property name="username" value="${lis.username}" />
		<property name="password" value="${lis.password}" />
		<property name="initialSize" value="4" /> -->
		<!-- <property name="defaultAutoCommit" value="false" /> -->
		
	</bean>
	<!-- JBOSS JNDI 配置-->
 	 <bean id="jboss_dataSource" class="org.springframework.jndi.JndiObjectFactoryBean" autowire="no">
		<property name="jndiName">
		<!-- 	<value>java:jboss/datasources/fmsDS</value> -->
			<value>java:comp/env/root</value>
		</property>
	</bean> 

	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="${jboss_dataSource}"/>
		<property name="mapperLocations">
			<value>classpath:ibatis/**/*Mapper.xml</value>
		</property>
		<property name="configLocation" value="classpath:ibatis/sqlMapConfig.xml"/>
	</bean>
	
	<!-- 袁正军添加mybatis的配置项  语句映射器:自动扫描   开始 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sinosoft.core.domain.model.user;
			com.sinosoft.core.db.mapper;com.sinosoft.core.service.mapper;
			com.fms.db.mapper;com.fms.service.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
  <!-- 袁正军添加mybatis的配置项  语句映射器:自动扫描   结束 -->
	<!-- 事务管理器配置, 使用hibernate事务 <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> -->

	<!-- 事务管理器配置, 使用jdbc事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="${jboss_dataSource}" />
	</bean>

	<!-- uw事务通知：注解式声明 -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!--多线程执行器-->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5"/>
		<property name="maxPoolSize" value="10"/>
		<property name="queueCapacity" value="30"/>
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="${jboss_dataSource}" />
		<property name="configLocation" value="classpath:hibernate/hibernate.cfg.xml" />
		<property name="mappingLocations">
			<value>classpath:hibernate/*.hbm.xml</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.dialect">${hibernate.connection.dialect}</prop>
				<prop key="hibernate.jdbc.batch_size">0</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
				<prop key="hibernate.connection.SetBigStringTryClob">true</prop>
			</props>
		</property>
		<property name="useTransactionAwareDataSource" value="true" />
	</bean> 

</beans>